<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="PRG_RTDSL0" Id="{0731cf32-d059-4658-a450-fc5e211c2dc2}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PRG_RTDSL0
VAR

    fbRTDSL0_Diode_MMS_01: FB_MotionStage;

    bInit: BOOL := TRUE;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Placeholder, standard simulated motion for all axes
//fbMotion1(stMotionStage := Main.M33);
//fbMotion2(stMotionStage := Main.M34);
//fbMotion3(stMotionStage := Main.M35);
//fbMotion4(stMotionStage := Main.M36);
//fbMotion5(stMotionStage := Main.M37);
//fbMotion6(stMotionStage := Main.M38);
//fbMotion7(stMotionStage := Main.M39);

//Pneumatic actuators - OTR filters

RTDSL0_MPA_01(
    ibInsertOK:= TRUE,
    ibRetractOK:= TRUE ,
    ibPMPS_OK:= TRUE ,
    ibOverrideInterlock:= ,
    q_stAct=> ,
    xMPS_OK=> ,
    xDone=> ,
    i_xReset := ,
    io_fbFFHWO := GVL.fbFastFaultOutput1,
    bEnableFF := TRUE,
);

RTDSL0_MPA_02(
    ibInsertOK:= TRUE,
    ibRetractOK:= TRUE ,
    ibPMPS_OK:= TRUE ,
    ibOverrideInterlock:= ,
    q_stAct=> ,
    xMPS_OK=> ,
    xDone=> ,
    i_xReset := ,
    io_fbFFHWO := GVL.fbFastFaultOutput1,
    bEnableFF := TRUE,
);

RTDSL0_MPA_03(
    ibInsertOK:= TRUE,
    ibRetractOK:= TRUE ,
    ibPMPS_OK:= TRUE ,
    ibOverrideInterlock:= ,
    q_stAct=> ,
    xMPS_OK=> ,
    xDone=> ,
    i_xReset := ,
    io_fbFFHWO := GVL.fbFastFaultOutput1,
    bEnableFF := FALSE,
);
//  init the motion stages parameters
IF ( bInit) THEN
    Main.M33.bHardwareEnable := TRUE;
    Main.M33.bPowerSelf :=TRUE;
    Main.M33.nBrakeMode := ENUM_StageBrakeMode.NO_BRAKE;
    (* uncomment when mccallister goes from RTDSK0 -> RTDSL0
    Main.M34.bHardwareEnable := TRUE;
    Main.M34.bPowerSelf :=TRUE;
    Main.M34.nBrakeMode := ENUM_StageBrakeMode.NO_BRAKE;

    Main.M35.bHardwareEnable := TRUE;
    Main.M35.bPowerSelf :=TRUE;
    Main.M35.nBrakeMode := ENUM_StageBrakeMode.NO_BRAKE;

    Main.M36.bHardwareEnable := TRUE;
    Main.M36.bPowerSelf :=TRUE;
    Main.M36.nBrakeMode := ENUM_StageBrakeMode.NO_BRAKE;

    //LDM motor
    Main.M37.bHardwareEnable := TRUE;
    Main.M37.bPowerSelf :=TRUE;
    Main.M37.nBrakeMode := ENUM_StageBrakeMode.NO_BRAKE;
    *)
    Main.M33.nHomingMode := ENUM_EpicsHomeCmd.HIGH_LIMIT;
    //uncomment when mccallister gets moved RTDSK0->RTDSL0
    //Main.M34.nHomingMode := ENUM_EpicsHomeCmd.HIGH_LIMIT;
    //Main.M35.nHomingMode := ENUM_EpicsHomeCmd.HIGH_LIMIT;
    //Main.M36.nHomingMode := ENUM_EpicsHomeCmd.HIGH_LIMIT;
    Main.M37.nHomingMode := ENUM_EpicsHomeCmd.HIGH_LIMIT;

        bInit := FALSE;

END_IF


fbRTDSL0_Diode_MMS_01 (stMotionStage := Main.M33);
//uncomment when mccallister stage RTDSK0 -> RTDSL0
//fbRTDSL0_SCRP_MMS_01 (stMotionStage := Main.M34);
//fbRTDSL0_SCRP_MMS_02 (stMotionStage := Main.M35);
//fbRTDSL0_SCRP_MMS_03 (stMotionStage := Main.M36);
//fbRTDSL0_LDM_MMS_01 (stMotionStage := Main.M37);
//uncomment when mccallister stage RTDSK0->RTDSL0
//fbRTDSK0_SCRP_LED_01 (enumXPIM := Main.LED1);


]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>