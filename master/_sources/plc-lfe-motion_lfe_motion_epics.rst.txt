
Data Types
----------


   
DUT_SATT_Filter
^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - $(PREFIX):THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - $(PREFIX):TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | io: input


   
FB_MPA
^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ERROR
      - bo
      - $(SYMBOL).q_stAct.bErrorPresent
      - | io: output


    * - $(PREFIX):ERROR_RBV
      - bi
      - $(SYMBOL).q_stAct.bErrorPresent
      - | io: output


    * - $(PREFIX):FF_Reset
      - bo
      - $(SYMBOL).i_xReset
      - | io: output


    * - $(PREFIX):FF_Reset_RBV
      - bi
      - $(SYMBOL).i_xReset
      - | io: output


    * - $(PREFIX):ILKOK_RBV
      - bi
      - $(SYMBOL).q_stAct.bILK_OK
      - | io: input


    * - $(PREFIX):IN_CMD
      - bo
      - $(SYMBOL).q_stAct.bInsert_SW
      - | io: output


    * - $(PREFIX):IN_CMD_RBV
      - bi
      - $(SYMBOL).q_stAct.bInsert_SW
      - | io: output


    * - $(PREFIX):IN_RBV
      - bi
      - $(SYMBOL).q_stAct.i_bInLS
      - | io: input


    * - $(PREFIX):INSERT_DO_RBV
      - bi
      - $(SYMBOL).q_stAct.q_bRetract
      - | io: input


    * - $(PREFIX):INSERT_OK_RBV
      - bi
      - $(SYMBOL).q_stAct.bInsertOK
      - | io: input


    * - $(PREFIX):MOT_DONE
      - bo
      - $(SYMBOL).xDone
      - | io: output


    * - $(PREFIX):MOT_DONE_RBV
      - bi
      - $(SYMBOL).xDone
      - | io: output


    * - $(PREFIX):MPS_FAULT
      - bo
      - $(SYMBOL).xMPS_OK
      - | io: output


    * - $(PREFIX):MPS_FAULT_RBV
      - bi
      - $(SYMBOL).xMPS_OK
      - | io: output


    * - $(PREFIX):OUT_CMD
      - bo
      - $(SYMBOL).q_stAct.bRetract_SW
      - | io: output


    * - $(PREFIX):OUT_CMD_RBV
      - bi
      - $(SYMBOL).q_stAct.bRetract_SW
      - | io: output


    * - $(PREFIX):OUT_RBV
      - bi
      - $(SYMBOL).q_stAct.i_bOutLS
      - | io: input


    * - $(PREFIX):POS_STATE_RBV
      - mbbi
      - $(SYMBOL).q_stAct.eState
      - | field: ONST INSERTED
        | field: THST INVALID
        | field: TWST MOVING
        | field: ZRST RETRACTED
        | io: input
        | type: mbbi


    * - $(PREFIX):RETRACT_DO_RBV
      - bi
      - $(SYMBOL).q_stAct.q_bInsert
      - | io: input


    * - $(PREFIX):RETRACT_OK_RBV
      - bi
      - $(SYMBOL).q_stAct.bRetractOK
      - | io: input


 
FB_SLITS
^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ACTUAL_XCENTER
      - ao
      - $(SYMBOL).rActCenterX
      - | io: output


    * - $(PREFIX):ACTUAL_XCENTER_RBV
      - ai
      - $(SYMBOL).rActCenterX
      - | io: output


    * - $(PREFIX):ACTUAL_XWIDTH
      - ao
      - $(SYMBOL).rActApertureSizeX
      - | io: output


    * - $(PREFIX):ACTUAL_XWIDTH_RBV
      - ai
      - $(SYMBOL).rActApertureSizeX
      - | io: output


    * - $(PREFIX):ACTUAL_YCENTER
      - ao
      - $(SYMBOL).rActCenterY
      - | io: output


    * - $(PREFIX):ACTUAL_YCENTER_RBV
      - ai
      - $(SYMBOL).rActCenterY
      - | io: output


    * - $(PREFIX):ACTUAL_YWIDTH
      - ao
      - $(SYMBOL).rActApertureSizeY
      - | io: output


    * - $(PREFIX):ACTUAL_YWIDTH_RBV
      - ai
      - $(SYMBOL).rActApertureSizeY
      - | io: output


    * - $(PREFIX):BLOCK
      - bo
      - $(SYMBOL).bBlock
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):BLOCK_RBV
      - bi
      - $(SYMBOL).bBlock
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):BOTTOM:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbBottom.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BOTTOM:BUSY_RBV
      - bi
      - $(SYMBOL).fbBottom.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BOTTOM:DMOV_RBV
      - bi
      - $(SYMBOL).fbBottom.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BOTTOM:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):BOTTOM:ERR_RBV
      - bi
      - $(SYMBOL).fbBottom.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BOTTOM:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbBottom.sError
      - | io: input


    * - $(PREFIX):BOTTOM:GO
      - bo
      - $(SYMBOL).fbBottom.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):BOTTOM:GO_RBV
      - bi
      - $(SYMBOL).fbBottom.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):BOTTOM:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):BOTTOM:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):BOTTOM:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):BOTTOM:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):BOTTOM:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):BOTTOM:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):CLOSE
      - bo
      - $(SYMBOL).bClose
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):CLOSE_RBV
      - bi
      - $(SYMBOL).bClose
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):NORTH:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbNorth.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):NORTH:BUSY_RBV
      - bi
      - $(SYMBOL).fbNorth.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):NORTH:DMOV_RBV
      - bi
      - $(SYMBOL).fbNorth.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):NORTH:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):NORTH:ERR_RBV
      - bi
      - $(SYMBOL).fbNorth.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):NORTH:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbNorth.sError
      - | io: input


    * - $(PREFIX):NORTH:GO
      - bo
      - $(SYMBOL).fbNorth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):NORTH:GO_RBV
      - bi
      - $(SYMBOL).fbNorth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):NORTH:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):NORTH:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):NORTH:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):NORTH:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):NORTH:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):NORTH:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):Offset_Top
      - ao
      - $(SYMBOL).rEncoderOffsetTop
      - | io: output


    * - $(PREFIX):Offset_Top_RBV
      - ai
      - $(SYMBOL).rEncoderOffsetTop
      - | io: output


    * - $(PREFIX):OPEN
      - bo
      - $(SYMBOL).bOpen
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):OPEN_RBV
      - bi
      - $(SYMBOL).bOpen
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):PMPS_OK_RBV
      - bi
      - $(SYMBOL).bMoveOk
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbSouth.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:BUSY_RBV
      - bi
      - $(SYMBOL).fbSouth.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:DMOV_RBV
      - bi
      - $(SYMBOL).fbSouth.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):SOUTH:ERR_RBV
      - bi
      - $(SYMBOL).fbSouth.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbSouth.sError
      - | io: input


    * - $(PREFIX):SOUTH:GO
      - bo
      - $(SYMBOL).fbSouth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SOUTH:GO_RBV
      - bi
      - $(SYMBOL).fbSouth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SOUTH:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SOUTH:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):SOUTH:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SOUTH:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SOUTH:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):SOUTH:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):TOP:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbTop.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TOP:BUSY_RBV
      - bi
      - $(SYMBOL).fbTop.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TOP:DMOV_RBV
      - bi
      - $(SYMBOL).fbTop.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TOP:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):TOP:ERR_RBV
      - bi
      - $(SYMBOL).fbTop.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TOP:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbTop.sError
      - | io: input


    * - $(PREFIX):TOP:GO
      - bo
      - $(SYMBOL).fbTop.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):TOP:GO_RBV
      - bi
      - $(SYMBOL).fbTop.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):TOP:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):TOP:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):TOP:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):TOP:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):TOP:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):TOP:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):XCEN_REQ
      - ao
      - $(SYMBOL).rReqCenterX
      - | io: output


    * - $(PREFIX):XCEN_REQ_RBV
      - ai
      - $(SYMBOL).rReqCenterX
      - | io: output


    * - $(PREFIX):XCEN_SETZERO
      - bo
      - $(SYMBOL).rSetCenterX
      - | io: output


    * - $(PREFIX):XCEN_SETZERO_RBV
      - bi
      - $(SYMBOL).rSetCenterX
      - | io: output


    * - $(PREFIX):XWID_REQ
      - ao
      - $(SYMBOL).rReqApertureSizeX
      - | io: output


    * - $(PREFIX):XWID_REQ_RBV
      - ai
      - $(SYMBOL).rReqApertureSizeX
      - | io: output


    * - $(PREFIX):YCEN_REQ
      - ao
      - $(SYMBOL).rReqCenterY
      - | io: output


    * - $(PREFIX):YCEN_REQ_RBV
      - ai
      - $(SYMBOL).rReqCenterY
      - | io: output


    * - $(PREFIX):YCEN_SETZERO
      - bo
      - $(SYMBOL).rSetCenterY
      - | io: output


    * - $(PREFIX):YCEN_SETZERO_RBV
      - bi
      - $(SYMBOL).rSetCenterY
      - | io: output


    * - $(PREFIX):YWID_REQ
      - ao
      - $(SYMBOL).rReqApertureSizeY
      - | io: output


    * - $(PREFIX):YWID_REQ_RBV
      - ai
      - $(SYMBOL).rReqApertureSizeY
      - | io: output


    * - $(PREFIX):ZeroOffset_Bottom
      - ao
      - $(SYMBOL).rEncoderOffsetBottom
      - | io: output


    * - $(PREFIX):ZeroOffset_Bottom_RBV
      - ai
      - $(SYMBOL).rEncoderOffsetBottom
      - | io: output


    * - $(PREFIX):ZeroOffset_North
      - ao
      - $(SYMBOL).rEncoderOffsetNorth
      - | io: output


    * - $(PREFIX):ZeroOffset_North_RBV
      - ai
      - $(SYMBOL).rEncoderOffsetNorth
      - | io: output


    * - $(PREFIX):ZeroOffset_South
      - ao
      - $(SYMBOL).rEncoderOffsetSouth
      - | io: output


    * - $(PREFIX):ZeroOffset_South_RBV
      - ai
      - $(SYMBOL).rEncoderOffsetSouth
      - | io: output


 
FB_SLITS_POWER
^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ACTUAL_XCENTER
      - ao
      - $(SYMBOL).rActCenterX
      - | io: output


    * - $(PREFIX):ACTUAL_XCENTER_RBV
      - ai
      - $(SYMBOL).rActCenterX
      - | io: output


    * - $(PREFIX):ACTUAL_XWIDTH
      - ao
      - $(SYMBOL).rActApertureSizeX
      - | io: output


    * - $(PREFIX):ACTUAL_XWIDTH_RBV
      - ai
      - $(SYMBOL).rActApertureSizeX
      - | io: output


    * - $(PREFIX):ACTUAL_YCENTER
      - ao
      - $(SYMBOL).rActCenterY
      - | io: output


    * - $(PREFIX):ACTUAL_YCENTER_RBV
      - ai
      - $(SYMBOL).rActCenterY
      - | io: output


    * - $(PREFIX):ACTUAL_YWIDTH
      - ao
      - $(SYMBOL).rActApertureSizeY
      - | io: output


    * - $(PREFIX):ACTUAL_YWIDTH_RBV
      - ai
      - $(SYMBOL).rActApertureSizeY
      - | io: output


    * - $(PREFIX):BLOCK
      - bo
      - $(SYMBOL).bBlock
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):BLOCK_RBV
      - bi
      - $(SYMBOL).bBlock
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):BOTTOM:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbBottom.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BOTTOM:BUSY_RBV
      - bi
      - $(SYMBOL).fbBottom.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BOTTOM:DMOV_RBV
      - bi
      - $(SYMBOL).fbBottom.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BOTTOM:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):BOTTOM:ERR_RBV
      - bi
      - $(SYMBOL).fbBottom.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BOTTOM:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbBottom.sError
      - | io: input


    * - $(PREFIX):BOTTOM:GO
      - bo
      - $(SYMBOL).fbBottom.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):BOTTOM:GO_RBV
      - bi
      - $(SYMBOL).fbBottom.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):BOTTOM:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):BOTTOM:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):BOTTOM:RTD:01:CONN_RBV
      - bi
      - $(SYMBOL).RTD_Bottom_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):BOTTOM:RTD:01:ERR_RBV
      - bi
      - $(SYMBOL).RTD_Bottom_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BOTTOM:RTD:01:TEMP_RBV
      - ai
      - $(SYMBOL).RTD_Bottom_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):BOTTOM:RTD:02:CONN_RBV
      - bi
      - $(SYMBOL).RTD_Bottom_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):BOTTOM:RTD:02:ERR_RBV
      - bi
      - $(SYMBOL).RTD_Bottom_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BOTTOM:RTD:02:TEMP_RBV
      - ai
      - $(SYMBOL).RTD_Bottom_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):BOTTOM:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):BOTTOM:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):BOTTOM:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):BOTTOM:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):CLOSE
      - bo
      - $(SYMBOL).bClose
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):CLOSE_RBV
      - bi
      - $(SYMBOL).bClose
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):FSW:FLOW_OK
      - bo
      - $(SYMBOL).fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):FSW:FLOW_OK_RBV
      - bi
      - $(SYMBOL).fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):NORTH:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbNorth.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):NORTH:BUSY_RBV
      - bi
      - $(SYMBOL).fbNorth.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):NORTH:DMOV_RBV
      - bi
      - $(SYMBOL).fbNorth.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):NORTH:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):NORTH:ERR_RBV
      - bi
      - $(SYMBOL).fbNorth.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):NORTH:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbNorth.sError
      - | io: input


    * - $(PREFIX):NORTH:GO
      - bo
      - $(SYMBOL).fbNorth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):NORTH:GO_RBV
      - bi
      - $(SYMBOL).fbNorth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):NORTH:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):NORTH:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):NORTH:RTD:01:CONN_RBV
      - bi
      - $(SYMBOL).RTD_North_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):NORTH:RTD:01:ERR_RBV
      - bi
      - $(SYMBOL).RTD_North_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):NORTH:RTD:01:TEMP_RBV
      - ai
      - $(SYMBOL).RTD_North_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):NORTH:RTD:02:CONN_RBV
      - bi
      - $(SYMBOL).RTD_North_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):NORTH:RTD:02:ERR_RBV
      - bi
      - $(SYMBOL).RTD_North_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):NORTH:RTD:02:TEMP_RBV
      - ai
      - $(SYMBOL).RTD_North_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):NORTH:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):NORTH:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):NORTH:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):NORTH:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):Offset_Top
      - ao
      - $(SYMBOL).rEncoderOffsetTop
      - | io: output


    * - $(PREFIX):Offset_Top_RBV
      - ai
      - $(SYMBOL).rEncoderOffsetTop
      - | io: output


    * - $(PREFIX):OPEN
      - bo
      - $(SYMBOL).bOpen
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):OPEN_RBV
      - bi
      - $(SYMBOL).bOpen
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):PMPS_OK_RBV
      - bi
      - $(SYMBOL).bMoveOk
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbSouth.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:BUSY_RBV
      - bi
      - $(SYMBOL).fbSouth.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:DMOV_RBV
      - bi
      - $(SYMBOL).fbSouth.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):SOUTH:ERR_RBV
      - bi
      - $(SYMBOL).fbSouth.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbSouth.sError
      - | io: input


    * - $(PREFIX):SOUTH:GO
      - bo
      - $(SYMBOL).fbSouth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SOUTH:GO_RBV
      - bi
      - $(SYMBOL).fbSouth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SOUTH:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SOUTH:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):SOUTH:RTD:01:CONN_RBV
      - bi
      - $(SYMBOL).RTD_South_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SOUTH:RTD:01:ERR_RBV
      - bi
      - $(SYMBOL).RTD_South_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:RTD:01:TEMP_RBV
      - ai
      - $(SYMBOL).RTD_South_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SOUTH:RTD:02:CONN_RBV
      - bi
      - $(SYMBOL).RTD_South_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SOUTH:RTD:02:ERR_RBV
      - bi
      - $(SYMBOL).RTD_South_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:RTD:02:TEMP_RBV
      - ai
      - $(SYMBOL).RTD_South_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SOUTH:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SOUTH:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SOUTH:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):SOUTH:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):TOP:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbTop.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TOP:BUSY_RBV
      - bi
      - $(SYMBOL).fbTop.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TOP:DMOV_RBV
      - bi
      - $(SYMBOL).fbTop.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TOP:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):TOP:ERR_RBV
      - bi
      - $(SYMBOL).fbTop.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TOP:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbTop.sError
      - | io: input


    * - $(PREFIX):TOP:GO
      - bo
      - $(SYMBOL).fbTop.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):TOP:GO_RBV
      - bi
      - $(SYMBOL).fbTop.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):TOP:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):TOP:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):TOP:RTD:01:CONN_RBV
      - bi
      - $(SYMBOL).RTD_TOP_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):TOP:RTD:01:ERR_RBV
      - bi
      - $(SYMBOL).RTD_TOP_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TOP:RTD:01:TEMP_RBV
      - ai
      - $(SYMBOL).RTD_TOP_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):TOP:RTD:02:CONN_RBV
      - bi
      - $(SYMBOL).RTD_TOP_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):TOP:RTD:02:ERR_RBV
      - bi
      - $(SYMBOL).RTD_TOP_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TOP:RTD:02:TEMP_RBV
      - ai
      - $(SYMBOL).RTD_TOP_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):TOP:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):TOP:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):TOP:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):TOP:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):XCEN_REQ
      - ao
      - $(SYMBOL).rReqCenterX
      - | io: output


    * - $(PREFIX):XCEN_REQ_RBV
      - ai
      - $(SYMBOL).rReqCenterX
      - | io: output


    * - $(PREFIX):XCEN_SETZERO
      - bo
      - $(SYMBOL).rSetCenterX
      - | io: output


    * - $(PREFIX):XCEN_SETZERO_RBV
      - bi
      - $(SYMBOL).rSetCenterX
      - | io: output


    * - $(PREFIX):XWID_REQ
      - ao
      - $(SYMBOL).rReqApertureSizeX
      - | io: output


    * - $(PREFIX):XWID_REQ_RBV
      - ai
      - $(SYMBOL).rReqApertureSizeX
      - | io: output


    * - $(PREFIX):YCEN_REQ
      - ao
      - $(SYMBOL).rReqCenterY
      - | io: output


    * - $(PREFIX):YCEN_REQ_RBV
      - ai
      - $(SYMBOL).rReqCenterY
      - | io: output


    * - $(PREFIX):YCEN_SETZERO
      - bo
      - $(SYMBOL).rSetCenterY
      - | io: output


    * - $(PREFIX):YCEN_SETZERO_RBV
      - bi
      - $(SYMBOL).rSetCenterY
      - | io: output


    * - $(PREFIX):YWID_REQ
      - ao
      - $(SYMBOL).rReqApertureSizeY
      - | io: output


    * - $(PREFIX):YWID_REQ_RBV
      - ai
      - $(SYMBOL).rReqApertureSizeY
      - | io: output


    * - $(PREFIX):ZeroOffset_Bottom
      - ao
      - $(SYMBOL).rEncoderOffsetBottom
      - | io: output


    * - $(PREFIX):ZeroOffset_Bottom_RBV
      - ai
      - $(SYMBOL).rEncoderOffsetBottom
      - | io: output


    * - $(PREFIX):ZeroOffset_North
      - ao
      - $(SYMBOL).rEncoderOffsetNorth
      - | io: output


    * - $(PREFIX):ZeroOffset_North_RBV
      - ai
      - $(SYMBOL).rEncoderOffsetNorth
      - | io: output


    * - $(PREFIX):ZeroOffset_South
      - ao
      - $(SYMBOL).rEncoderOffsetSouth
      - | io: output


    * - $(PREFIX):ZeroOffset_South_RBV
      - ai
      - $(SYMBOL).rEncoderOffsetSouth
      - | io: output


 
GVL
^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:001:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:002:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:003:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:004:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:005:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:006:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:007:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:008:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:009:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:010:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:011:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:012:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:013:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:014:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:015:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:016:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:017:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:018:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:019:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:AP:Entry:020:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbiterID_RBV
      - longin
      - Arbiter ID for elev. req.
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:01:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:01:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:01:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:02:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:02:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:02:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:03:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:03:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:03:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:04:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:04:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:04:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:BeamClass_RBV
      - longin
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:BeamClassRanges_RBV
      - longin
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:eVRanges_RBV
      - longin
      - Arbitrated BP
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:MachineMode_RBV
      - longin
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:PhotonEnergy_RBV
      - ai
      - Arbitrated BP
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:Rate_RBV
      - longin
      - Arbitrated BP
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:Transmission_RBV
      - ai
      - Arbitrated BP
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:Valid_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:ArbitratedBP:Veto_RBV
      - waveform
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:01:CohortCounter_RBV
      - longin
      - Intrnl cohort counter
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:001:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:002:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:003:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:004:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:005:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:006:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:007:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:008:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:009:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:010:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:011:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:012:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:013:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:014:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:015:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:016:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:017:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:018:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:019:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:AP:Entry:020:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbiterID_RBV
      - longin
      - Arbiter ID for elev. req.
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:01:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:01:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:01:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:02:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:02:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:02:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:03:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:03:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:03:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:04:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:04:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:04:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:BeamClass_RBV
      - longin
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:BeamClassRanges_RBV
      - longin
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:eVRanges_RBV
      - longin
      - Arbitrated BP
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:MachineMode_RBV
      - longin
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:PhotonEnergy_RBV
      - ai
      - Arbitrated BP
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:Rate_RBV
      - longin
      - Arbitrated BP
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:Transmission_RBV
      - ai
      - Arbitrated BP
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:Valid_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:ArbitratedBP:Veto_RBV
      - waveform
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:ARB:02:CohortCounter_RBV
      - longin
      - Intrnl cohort counter
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:ClearFault
      - bo
      - Might be overidden by PLC writes
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:ClearFault_RBV
      - bi
      - Might be overidden by PLC writes
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:EnableVeto
      - bo
      - $(SYMBOL).fbFastFaultOutput1.i_xVeto
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:EnableVeto_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.i_xVeto
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FaultHWO_RBV
      - bi
      - Hardware Output Status
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0001:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[1].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0002:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[2].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0003:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[3].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0004:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[4].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0005:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[5].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0006:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[6].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0007:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[7].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0008:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[8].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0009:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[9].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0010:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[10].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0011:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[11].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0012:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[12].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0013:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[13].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0014:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[14].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0015:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[15].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0016:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[16].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0017:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[17].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0018:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[18].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0019:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[19].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0020:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[20].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0021:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[21].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0022:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[22].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0023:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[23].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0024:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[24].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0025:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[25].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0026:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[26].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0027:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[27].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0028:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[28].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0029:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[29].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0030:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[30].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0031:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[31].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0032:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[32].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0033:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[33].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0034:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[34].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0035:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[35].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0036:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[36].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0037:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[37].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0038:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[38].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0039:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[39].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0040:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[40].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0041:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[41].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0042:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[42].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0043:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[43].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0044:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[44].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0045:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[45].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0046:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[46].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0047:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[47].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0048:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[48].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0049:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[49].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0050:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[50].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0051:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[51].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0052:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[52].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0053:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[53].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0054:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[54].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0055:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[55].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0056:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[56].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0057:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[57].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0058:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[58].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0059:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[59].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0060:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[60].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0061:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[61].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0062:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[62].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0063:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[63].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0064:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[64].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0065:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[65].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0066:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[66].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0067:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[67].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0068:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[68].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0069:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[69].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0070:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[70].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0071:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[71].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0072:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[72].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0073:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[73].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0074:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[74].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0075:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[75].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0076:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[76].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0077:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[77].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0078:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[78].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0079:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[79].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0080:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[80].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0081:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[81].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0082:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[82].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0083:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[83].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0084:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[84].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0085:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[85].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0086:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[86].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0087:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[87].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0088:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[88].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0089:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[89].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0090:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[90].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0091:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[91].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0092:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[92].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0093:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[93].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0094:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[94].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0095:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[95].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0096:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[96].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0097:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[97].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0098:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[98].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0099:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[99].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:FF:0100:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.astFF[100].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.xOK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:RegistrationFailure
      - bo
      - $(SYMBOL).fbFastFaultOutput1.xFastFaultRegFail
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:01:RegistrationFailure_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput1.xFastFaultRegFail
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:ClearFault
      - bo
      - Might be overidden by PLC writes
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:ClearFault_RBV
      - bi
      - Might be overidden by PLC writes
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:EnableVeto
      - bo
      - $(SYMBOL).fbFastFaultOutput2.i_xVeto
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:EnableVeto_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.i_xVeto
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FaultHWO_RBV
      - bi
      - Hardware Output Status
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0001:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[1].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0002:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[2].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0003:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[3].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0004:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[4].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0005:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[5].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0006:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[6].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0007:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[7].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0008:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[8].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0009:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[9].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0010:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[10].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0011:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[11].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0012:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[12].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0013:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[13].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0014:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[14].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0015:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[15].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0016:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[16].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0017:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[17].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0018:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[18].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0019:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[19].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0020:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[20].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0021:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[21].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0022:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[22].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0023:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[23].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0024:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[24].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0025:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[25].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0026:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[26].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0027:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[27].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0028:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[28].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0029:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[29].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0030:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[30].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0031:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[31].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0032:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[32].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0033:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[33].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0034:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[34].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0035:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[35].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0036:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[36].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0037:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[37].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0038:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[38].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0039:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[39].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0040:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[40].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0041:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[41].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0042:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[42].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0043:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[43].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0044:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[44].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0045:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[45].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0046:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[46].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0047:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[47].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0048:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[48].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0049:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[49].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0050:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[50].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0051:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[51].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0052:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[52].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0053:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[53].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0054:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[54].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0055:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[55].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0056:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[56].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0057:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[57].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0058:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[58].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0059:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[59].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0060:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[60].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0061:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[61].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0062:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[62].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0063:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[63].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0064:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[64].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0065:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[65].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0066:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[66].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0067:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[67].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0068:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[68].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0069:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[69].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0070:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[70].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0071:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[71].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0072:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[72].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0073:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[73].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0074:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[74].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0075:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[75].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0076:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[76].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0077:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[77].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0078:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[78].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0079:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[79].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0080:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[80].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0081:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[81].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0082:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[82].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0083:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[83].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0084:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[84].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0085:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[85].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0086:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[86].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0087:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[87].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0088:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[88].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0089:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[89].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0090:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[90].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0091:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[91].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0092:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[92].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0093:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[93].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0094:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[94].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0095:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[95].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0096:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[96].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0097:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[97].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0098:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[98].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0099:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[99].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:BeamPermitted_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].BeamPermitted
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:Info:Desc_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].Info.Desc
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:Info:DevName_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].Info.DevName
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].Info.InfoString
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:Info:InUse_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].Info.InUse
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:Info:Path_RBV
      - waveform
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].Info.sPath
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].Info.TypeCode
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].OK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:Activate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].Ovrd.Activate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].Ovrd.Active
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:Deactivate
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:Duration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].Ovrd.Duration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:Expiration
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:StartDT
      - longout
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:Reset
      - bo
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:FF:0100:Reset_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.astFF[100].Reset
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:OK_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.xOK
      - | io: input


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:RegistrationFailure
      - bo
      - $(SYMBOL).fbFastFaultOutput2.xFastFaultRegFail
      - | io: output


    * - $(PREFIX):PLC:LFE:MOTION:FFO:02:RegistrationFailure_RBV
      - bi
      - $(SYMBOL).fbFastFaultOutput2.xFastFaultRegFail
      - | io: output


   
LCLS_General.DUT_EPS
^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


 
LCLS_General.FB_AnalogInput
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):OFF
      - ao
      - $(SYMBOL).fOffset
      - | io: output


    * - $(PREFIX):OFF_RBV
      - ai
      - $(SYMBOL).fOffset
      - | io: output


    * - $(PREFIX):RES
      - ao
      - $(SYMBOL).fResolution
      - | io: output


    * - $(PREFIX):RES_RBV
      - ai
      - $(SYMBOL).fResolution
      - | io: output


    * - $(PREFIX):VAL_RBV
      - ai
      - $(SYMBOL).fReal
      - | io: input


   
LCLS_General.FB_EL6_Com
^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):CMD
      - waveform
      - $(SYMBOL).sCmd
      - | io: output


    * - $(PREFIX):CMD_RBV
      - waveform
      - $(SYMBOL).sCmd
      - | io: output


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | io: input


    * - $(PREFIX):ERR:RECV_RBV
      - mbbi
      - $(SYMBOL).eRecvErrorID
      - | io: input


    * - $(PREFIX):ERR:SEND_RBV
      - mbbi
      - $(SYMBOL).eSendErrorID
      - | io: input


    * - $(PREFIX):ERR:SER_RBV
      - mbbi
      - $(SYMBOL).eSerialLineErrorID
      - | io: input


    * - $(PREFIX):RESP_RBV
      - waveform
      - $(SYMBOL).sResponse
      - | io: input


    * - $(PREFIX):SEND
      - bo
      - $(SYMBOL).bSend
      - | io: output


    * - $(PREFIX):SEND_RBV
      - bi
      - $(SYMBOL).bSend
      - | io: output


    
LCLS_General.FB_Listener
^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):AlarmsCleared_RBV
      - longin
      - $(SYMBOL).nCntAlarmsCleared
      - | io: input


    * - $(PREFIX):AlarmsConfirmed_RBV
      - longin
      - $(SYMBOL).nCntAlarmsConfirmed
      - | io: input


    * - $(PREFIX):AlarmsRaised_RBV
      - longin
      - $(SYMBOL).nCntAlarmsRaised
      - | io: input


    * - $(PREFIX):Log:EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):Log:EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):Log:Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):Log:Message_RBV
      - waveform
      - $(SYMBOL).stEventInfo.msg
      - | io: input


    * - $(PREFIX):Log:MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):Log:MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):Log:Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):Log:Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):Log:Source_RBV
      - waveform
      - $(SYMBOL).stEventInfo.source
      - | io: input


    * - $(PREFIX):Log:Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


    * - $(PREFIX):LogToVisualStudio
      - bo
      - $(SYMBOL).bLogToVisualStudio
      - | io: output


    * - $(PREFIX):LogToVisualStudio_RBV
      - bi
      - $(SYMBOL).bLogToVisualStudio
      - | io: output


    * - $(PREFIX):MessagesSent_RBV
      - longin
      - $(SYMBOL).nCntMessagesSent
      - | io: input


    * - $(PREFIX):MinSeverity
      - mbbo
      - $(SYMBOL).eMinSeverity
      - | io: output


    * - $(PREFIX):MinSeverity_RBV
      - mbbi
      - $(SYMBOL).eMinSeverity
      - | io: output


 
LCLS_General.FB_LogHandler
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ADS:AlarmsCleared_RBV
      - longin
      - $(SYMBOL).fbTcAdsListener.nCntAlarmsCleared
      - | io: input


    * - $(PREFIX):ADS:AlarmsConfirmed_RBV
      - longin
      - $(SYMBOL).fbTcAdsListener.nCntAlarmsConfirmed
      - | io: input


    * - $(PREFIX):ADS:AlarmsRaised_RBV
      - longin
      - $(SYMBOL).fbTcAdsListener.nCntAlarmsRaised
      - | io: input


    * - $(PREFIX):ADS:Log:EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):ADS:Log:EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):ADS:Log:Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):ADS:Log:Message_RBV
      - waveform
      - $(SYMBOL).fbTcAdsListener.stEventInfo.msg
      - | io: input


    * - $(PREFIX):ADS:Log:MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):ADS:Log:MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):ADS:Log:Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):ADS:Log:Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):ADS:Log:Source_RBV
      - waveform
      - $(SYMBOL).fbTcAdsListener.stEventInfo.source
      - | io: input


    * - $(PREFIX):ADS:Log:Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


    * - $(PREFIX):ADS:LogToVisualStudio
      - bo
      - $(SYMBOL).fbTcAdsListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):ADS:LogToVisualStudio_RBV
      - bi
      - $(SYMBOL).fbTcAdsListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):ADS:MessagesSent_RBV
      - longin
      - $(SYMBOL).fbTcAdsListener.nCntMessagesSent
      - | io: input


    * - $(PREFIX):ADS:MinSeverity
      - mbbo
      - $(SYMBOL).fbTcAdsListener.eMinSeverity
      - | io: output


    * - $(PREFIX):ADS:MinSeverity_RBV
      - mbbi
      - $(SYMBOL).fbTcAdsListener.eMinSeverity
      - | io: output


    * - $(PREFIX):LCLS:AlarmsCleared_RBV
      - longin
      - $(SYMBOL).fbLCLSListener.nCntAlarmsCleared
      - | io: input


    * - $(PREFIX):LCLS:AlarmsConfirmed_RBV
      - longin
      - $(SYMBOL).fbLCLSListener.nCntAlarmsConfirmed
      - | io: input


    * - $(PREFIX):LCLS:AlarmsRaised_RBV
      - longin
      - $(SYMBOL).fbLCLSListener.nCntAlarmsRaised
      - | io: input


    * - $(PREFIX):LCLS:Log:EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):LCLS:Log:EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):LCLS:Log:Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):LCLS:Log:Message_RBV
      - waveform
      - $(SYMBOL).fbLCLSListener.stEventInfo.msg
      - | io: input


    * - $(PREFIX):LCLS:Log:MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):LCLS:Log:MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):LCLS:Log:Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):LCLS:Log:Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):LCLS:Log:Source_RBV
      - waveform
      - $(SYMBOL).fbLCLSListener.stEventInfo.source
      - | io: input


    * - $(PREFIX):LCLS:Log:Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


    * - $(PREFIX):LCLS:LogToVisualStudio
      - bo
      - $(SYMBOL).fbLCLSListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):LCLS:LogToVisualStudio_RBV
      - bi
      - $(SYMBOL).fbLCLSListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):LCLS:MessagesSent_RBV
      - longin
      - $(SYMBOL).fbLCLSListener.nCntMessagesSent
      - | io: input


    * - $(PREFIX):LCLS:MinSeverity
      - mbbo
      - $(SYMBOL).fbLCLSListener.eMinSeverity
      - | io: output


    * - $(PREFIX):LCLS:MinSeverity_RBV
      - mbbi
      - $(SYMBOL).fbLCLSListener.eMinSeverity
      - | io: output


    * - $(PREFIX):Router:AlarmsCleared_RBV
      - longin
      - $(SYMBOL).fbTcRouterListener.nCntAlarmsCleared
      - | io: input


    * - $(PREFIX):Router:AlarmsConfirmed_RBV
      - longin
      - $(SYMBOL).fbTcRouterListener.nCntAlarmsConfirmed
      - | io: input


    * - $(PREFIX):Router:AlarmsRaised_RBV
      - longin
      - $(SYMBOL).fbTcRouterListener.nCntAlarmsRaised
      - | io: input


    * - $(PREFIX):Router:Log:EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):Router:Log:EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):Router:Log:Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):Router:Log:Message_RBV
      - waveform
      - $(SYMBOL).fbTcRouterListener.stEventInfo.msg
      - | io: input


    * - $(PREFIX):Router:Log:MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):Router:Log:MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):Router:Log:Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):Router:Log:Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):Router:Log:Source_RBV
      - waveform
      - $(SYMBOL).fbTcRouterListener.stEventInfo.source
      - | io: input


    * - $(PREFIX):Router:Log:Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


    * - $(PREFIX):Router:LogToVisualStudio
      - bo
      - $(SYMBOL).fbTcRouterListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):Router:LogToVisualStudio_RBV
      - bi
      - $(SYMBOL).fbTcRouterListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):Router:MessagesSent_RBV
      - longin
      - $(SYMBOL).fbTcRouterListener.nCntMessagesSent
      - | io: input


    * - $(PREFIX):Router:MinSeverity
      - mbbo
      - $(SYMBOL).fbTcRouterListener.eMinSeverity
      - | io: output


    * - $(PREFIX):Router:MinSeverity_RBV
      - mbbi
      - $(SYMBOL).fbTcRouterListener.eMinSeverity
      - | io: output


    * - $(PREFIX):RTime:AlarmsCleared_RBV
      - longin
      - $(SYMBOL).fbTcRTimeListener.nCntAlarmsCleared
      - | io: input


    * - $(PREFIX):RTime:AlarmsConfirmed_RBV
      - longin
      - $(SYMBOL).fbTcRTimeListener.nCntAlarmsConfirmed
      - | io: input


    * - $(PREFIX):RTime:AlarmsRaised_RBV
      - longin
      - $(SYMBOL).fbTcRTimeListener.nCntAlarmsRaised
      - | io: input


    * - $(PREFIX):RTime:Log:EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):RTime:Log:EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):RTime:Log:Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):RTime:Log:Message_RBV
      - waveform
      - $(SYMBOL).fbTcRTimeListener.stEventInfo.msg
      - | io: input


    * - $(PREFIX):RTime:Log:MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):RTime:Log:MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):RTime:Log:Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):RTime:Log:Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):RTime:Log:Source_RBV
      - waveform
      - $(SYMBOL).fbTcRTimeListener.stEventInfo.source
      - | io: input


    * - $(PREFIX):RTime:Log:Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


    * - $(PREFIX):RTime:LogToVisualStudio
      - bo
      - $(SYMBOL).fbTcRTimeListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):RTime:LogToVisualStudio_RBV
      - bi
      - $(SYMBOL).fbTcRTimeListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):RTime:MessagesSent_RBV
      - longin
      - $(SYMBOL).fbTcRTimeListener.nCntMessagesSent
      - | io: input


    * - $(PREFIX):RTime:MinSeverity
      - mbbo
      - $(SYMBOL).fbTcRTimeListener.eMinSeverity
      - | io: output


    * - $(PREFIX):RTime:MinSeverity_RBV
      - mbbi
      - $(SYMBOL).fbTcRTimeListener.eMinSeverity
      - | io: output


    * - $(PREFIX):System:AlarmsCleared_RBV
      - longin
      - $(SYMBOL).fbTcSystemListener.nCntAlarmsCleared
      - | io: input


    * - $(PREFIX):System:AlarmsConfirmed_RBV
      - longin
      - $(SYMBOL).fbTcSystemListener.nCntAlarmsConfirmed
      - | io: input


    * - $(PREFIX):System:AlarmsRaised_RBV
      - longin
      - $(SYMBOL).fbTcSystemListener.nCntAlarmsRaised
      - | io: input


    * - $(PREFIX):System:Log:EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):System:Log:EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):System:Log:Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):System:Log:Message_RBV
      - waveform
      - $(SYMBOL).fbTcSystemListener.stEventInfo.msg
      - | io: input


    * - $(PREFIX):System:Log:MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):System:Log:MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):System:Log:Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):System:Log:Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):System:Log:Source_RBV
      - waveform
      - $(SYMBOL).fbTcSystemListener.stEventInfo.source
      - | io: input


    * - $(PREFIX):System:Log:Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


    * - $(PREFIX):System:LogToVisualStudio
      - bo
      - $(SYMBOL).fbTcSystemListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):System:LogToVisualStudio_RBV
      - bi
      - $(SYMBOL).fbTcSystemListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):System:MessagesSent_RBV
      - longin
      - $(SYMBOL).fbTcSystemListener.nCntMessagesSent
      - | io: input


    * - $(PREFIX):System:MinSeverity
      - mbbo
      - $(SYMBOL).fbTcSystemListener.eMinSeverity
      - | io: output


    * - $(PREFIX):System:MinSeverity_RBV
      - mbbi
      - $(SYMBOL).fbTcSystemListener.eMinSeverity
      - | io: output


    * - $(PREFIX):Windows:AlarmsCleared_RBV
      - longin
      - $(SYMBOL).fbWindowsListener.nCntAlarmsCleared
      - | io: input


    * - $(PREFIX):Windows:AlarmsConfirmed_RBV
      - longin
      - $(SYMBOL).fbWindowsListener.nCntAlarmsConfirmed
      - | io: input


    * - $(PREFIX):Windows:AlarmsRaised_RBV
      - longin
      - $(SYMBOL).fbWindowsListener.nCntAlarmsRaised
      - | io: input


    * - $(PREFIX):Windows:Log:EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):Windows:Log:EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):Windows:Log:Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):Windows:Log:Message_RBV
      - waveform
      - $(SYMBOL).fbWindowsListener.stEventInfo.msg
      - | io: input


    * - $(PREFIX):Windows:Log:MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):Windows:Log:MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):Windows:Log:Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):Windows:Log:Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):Windows:Log:Source_RBV
      - waveform
      - $(SYMBOL).fbWindowsListener.stEventInfo.source
      - | io: input


    * - $(PREFIX):Windows:Log:Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


    * - $(PREFIX):Windows:LogToVisualStudio
      - bo
      - $(SYMBOL).fbWindowsListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):Windows:LogToVisualStudio_RBV
      - bi
      - $(SYMBOL).fbWindowsListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):Windows:MessagesSent_RBV
      - longin
      - $(SYMBOL).fbWindowsListener.nCntMessagesSent
      - | io: input


    * - $(PREFIX):Windows:MinSeverity
      - mbbo
      - $(SYMBOL).fbWindowsListener.eMinSeverity
      - | io: output


    * - $(PREFIX):Windows:MinSeverity_RBV
      - mbbi
      - $(SYMBOL).fbWindowsListener.eMinSeverity
      - | io: output


 
LCLS_General.FB_LogMessage
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Reset
      - bo
      - Rising-edge reset of trip
      - | io: output


    * - $(PREFIX):Reset_RBV
      - bi
      - Rising-edge reset of trip
      - | io: output


    * - $(PREFIX):Tripped_RBV
      - bi
      - Log message FB tripped
      - | io: input


  
LCLS_General.FB_TempSensor
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):CONN_RBV
      - bi
      - $(SYMBOL).bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TEMP_RBV
      - ai
      - $(SYMBOL).fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


  
LCLS_General.GVL_Logger
^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):$(PREFIX)LCLSGeneral:GlobalLogTrickleTrip_RBV
      - bi
      - Tripped by overall log count
      - | io: input


    * - $(PREFIX):$(PREFIX)LCLSGeneral:LogHost
      - waveform
      - The log host IP address
      - | io: output


    * - $(PREFIX):$(PREFIX)LCLSGeneral:LogHost_RBV
      - waveform
      - The log host IP address
      - | io: output


    * - $(PREFIX):$(PREFIX)LCLSGeneral:LogMessageCount_RBV
      - longin
      - Total log messages on the last cycle
      - | io: input


    * - $(PREFIX):$(PREFIX)LCLSGeneral:LogPort
      - longout
      - The log host UDP port
      - | io: output


    * - $(PREFIX):$(PREFIX)LCLSGeneral:LogPort_RBV
      - longin
      - The log host UDP port
      - | io: output


 
LCLS_General.ST_PendingEvent
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):Message_RBV
      - waveform
      - $(SYMBOL).stEventInfo.msg
      - | io: input


    * - $(PREFIX):MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):Source_RBV
      - waveform
      - $(SYMBOL).stEventInfo.source
      - | io: input


    * - $(PREFIX):Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


                                                                                            
lcls_twincat_common_components.FB_CC_TempSensor
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):CONN_RBV
      - bi
      - $(SYMBOL).bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):FAULT_SP_HYS_RBV
      - ai
      - $(SYMBOL).fHysteresis
      - | field: EGU %
        | field: PREC 2
        | io: input


    * - $(PREFIX):FAULT_SP_RBV
      - ai
      - $(SYMBOL).fFaultThreshold
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):TEMP_RBV
      - ai
      - $(SYMBOL).fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


   
lcls_twincat_common_components.FB_PPM
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):CAM:CIL:PCT
      - ao
      - $(SYMBOL).fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - $(PREFIX):CAM:CIL:PCT_RBV
      - ai
      - $(SYMBOL).fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - $(PREFIX):CAM:PWR
      - bo
      - $(SYMBOL).fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):CAM:PWR_RBV
      - bi
      - $(SYMBOL).fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):FSW:FLOW_OK
      - bo
      - $(SYMBOL).fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):FSW:FLOW_OK_RBV
      - bi
      - $(SYMBOL).fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):FWM:OFF
      - ao
      - $(SYMBOL).fbFlowMeter.fOffset
      - | io: output


    * - $(PREFIX):FWM:OFF_RBV
      - ai
      - $(SYMBOL).fbFlowMeter.fOffset
      - | io: output


    * - $(PREFIX):FWM:RES
      - ao
      - $(SYMBOL).fbFlowMeter.fResolution
      - | io: output


    * - $(PREFIX):FWM:RES_RBV
      - ai
      - $(SYMBOL).fbFlowMeter.fResolution
      - | io: output


    * - $(PREFIX):FWM:VAL_RBV
      - ai
      - $(SYMBOL).fbFlowMeter.fReal
      - | io: input


    * - $(PREFIX):MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbStates.stPlcToEpics.bBusy
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbStates.stPlcToEpics.bDone
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbStates.stPlcToEpics.bError
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbStates.stPlcToEpics.nErrorID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbStates.stPlcToEpics.sErrorMsg
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).eEnumGet
      - | io: input


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT
      - bo
      - $(SYMBOL).fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:BeamClass_RBV
      - longin
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBeamClass
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBCRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:eVRanges_RBV
      - longin
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neVRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:MachineMode_RBV
      - longin
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nMachineMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neV
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Rate_RBV
      - longin
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nRate
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU Hz
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Transmission_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nTran
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Valid_RBV
      - bi
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.xValid
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Veto_RBV
      - waveform
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.aVetoDevices
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:PMPS_ID_RBV
      - longin
      - Assertion Request ID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:PMPS_LOADED_RBV
      - bi
      - TRUE if PMPS loaded parameters from the database.
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:PMPS_STATE_RBV
      - waveform
      - PMPS Database Lookup Key
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:ReParams:PressSP_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nPressSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "TORR"
        | field: PREC 2
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:ReParams:TempSP_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nTempSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "C"
        | field: PREC 2
        | io: input


    * - $(PREFIX):MMS:STATE:RESET
      - bo
      - $(SYMBOL).fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:SET
      - mbbo
      - $(SYMBOL).eEnumSet
      - | io: output


    * - $(PREFIX):MMS:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).eEnumSet
      - | io: output


    * - $(PREFIX):SPM:BACK:COLL
      - bo
      - $(SYMBOL).fbPowerMeter.bBackgroundCollect
      - | io: output


    * - $(PREFIX):SPM:BACK:COLL_RBV
      - bi
      - $(SYMBOL).fbPowerMeter.bBackgroundCollect
      - | io: output


    * - $(PREFIX):SPM:BACK:MANUAL_COLLECTING_RBV
      - bi
      - $(SYMBOL).fbPowerMeter.bBackgroundCollecting
      - | io: input


    * - $(PREFIX):SPM:BACK:MODE
      - mbbo
      - $(SYMBOL).fbPowerMeter.BACKGROUND_MODE
      - | io: output


    * - $(PREFIX):SPM:BACK:MODE_RBV
      - mbbi
      - $(SYMBOL).fbPowerMeter.BACKGROUND_MODE
      - | io: output


    * - $(PREFIX):SPM:BACK:RESET
      - bo
      - $(SYMBOL).fbPowerMeter.bResetAutoBackground
      - | io: output


    * - $(PREFIX):SPM:BACK:RESET_RBV
      - bi
      - $(SYMBOL).fbPowerMeter.bResetAutoBackground
      - | io: output


    * - $(PREFIX):SPM:BACK:TIME
      - longout
      - $(SYMBOL).fbPowerMeter.uBackgroundCollectionTime
      - | field: EGU s
        | io: output


    * - $(PREFIX):SPM:BACK:TIME_RBV
      - longin
      - $(SYMBOL).fbPowerMeter.uBackgroundCollectionTime
      - | field: EGU s
        | io: output


    * - $(PREFIX):SPM:BACK:VOLT
      - ao
      - $(SYMBOL).fbPowerMeter.fBackgroundVoltage
      - | field: EGU mV
        | io: output


    * - $(PREFIX):SPM:BACK:VOLT_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fBackgroundVoltage
      - | field: EGU mV
        | io: output


    * - $(PREFIX):SPM:HXR_NC_BeamRateFromEpics
      - ao
      - $(SYMBOL).fbPowerMeter.fHXR_NC_Frequency; Linked to PV: [None, None, 'EVNT:SYS0:1:NC_HARDRATE']
      - | io: output
        | link: [None, None, 'EVNT:SYS0:1:NC_HARDRATE']


    * - $(PREFIX):SPM:HXR_NC_BeamRateFromEpics_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fHXR_NC_Frequency; Linked to PV: [None, None, 'EVNT:SYS0:1:NC_HARDRATE']
      - | io: output
        | link: [None, None, 'EVNT:SYS0:1:NC_HARDRATE']


    * - $(PREFIX):SPM:HXR_SC_BeamRateFromEpics
      - longout
      - $(SYMBOL).fbPowerMeter.uHXR_SC_Frequency; Linked to PV: [None, None, 'TPG:SYS0:1:DST03:RATE_RBV']
      - | io: output
        | link: [None, None, 'TPG:SYS0:1:DST03:RATE_RBV']


    * - $(PREFIX):SPM:HXR_SC_BeamRateFromEpics_RBV
      - longin
      - $(SYMBOL).fbPowerMeter.uHXR_SC_Frequency; Linked to PV: [None, None, 'TPG:SYS0:1:DST03:RATE_RBV']
      - | io: output
        | link: [None, None, 'TPG:SYS0:1:DST03:RATE_RBV']


    * - $(PREFIX):SPM:MJ_BUFFER_RBV
      - waveform
      - $(SYMBOL).fbPowerMeter.fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - $(PREFIX):SPM:MJ_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fCalibMJ
      - | field: EGU mJ
        | io: input


    * - $(PREFIX):SPM:RESP_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fResponsivity
      - | field: EGU V/W
        | io: input


    * - $(PREFIX):SPM:STC:CONN_RBV
      - bi
      - $(SYMBOL).fbPowerMeter.fbTempSensor.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SPM:STC:ERR_RBV
      - bi
      - $(SYMBOL).fbPowerMeter.fbTempSensor.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SPM:STC:FAULT_SP_HYS_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fbTempSensor.fHysteresis
      - | field: EGU %
        | field: PREC 2
        | io: input


    * - $(PREFIX):SPM:STC:FAULT_SP_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fbTempSensor.fFaultThreshold
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SPM:STC:TEMP_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fbTempSensor.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SPM:SXR_NC_BeamRateFromEpics
      - ao
      - $(SYMBOL).fbPowerMeter.fSXR_NC_Frequency; Linked to PV: [None, None, 'EVNT:SYS0:1:NC_SOFTRATE']
      - | io: output
        | link: [None, None, 'EVNT:SYS0:1:NC_SOFTRATE']


    * - $(PREFIX):SPM:SXR_NC_BeamRateFromEpics_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fSXR_NC_Frequency; Linked to PV: [None, None, 'EVNT:SYS0:1:NC_SOFTRATE']
      - | io: output
        | link: [None, None, 'EVNT:SYS0:1:NC_SOFTRATE']


    * - $(PREFIX):SPM:SXR_SC_BeamRateFromEpics
      - longout
      - $(SYMBOL).fbPowerMeter.uSXR_SC_Frequency; Linked to PV: [None, None, 'TPG:SYS0:1:DST04:RATE_RBV']
      - | io: output
        | link: [None, None, 'TPG:SYS0:1:DST04:RATE_RBV']


    * - $(PREFIX):SPM:SXR_SC_BeamRateFromEpics_RBV
      - longin
      - $(SYMBOL).fbPowerMeter.uSXR_SC_Frequency; Linked to PV: [None, None, 'TPG:SYS0:1:DST04:RATE_RBV']
      - | io: output
        | link: [None, None, 'TPG:SYS0:1:DST04:RATE_RBV']


    * - $(PREFIX):SPM:VOLT_BUFFER_RBV
      - waveform
      - $(SYMBOL).fbPowerMeter.fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - $(PREFIX):SPM:VOLT_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fVoltage
      - | field: EGU mV
        | io: input


    * - $(PREFIX):SPM:WATT_BUFFER_RBV
      - waveform
      - $(SYMBOL).fbPowerMeter.fPulseWattageBuffer
      - | field: EGU mW
        | io: input


    * - $(PREFIX):SPM:WATT_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fPulseWattage
      - | field: EGU mW
        | io: input


    * - $(PREFIX):YAG:STC:CONN_RBV
      - bi
      - $(SYMBOL).fbYagTempSensor.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):YAG:STC:ERR_RBV
      - bi
      - $(SYMBOL).fbYagTempSensor.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):YAG:STC:FAULT_SP_HYS_RBV
      - ai
      - $(SYMBOL).fbYagTempSensor.fHysteresis
      - | field: EGU %
        | field: PREC 2
        | io: input


    * - $(PREFIX):YAG:STC:FAULT_SP_RBV
      - ai
      - $(SYMBOL).fbYagTempSensor.fFaultThreshold
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):YAG:STC:TEMP_RBV
      - ai
      - $(SYMBOL).fbYagTempSensor.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


 
lcls_twincat_common_components.FB_PPM_Gige
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):CIL:PCT
      - ao
      - $(SYMBOL).fIlluminatorPercent
      - | EGU: %
        | io: output


    * - $(PREFIX):CIL:PCT_RBV
      - ai
      - $(SYMBOL).fIlluminatorPercent
      - | EGU: %
        | io: output


    * - $(PREFIX):PWR
      - bo
      - $(SYMBOL).bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):PWR_RBV
      - bi
      - $(SYMBOL).bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


 
lcls_twincat_common_components.FB_PPM_PowerMeter
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):BACK:COLL
      - bo
      - $(SYMBOL).bBackgroundCollect
      - | io: output


    * - $(PREFIX):BACK:COLL_RBV
      - bi
      - $(SYMBOL).bBackgroundCollect
      - | io: output


    * - $(PREFIX):BACK:MANUAL_COLLECTING_RBV
      - bi
      - $(SYMBOL).bBackgroundCollecting
      - | io: input


    * - $(PREFIX):BACK:MODE
      - mbbo
      - $(SYMBOL).BACKGROUND_MODE
      - | io: output


    * - $(PREFIX):BACK:MODE_RBV
      - mbbi
      - $(SYMBOL).BACKGROUND_MODE
      - | io: output


    * - $(PREFIX):BACK:RESET
      - bo
      - $(SYMBOL).bResetAutoBackground
      - | io: output


    * - $(PREFIX):BACK:RESET_RBV
      - bi
      - $(SYMBOL).bResetAutoBackground
      - | io: output


    * - $(PREFIX):BACK:TIME
      - longout
      - $(SYMBOL).uBackgroundCollectionTime
      - | field: EGU s
        | io: output


    * - $(PREFIX):BACK:TIME_RBV
      - longin
      - $(SYMBOL).uBackgroundCollectionTime
      - | field: EGU s
        | io: output


    * - $(PREFIX):BACK:VOLT
      - ao
      - $(SYMBOL).fBackgroundVoltage
      - | field: EGU mV
        | io: output


    * - $(PREFIX):BACK:VOLT_RBV
      - ai
      - $(SYMBOL).fBackgroundVoltage
      - | field: EGU mV
        | io: output


    * - $(PREFIX):HXR_NC_BeamRateFromEpics
      - ao
      - $(SYMBOL).fHXR_NC_Frequency; Linked to PV: [None, 'EVNT:SYS0:1:NC_HARDRATE']
      - | io: output
        | link: [None, 'EVNT:SYS0:1:NC_HARDRATE']


    * - $(PREFIX):HXR_NC_BeamRateFromEpics_RBV
      - ai
      - $(SYMBOL).fHXR_NC_Frequency; Linked to PV: [None, 'EVNT:SYS0:1:NC_HARDRATE']
      - | io: output
        | link: [None, 'EVNT:SYS0:1:NC_HARDRATE']


    * - $(PREFIX):HXR_SC_BeamRateFromEpics
      - longout
      - $(SYMBOL).uHXR_SC_Frequency; Linked to PV: [None, 'TPG:SYS0:1:DST03:RATE_RBV']
      - | io: output
        | link: [None, 'TPG:SYS0:1:DST03:RATE_RBV']


    * - $(PREFIX):HXR_SC_BeamRateFromEpics_RBV
      - longin
      - $(SYMBOL).uHXR_SC_Frequency; Linked to PV: [None, 'TPG:SYS0:1:DST03:RATE_RBV']
      - | io: output
        | link: [None, 'TPG:SYS0:1:DST03:RATE_RBV']


    * - $(PREFIX):MJ_BUFFER_RBV
      - waveform
      - $(SYMBOL).fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - $(PREFIX):MJ_RBV
      - ai
      - $(SYMBOL).fCalibMJ
      - | field: EGU mJ
        | io: input


    * - $(PREFIX):RESP_RBV
      - ai
      - $(SYMBOL).fResponsivity
      - | field: EGU V/W
        | io: input


    * - $(PREFIX):STC:CONN_RBV
      - bi
      - $(SYMBOL).fbTempSensor.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):STC:ERR_RBV
      - bi
      - $(SYMBOL).fbTempSensor.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):STC:FAULT_SP_HYS_RBV
      - ai
      - $(SYMBOL).fbTempSensor.fHysteresis
      - | field: EGU %
        | field: PREC 2
        | io: input


    * - $(PREFIX):STC:FAULT_SP_RBV
      - ai
      - $(SYMBOL).fbTempSensor.fFaultThreshold
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):STC:TEMP_RBV
      - ai
      - $(SYMBOL).fbTempSensor.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SXR_NC_BeamRateFromEpics
      - ao
      - $(SYMBOL).fSXR_NC_Frequency; Linked to PV: [None, 'EVNT:SYS0:1:NC_SOFTRATE']
      - | io: output
        | link: [None, 'EVNT:SYS0:1:NC_SOFTRATE']


    * - $(PREFIX):SXR_NC_BeamRateFromEpics_RBV
      - ai
      - $(SYMBOL).fSXR_NC_Frequency; Linked to PV: [None, 'EVNT:SYS0:1:NC_SOFTRATE']
      - | io: output
        | link: [None, 'EVNT:SYS0:1:NC_SOFTRATE']


    * - $(PREFIX):SXR_SC_BeamRateFromEpics
      - longout
      - $(SYMBOL).uSXR_SC_Frequency; Linked to PV: [None, 'TPG:SYS0:1:DST04:RATE_RBV']
      - | io: output
        | link: [None, 'TPG:SYS0:1:DST04:RATE_RBV']


    * - $(PREFIX):SXR_SC_BeamRateFromEpics_RBV
      - longin
      - $(SYMBOL).uSXR_SC_Frequency; Linked to PV: [None, 'TPG:SYS0:1:DST04:RATE_RBV']
      - | io: output
        | link: [None, 'TPG:SYS0:1:DST04:RATE_RBV']


    * - $(PREFIX):VOLT_BUFFER_RBV
      - waveform
      - $(SYMBOL).fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - $(PREFIX):VOLT_RBV
      - ai
      - $(SYMBOL).fVoltage
      - | field: EGU mV
        | io: input


    * - $(PREFIX):WATT_BUFFER_RBV
      - waveform
      - $(SYMBOL).fPulseWattageBuffer
      - | field: EGU mW
        | io: input


    * - $(PREFIX):WATT_RBV
      - ai
      - $(SYMBOL).fPulseWattage
      - | field: EGU mW
        | io: input


 
lcls_twincat_common_components.FB_WFS
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):FSW:FLOW_OK
      - bo
      - $(SYMBOL).fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):FSW:FLOW_OK_RBV
      - bi
      - $(SYMBOL).fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):FWM:OFF
      - ao
      - $(SYMBOL).fbFlowMeter.fOffset
      - | io: output


    * - $(PREFIX):FWM:OFF_RBV
      - ai
      - $(SYMBOL).fbFlowMeter.fOffset
      - | io: output


    * - $(PREFIX):FWM:RES
      - ao
      - $(SYMBOL).fbFlowMeter.fResolution
      - | io: output


    * - $(PREFIX):FWM:RES_RBV
      - ai
      - $(SYMBOL).fbFlowMeter.fResolution
      - | io: output


    * - $(PREFIX):FWM:VAL_RBV
      - ai
      - $(SYMBOL).fbFlowMeter.fReal
      - | io: input


    * - $(PREFIX):MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbStates.stPlcToEpics.bBusy
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbStates.stPlcToEpics.bDone
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbStates.stPlcToEpics.bError
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbStates.stPlcToEpics.nErrorID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbStates.stPlcToEpics.sErrorMsg
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).eEnumGet
      - | io: input


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: output


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT
      - bo
      - $(SYMBOL).fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: output


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:BeamClass_RBV
      - longin
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBeamClass
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBCRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:eVRanges_RBV
      - longin
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neVRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU eV
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:MachineMode_RBV
      - longin
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nMachineMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neV
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU eV
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Rate_RBV
      - longin
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nRate
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU Hz
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Transmission_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nTran
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Valid_RBV
      - bi
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.xValid
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Veto_RBV
      - waveform
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.aVetoDevices
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:PMPS_ID_RBV
      - longin
      - Assertion Request ID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:PMPS_LOADED_RBV
      - bi
      - TRUE if PMPS loaded parameters from the database.
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:PMPS_STATE_RBV
      - waveform
      - PMPS Database Lookup Key
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:ReParams:PressSP_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nPressSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU "TORR"
        | field: PREC 2
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:ReParams:TempSP_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nTempSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU "C"
        | field: PREC 2
        | io: input


    * - $(PREFIX):MMS:STATE:RESET
      - bo
      - $(SYMBOL).fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:SET
      - mbbo
      - $(SYMBOL).eEnumSet
      - | io: output


    * - $(PREFIX):MMS:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).eEnumSet
      - | io: output


    * - $(PREFIX):STC:01:CONN_RBV
      - bi
      - $(SYMBOL).fbThermoCouple1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):STC:01:ERR_RBV
      - bi
      - $(SYMBOL).fbThermoCouple1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):STC:01:FAULT_SP_HYS_RBV
      - ai
      - $(SYMBOL).fbThermoCouple1.fHysteresis
      - | field: EGU %
        | field: PREC 2
        | io: input


    * - $(PREFIX):STC:01:FAULT_SP_RBV
      - ai
      - $(SYMBOL).fbThermoCouple1.fFaultThreshold
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):STC:01:TEMP_RBV
      - ai
      - $(SYMBOL).fbThermoCouple1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):STC:02:CONN_RBV
      - bi
      - $(SYMBOL).fbThermoCouple2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):STC:02:ERR_RBV
      - bi
      - $(SYMBOL).fbThermoCouple2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):STC:02:FAULT_SP_HYS_RBV
      - ai
      - $(SYMBOL).fbThermoCouple2.fHysteresis
      - | field: EGU %
        | field: PREC 2
        | io: input


    * - $(PREFIX):STC:02:FAULT_SP_RBV
      - ai
      - $(SYMBOL).fbThermoCouple2.fFaultThreshold
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):STC:02:TEMP_RBV
      - ai
      - $(SYMBOL).fbThermoCouple2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


 
lcls_twincat_common_components.FB_XPIM
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):CAM:PWR
      - bo
      - $(SYMBOL).fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):CAM:PWR_RBV
      - bi
      - $(SYMBOL).fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):CIL:AUTO
      - bo
      - $(SYMBOL).fbLED.bLEDAuto
      - | io: output


    * - $(PREFIX):CIL:AUTO_RBV
      - bi
      - $(SYMBOL).fbLED.bLEDAuto
      - | io: output


    * - $(PREFIX):CIL:CLK:REMAINING
      - ao
      - $(SYMBOL).fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - $(PREFIX):CIL:CLK:REMAINING_RBV
      - ai
      - $(SYMBOL).fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - $(PREFIX):CIL:CLK:TIMEOUT
      - ao
      - $(SYMBOL).fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - $(PREFIX):CIL:CLK:TIMEOUT_RBV
      - ai
      - $(SYMBOL).fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - $(PREFIX):CIL:PWR
      - bo
      - $(SYMBOL).fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):CIL:PWR_RBV
      - bi
      - $(SYMBOL).fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):CLF:LOCK
      - bo
      - $(SYMBOL).bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - $(PREFIX):CLF:LOCK_RBV
      - bi
      - $(SYMBOL).bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - $(PREFIX):CLZ:LOCK
      - bo
      - $(SYMBOL).bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - $(PREFIX):CLZ:LOCK_RBV
      - bi
      - $(SYMBOL).bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - $(PREFIX):FSW:FLOW_OK
      - bo
      - $(SYMBOL).fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):FSW:FLOW_OK_RBV
      - bi
      - $(SYMBOL).fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):MFW:ERR:MSG_RBV
      - waveform
      - $(SYMBOL).fbFilterWheel.sLastError
      - | io: input


    * - $(PREFIX):MFW:ERR:RESET
      - bo
      - $(SYMBOL).fbFilterWheel.bResetError
      - | io: output


    * - $(PREFIX):MFW:ERR:RESET_RBV
      - bi
      - $(SYMBOL).fbFilterWheel.bResetError
      - | io: output


    * - $(PREFIX):MFW:GET_RBV
      - mbbi
      - $(SYMBOL).fbFilterWheel.nGetPos
      - | io: input


    * - $(PREFIX):MFW:RAW:CMD
      - waveform
      - $(SYMBOL).fbFilterWheel.fbCom.sCmd
      - | io: output


    * - $(PREFIX):MFW:RAW:CMD_RBV
      - waveform
      - $(SYMBOL).fbFilterWheel.fbCom.sCmd
      - | io: output


    * - $(PREFIX):MFW:RAW:DONE_RBV
      - bi
      - $(SYMBOL).fbFilterWheel.fbCom.bDone
      - | io: input


    * - $(PREFIX):MFW:RAW:ERR:RECV_RBV
      - mbbi
      - $(SYMBOL).fbFilterWheel.fbCom.eRecvErrorID
      - | io: input


    * - $(PREFIX):MFW:RAW:ERR:SEND_RBV
      - mbbi
      - $(SYMBOL).fbFilterWheel.fbCom.eSendErrorID
      - | io: input


    * - $(PREFIX):MFW:RAW:ERR:SER_RBV
      - mbbi
      - $(SYMBOL).fbFilterWheel.fbCom.eSerialLineErrorID
      - | io: input


    * - $(PREFIX):MFW:RAW:RESP_RBV
      - waveform
      - $(SYMBOL).fbFilterWheel.fbCom.sResponse
      - | io: input


    * - $(PREFIX):MFW:RAW:SEND
      - bo
      - $(SYMBOL).fbFilterWheel.fbCom.bSend
      - | io: output


    * - $(PREFIX):MFW:RAW:SEND_RBV
      - bi
      - $(SYMBOL).fbFilterWheel.fbCom.bSend
      - | io: output


    * - $(PREFIX):MFW:SET
      - mbbo
      - $(SYMBOL).fbFilterWheel.nSetPos
      - | io: output


    * - $(PREFIX):MFW:SET_RBV
      - mbbi
      - $(SYMBOL).fbFilterWheel.nSetPos
      - | io: output


    * - $(PREFIX):MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):MMS:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbStates.stPlcToEpics.bBusy
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbStates.stPlcToEpics.bDone
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbStates.stPlcToEpics.bError
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbStates.stPlcToEpics.nErrorID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbStates.stPlcToEpics.sErrorMsg
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).eEnumGet
      - | io: input


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT
      - bo
      - $(SYMBOL).fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:BeamClass_RBV
      - longin
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBeamClass
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBCRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:eVRanges_RBV
      - longin
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neVRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:MachineMode_RBV
      - longin
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nMachineMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neV
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Rate_RBV
      - longin
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nRate
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU Hz
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Transmission_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nTran
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Valid_RBV
      - bi
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.xValid
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:BP:Veto_RBV
      - waveform
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.aVetoDevices
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:PMPS_ID_RBV
      - longin
      - Assertion Request ID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:PMPS_LOADED_RBV
      - bi
      - TRUE if PMPS loaded parameters from the database.
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:PMPS_STATE_RBV
      - waveform
      - PMPS Database Lookup Key
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:ReParams:PressSP_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nPressSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "TORR"
        | field: PREC 2
        | io: input


    * - $(PREFIX):MMS:STATE:PMPS:TRANS:ReParams:TempSP_RBV
      - ai
      - $(SYMBOL).fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nTempSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "C"
        | field: PREC 2
        | io: input


    * - $(PREFIX):MMS:STATE:RESET
      - bo
      - $(SYMBOL).fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:SET
      - mbbo
      - $(SYMBOL).eEnumSet
      - | io: output


    * - $(PREFIX):MMS:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).eEnumSet
      - | io: output


 
lcls_twincat_common_components.FB_XPIM_FilterWheel
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ERR:MSG_RBV
      - waveform
      - $(SYMBOL).sLastError
      - | io: input


    * - $(PREFIX):ERR:RESET
      - bo
      - $(SYMBOL).bResetError
      - | io: output


    * - $(PREFIX):ERR:RESET_RBV
      - bi
      - $(SYMBOL).bResetError
      - | io: output


    * - $(PREFIX):GET_RBV
      - mbbi
      - $(SYMBOL).nGetPos
      - | io: input


    * - $(PREFIX):RAW:CMD
      - waveform
      - $(SYMBOL).fbCom.sCmd
      - | io: output


    * - $(PREFIX):RAW:CMD_RBV
      - waveform
      - $(SYMBOL).fbCom.sCmd
      - | io: output


    * - $(PREFIX):RAW:DONE_RBV
      - bi
      - $(SYMBOL).fbCom.bDone
      - | io: input


    * - $(PREFIX):RAW:ERR:RECV_RBV
      - mbbi
      - $(SYMBOL).fbCom.eRecvErrorID
      - | io: input


    * - $(PREFIX):RAW:ERR:SEND_RBV
      - mbbi
      - $(SYMBOL).fbCom.eSendErrorID
      - | io: input


    * - $(PREFIX):RAW:ERR:SER_RBV
      - mbbi
      - $(SYMBOL).fbCom.eSerialLineErrorID
      - | io: input


    * - $(PREFIX):RAW:RESP_RBV
      - waveform
      - $(SYMBOL).fbCom.sResponse
      - | io: input


    * - $(PREFIX):RAW:SEND
      - bo
      - $(SYMBOL).fbCom.bSend
      - | io: output


    * - $(PREFIX):RAW:SEND_RBV
      - bi
      - $(SYMBOL).fbCom.bSend
      - | io: output


    * - $(PREFIX):SET
      - mbbo
      - $(SYMBOL).nSetPos
      - | io: output


    * - $(PREFIX):SET_RBV
      - mbbi
      - $(SYMBOL).nSetPos
      - | io: output


 
lcls_twincat_common_components.FB_XPIM_LED
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):AUTO
      - bo
      - $(SYMBOL).bLEDAuto
      - | io: output


    * - $(PREFIX):AUTO_RBV
      - bi
      - $(SYMBOL).bLEDAuto
      - | io: output


    * - $(PREFIX):CLK:REMAINING
      - ao
      - $(SYMBOL).fLEDRemaining
      - | field: EGU min
        | io: output


    * - $(PREFIX):CLK:REMAINING_RBV
      - ai
      - $(SYMBOL).fLEDRemaining
      - | field: EGU min
        | io: output


    * - $(PREFIX):CLK:TIMEOUT
      - ao
      - $(SYMBOL).fLEDTimeOut
      - | field: EGU min
        | io: output


    * - $(PREFIX):CLK:TIMEOUT_RBV
      - ai
      - $(SYMBOL).fLEDTimeOut
      - | field: EGU min
        | io: output


    * - $(PREFIX):PWR
      - bo
      - $(SYMBOL).bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):PWR_RBV
      - bi
      - $(SYMBOL).bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


 
lcls_twincat_common_components.FB_XPIM_Opal
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):PWR
      - bo
      - $(SYMBOL).bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):PWR_RBV
      - bi
      - $(SYMBOL).bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


 
lcls_twincat_common_components.FB_XTES_Flowswitch
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):FLOW_OK
      - bo
      - $(SYMBOL).bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):FLOW_OK_RBV
      - bi
      - $(SYMBOL).bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


                                             
lcls_twincat_motion.DUT_MotionStage
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


 
lcls_twincat_motion.DUT_PositionState
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


                         
lcls_twincat_motion.FB_PositionState1D
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:BUSY_RBV
      - bi
      - $(SYMBOL).stPlcToEpics.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):STATE:DONE_RBV
      - bi
      - $(SYMBOL).stPlcToEpics.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):STATE:ERR_RBV
      - bi
      - $(SYMBOL).stPlcToEpics.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):STATE:ERRID_RBV
      - longin
      - $(SYMBOL).stPlcToEpics.nErrorID
      - | io: input


    * - $(PREFIX):STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).stPlcToEpics.sErrorMsg
      - | io: input


    * - $(PREFIX):STATE:RESET
      - bo
      - $(SYMBOL).stEpicsToPlc.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):STATE:RESET_RBV
      - bi
      - $(SYMBOL).stEpicsToPlc.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


 
lcls_twincat_motion.FB_PositionState1D_InOut
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbPositionState1D.stPlcToEpics.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbPositionState1D.stPlcToEpics.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbPositionState1D.stPlcToEpics.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbPositionState1D.stPlcToEpics.nErrorID
      - | io: input


    * - $(PREFIX):STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbPositionState1D.stPlcToEpics.sErrorMsg
      - | io: input


    * - $(PREFIX):STATE:GET_RBV
      - mbbi
      - $(SYMBOL).eStateGet
      - | io: input


    * - $(PREFIX):STATE:RESET
      - bo
      - $(SYMBOL).fbPositionState1D.stEpicsToPlc.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbPositionState1D.stEpicsToPlc.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):STATE:SET
      - mbbo
      - $(SYMBOL).eStateReq
      - | io: output


    * - $(PREFIX):STATE:SET_RBV
      - mbbi
      - $(SYMBOL).eStateReq
      - | io: output


    
lcls_twincat_motion.FB_PositionStateMove
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):AT_STATE_RBV
      - bi
      - $(SYMBOL).bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).nErrorID
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sErrorMessage
      - | io: input


    * - $(PREFIX):GO
      - bo
      - $(SYMBOL).bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):GO_RBV
      - bi
      - $(SYMBOL).bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


   
lcls_twincat_motion.FB_PositionStatePMPS1D
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):STATE:BUSY_RBV
      - bi
      - $(SYMBOL).stPlcToEpics.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):STATE:DONE_RBV
      - bi
      - $(SYMBOL).stPlcToEpics.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):STATE:ERR_RBV
      - bi
      - $(SYMBOL).stPlcToEpics.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):STATE:ERRID_RBV
      - longin
      - $(SYMBOL).stPlcToEpics.nErrorID
      - | io: input


    * - $(PREFIX):STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).stPlcToEpics.sErrorMsg
      - | io: input


    * - $(PREFIX):STATE:PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).stPMPSEpicsToPlc.bArbiterEnabled
      - | io: output


    * - $(PREFIX):STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).stPMPSEpicsToPlc.bArbiterEnabled
      - | io: output


    * - $(PREFIX):STATE:PMPS:MAINT
      - bo
      - $(SYMBOL).stPMPSEpicsToPlc.bMaintMode
      - | io: output


    * - $(PREFIX):STATE:PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).stPMPSEpicsToPlc.bMaintMode
      - | io: output


    * - $(PREFIX):STATE:PMPS:TRANS:BP:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:BP:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].xOK
      - | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:BP:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:BP:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:BP:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].xOK
      - | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:BP:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:BP:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:BP:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].xOK
      - | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:BP:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:BP:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:BP:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].xOK
      - | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:BP:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:BP:BeamClass_RBV
      - longin
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBeamClass
      - | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:BP:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBCRange
      - | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:BP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:BP:eVRanges_RBV
      - longin
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stBeamParams.neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:BP:MachineMode_RBV
      - longin
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stBeamParams.nMachineMode
      - | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:BP:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stBeamParams.neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:BP:Rate_RBV
      - longin
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stBeamParams.nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:BP:Transmission_RBV
      - ai
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stBeamParams.nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:BP:Valid_RBV
      - bi
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stBeamParams.xValid
      - | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:BP:Veto_RBV
      - waveform
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stBeamParams.aVetoDevices
      - | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:PMPS_ID_RBV
      - longin
      - Assertion Request ID
      - | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:PMPS_LOADED_RBV
      - bi
      - TRUE if PMPS loaded parameters from the database.
      - | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:PMPS_STATE_RBV
      - waveform
      - PMPS Database Lookup Key
      - | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:ReParams:PressSP_RBV
      - ai
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nPressSP
      - | field: EGU "TORR"
        | field: PREC 2
        | io: input


    * - $(PREFIX):STATE:PMPS:TRANS:ReParams:TempSP_RBV
      - ai
      - $(SYMBOL).stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nTempSP
      - | field: EGU "C"
        | field: PREC 2
        | io: input


    * - $(PREFIX):STATE:RESET
      - bo
      - $(SYMBOL).stEpicsToPlc.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):STATE:RESET_RBV
      - bi
      - $(SYMBOL).stEpicsToPlc.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


        
lcls_twincat_motion.FB_Standard_PMPSDB
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):LAST_REFRESH_RBV
      - longin
      - $(SYMBOL).nLastRefreshTime
      - | io: input


    * - $(PREFIX):REFRESH
      - bo
      - $(SYMBOL).bRefresh
      - | io: output


    * - $(PREFIX):REFRESH_RBV
      - bi
      - $(SYMBOL).bRefresh
      - | io: output


   
lcls_twincat_motion.FB_StatePTPMove
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):AT_STATE_RBV
      - bi
      - $(SYMBOL).bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DMOV_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sError
      - | io: input


    * - $(PREFIX):GO
      - bo
      - $(SYMBOL).bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):GO_RBV
      - bi
      - $(SYMBOL).bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


     
lcls_twincat_motion.MOTION_GVL
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):$(PREFIX)DB:LAST_REFRESH_RBV
      - longin
      - $(SYMBOL).fbStandardPMPSDB.nLastRefreshTime
      - | io: input


    * - $(PREFIX):$(PREFIX)DB:REFRESH
      - bo
      - $(SYMBOL).fbStandardPMPSDB.bRefresh
      - | io: output


    * - $(PREFIX):$(PREFIX)DB:REFRESH_RBV
      - bi
      - $(SYMBOL).fbStandardPMPSDB.bRefresh
      - | io: output


  
lcls_twincat_motion.ST_AxisParameterSetExposed
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


 
lcls_twincat_motion.ST_MotionStage
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


 
lcls_twincat_motion.ST_PositionState
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


 
lcls_twincat_motion.ST_StateEpicsToPlc
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


 
lcls_twincat_motion.ST_StatePlcToEpics
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).nErrorID
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sErrorMsg
      - | io: input


 
lcls_twincat_motion.ST_StatePMPSEpicsToPlc
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:MAINT
      - bo
      - $(SYMBOL).bMaintMode
      - | io: output


    * - $(PREFIX):PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).bMaintMode
      - | io: output


 
lcls_twincat_motion.ST_StatePMPSPlcToEpics
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):PMPS:TRANS:BP:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).stTransitionDb.stBeamParams.astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PMPS:TRANS:BP:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).stTransitionDb.stBeamParams.astApertures[1].xOK
      - | io: input


    * - $(PREFIX):PMPS:TRANS:BP:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).stTransitionDb.stBeamParams.astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PMPS:TRANS:BP:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).stTransitionDb.stBeamParams.astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PMPS:TRANS:BP:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).stTransitionDb.stBeamParams.astApertures[2].xOK
      - | io: input


    * - $(PREFIX):PMPS:TRANS:BP:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).stTransitionDb.stBeamParams.astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PMPS:TRANS:BP:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).stTransitionDb.stBeamParams.astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PMPS:TRANS:BP:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).stTransitionDb.stBeamParams.astApertures[3].xOK
      - | io: input


    * - $(PREFIX):PMPS:TRANS:BP:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).stTransitionDb.stBeamParams.astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PMPS:TRANS:BP:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).stTransitionDb.stBeamParams.astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PMPS:TRANS:BP:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).stTransitionDb.stBeamParams.astApertures[4].xOK
      - | io: input


    * - $(PREFIX):PMPS:TRANS:BP:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).stTransitionDb.stBeamParams.astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):PMPS:TRANS:BP:BeamClass_RBV
      - longin
      - $(SYMBOL).stTransitionDb.stBeamParams.nBeamClass
      - | io: input


    * - $(PREFIX):PMPS:TRANS:BP:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).stTransitionDb.stBeamParams.nBCRange
      - | io: input


    * - $(PREFIX):PMPS:TRANS:BP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):PMPS:TRANS:BP:eVRanges_RBV
      - longin
      - $(SYMBOL).stTransitionDb.stBeamParams.neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PMPS:TRANS:BP:MachineMode_RBV
      - longin
      - $(SYMBOL).stTransitionDb.stBeamParams.nMachineMode
      - | io: input


    * - $(PREFIX):PMPS:TRANS:BP:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).stTransitionDb.stBeamParams.neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):PMPS:TRANS:BP:Rate_RBV
      - longin
      - $(SYMBOL).stTransitionDb.stBeamParams.nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):PMPS:TRANS:BP:Transmission_RBV
      - ai
      - $(SYMBOL).stTransitionDb.stBeamParams.nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PMPS:TRANS:BP:Valid_RBV
      - bi
      - $(SYMBOL).stTransitionDb.stBeamParams.xValid
      - | io: input


    * - $(PREFIX):PMPS:TRANS:BP:Veto_RBV
      - waveform
      - $(SYMBOL).stTransitionDb.stBeamParams.aVetoDevices
      - | io: input


    * - $(PREFIX):PMPS:TRANS:PMPS_ID_RBV
      - longin
      - Assertion Request ID
      - | io: input


    * - $(PREFIX):PMPS:TRANS:PMPS_LOADED_RBV
      - bi
      - TRUE if PMPS loaded parameters from the database.
      - | io: input


    * - $(PREFIX):PMPS:TRANS:PMPS_STATE_RBV
      - waveform
      - PMPS Database Lookup Key
      - | io: input


    * - $(PREFIX):PMPS:TRANS:ReParams:PressSP_RBV
      - ai
      - $(SYMBOL).stTransitionDb.stReactiveParams.nPressSP
      - | field: EGU "TORR"
        | field: PREC 2
        | io: input


    * - $(PREFIX):PMPS:TRANS:ReParams:TempSP_RBV
      - ai
      - $(SYMBOL).stTransitionDb.stReactiveParams.nTempSP
      - | field: EGU "C"
        | field: PREC 2
        | io: input


 
lcls_twincat_physics.FB_AtomicMass
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Error_RBV
      - bi
      - TRUE if in error state. FALSE if not.
      - | io: input


    * - $(PREFIX):ErrorMsg_RBV
      - waveform
      - Message to aid in debugging if error is true.
      - | io: input


 
lcls_twincat_physics.FB_ElementDensity
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Error_RBV
      - bi
      - TRUE if in error state. FALSE if not.
      - | io: input


    * - $(PREFIX):ErrorMsg_RBV
      - waveform
      - Message to aid in debugging if error is true.
      - | io: input


 
lcls_twincat_physics.FB_Fallible
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Error_RBV
      - bi
      - TRUE if in error state. FALSE if not.
      - | io: input


    * - $(PREFIX):ErrorMsg_RBV
      - waveform
      - Message to aid in debugging if error is true.
      - | io: input


 
lcls_twincat_physics.FB_FalliblePublic
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Error_RBV
      - bi
      - TRUE if in error state. FALSE if not.
      - | io: input


    * - $(PREFIX):ErrorMsg_RBV
      - waveform
      - Message to aid in debugging if error is true.
      - | io: input


 
lcls_twincat_physics.FB_QuantityLREALPublic
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Error_RBV
      - bi
      - TRUE if in error state. FALSE if not.
      - | io: input


    * - $(PREFIX):ErrorMsg_RBV
      - waveform
      - Message to aid in debugging if error is true.
      - | io: input


    * - $(PREFIX):Units
      - waveform
      - Units of quantity.
      - | io: output


    * - $(PREFIX):Units_RBV
      - waveform
      - Units of quantity.
      - | io: output


    * - $(PREFIX):Value
      - ao
      - Value of quantity.
      - | io: output


    * - $(PREFIX):Value_RBV
      - ai
      - Value of quantity.
      - | io: output


             
Main
^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLF:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM1L0:XTES:CLZ:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLF:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM2L0:XTES:CLZ:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLF:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM4L0:XTES:CLZ:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Y:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:Z:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):RTDSL0:DIODE:MMS:01:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):RTDSL0:LDM:MMS:01:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:BOTTOM:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:NORTH:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:SOUTH:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL1L0:POWER:MMS:TOP:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:BOTTOM:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:NORTH:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:SOUTH:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SL2L0:POWER:MMS:TOP:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - $(PREFIX):SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


               
PMPS.FB_Arbiter
^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):AP:Entry:001:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:001:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:001:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:001:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:001:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:001:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:001:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:001:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:001:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:001:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:001:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:001:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:001:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:001:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:002:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:002:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:002:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:002:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:002:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:002:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:002:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:002:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:002:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:002:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:002:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:002:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:002:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:003:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:003:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:003:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:003:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:003:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:003:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:003:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:003:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:003:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:003:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:003:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:003:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:003:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:004:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:004:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:004:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:004:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:004:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:004:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:004:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:004:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:004:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:004:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:004:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:004:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:004:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:005:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:005:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:005:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:005:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:005:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:005:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:005:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:005:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:005:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:005:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:005:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:005:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:005:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:006:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:006:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:006:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:006:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:006:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:006:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:006:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:006:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:006:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:006:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:006:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:006:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:006:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:007:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:007:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:007:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:007:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:007:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:007:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:007:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:007:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:007:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:007:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:007:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:007:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:007:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:008:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:008:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:008:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:008:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:008:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:008:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:008:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:008:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:008:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:008:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:008:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:008:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:008:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:009:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:009:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:009:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:009:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:009:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:009:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:009:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:009:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:009:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:009:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:009:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:009:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:009:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:010:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:010:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:010:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:010:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:010:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:010:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:010:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:010:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:010:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:010:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:010:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:010:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:010:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:011:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:011:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:011:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:011:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:011:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:011:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:011:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:011:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:011:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:011:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:011:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:011:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:011:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:012:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:012:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:012:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:012:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:012:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:012:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:012:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:012:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:012:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:012:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:012:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:012:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:012:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:013:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:013:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:013:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:013:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:013:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:013:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:013:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:013:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:013:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:013:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:013:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:013:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:013:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:014:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:014:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:014:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:014:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:014:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:014:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:014:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:014:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:014:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:014:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:014:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:014:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:014:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:015:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:015:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:015:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:015:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:015:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:015:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:015:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:015:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:015:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:015:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:015:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:015:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:015:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:016:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:016:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:016:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:016:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:016:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:016:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:016:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:016:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:016:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:016:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:016:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:016:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:016:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:017:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:017:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:017:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:017:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:017:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:017:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:017:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:017:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:017:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:017:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:017:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:017:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:017:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:018:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:018:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:018:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:018:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:018:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:018:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:018:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:018:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:018:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:018:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:018:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:018:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:018:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:019:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:019:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:019:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:019:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:019:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:019:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:019:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:019:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:019:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:019:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:019:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:019:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:019:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:020:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:020:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:020:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:020:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:020:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:020:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:020:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:020:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:020:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:020:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:020:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:020:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:020:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):ArbiterID_RBV
      - longin
      - Arbiter ID for elev. req.
      - | io: input


    * - $(PREFIX):ArbitratedBP:Apt:01:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):ArbitratedBP:Apt:01:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):ArbitratedBP:Apt:01:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):ArbitratedBP:Apt:02:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):ArbitratedBP:Apt:02:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):ArbitratedBP:Apt:02:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):ArbitratedBP:Apt:03:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):ArbitratedBP:Apt:03:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):ArbitratedBP:Apt:03:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):ArbitratedBP:Apt:04:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):ArbitratedBP:Apt:04:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):ArbitratedBP:Apt:04:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):ArbitratedBP:BeamClass_RBV
      - longin
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):ArbitratedBP:BeamClassRanges_RBV
      - longin
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):ArbitratedBP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):ArbitratedBP:eVRanges_RBV
      - longin
      - Arbitrated BP
      - | field: EGU eV
        | io: input


    * - $(PREFIX):ArbitratedBP:MachineMode_RBV
      - longin
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):ArbitratedBP:PhotonEnergy_RBV
      - ai
      - Arbitrated BP
      - | field: EGU eV
        | io: input


    * - $(PREFIX):ArbitratedBP:Rate_RBV
      - longin
      - Arbitrated BP
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):ArbitratedBP:Transmission_RBV
      - ai
      - Arbitrated BP
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):ArbitratedBP:Valid_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):ArbitratedBP:Veto_RBV
      - waveform
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):CohortCounter_RBV
      - longin
      - Intrnl cohort counter
      - | io: input


 
PMPS.FB_BeamParamAssertionPool
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Entry:001:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[1].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:001:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[1].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:001:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[1].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:001:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[1].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:001:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[1].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:001:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[1].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:001:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[1].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:001:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[1].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:001:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[1].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:001:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[1].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:001:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[1].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:001:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[1].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:001:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[1].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:001:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[1].nBCRange
      - | io: input


    * - $(PREFIX):Entry:001:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:001:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[1].sDevName
      - | io: input


    * - $(PREFIX):Entry:001:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[1].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:001:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[1].nId
      - | io: input


    * - $(PREFIX):Entry:001:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[1].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:001:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[1].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:001:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[1].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:001:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[1].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:001:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[1].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:001:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[1].xValid
      - | io: input


    * - $(PREFIX):Entry:001:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[1].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:002:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[2].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:002:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[2].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:002:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[2].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:002:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[2].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:002:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[2].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:002:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[2].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:002:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[2].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:002:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[2].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:002:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[2].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:002:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[2].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:002:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[2].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:002:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[2].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:002:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[2].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:002:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[2].nBCRange
      - | io: input


    * - $(PREFIX):Entry:002:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:002:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[2].sDevName
      - | io: input


    * - $(PREFIX):Entry:002:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[2].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:002:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[2].nId
      - | io: input


    * - $(PREFIX):Entry:002:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[2].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:002:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[2].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:002:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[2].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:002:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[2].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:002:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[2].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:002:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[2].xValid
      - | io: input


    * - $(PREFIX):Entry:002:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[2].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:003:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[3].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:003:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[3].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:003:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[3].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:003:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[3].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:003:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[3].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:003:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[3].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:003:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[3].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:003:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[3].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:003:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[3].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:003:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[3].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:003:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[3].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:003:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[3].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:003:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[3].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:003:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[3].nBCRange
      - | io: input


    * - $(PREFIX):Entry:003:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:003:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[3].sDevName
      - | io: input


    * - $(PREFIX):Entry:003:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[3].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:003:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[3].nId
      - | io: input


    * - $(PREFIX):Entry:003:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[3].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:003:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[3].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:003:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[3].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:003:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[3].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:003:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[3].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:003:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[3].xValid
      - | io: input


    * - $(PREFIX):Entry:003:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[3].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:004:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[4].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:004:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[4].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:004:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[4].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:004:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[4].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:004:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[4].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:004:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[4].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:004:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[4].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:004:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[4].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:004:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[4].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:004:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[4].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:004:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[4].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:004:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[4].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:004:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[4].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:004:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[4].nBCRange
      - | io: input


    * - $(PREFIX):Entry:004:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:004:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[4].sDevName
      - | io: input


    * - $(PREFIX):Entry:004:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[4].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:004:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[4].nId
      - | io: input


    * - $(PREFIX):Entry:004:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[4].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:004:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[4].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:004:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[4].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:004:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[4].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:004:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[4].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:004:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[4].xValid
      - | io: input


    * - $(PREFIX):Entry:004:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[4].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:005:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[5].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:005:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[5].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:005:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[5].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:005:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[5].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:005:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[5].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:005:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[5].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:005:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[5].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:005:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[5].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:005:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[5].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:005:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[5].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:005:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[5].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:005:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[5].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:005:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[5].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:005:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[5].nBCRange
      - | io: input


    * - $(PREFIX):Entry:005:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:005:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[5].sDevName
      - | io: input


    * - $(PREFIX):Entry:005:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[5].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:005:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[5].nId
      - | io: input


    * - $(PREFIX):Entry:005:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[5].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:005:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[5].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:005:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[5].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:005:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[5].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:005:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[5].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:005:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[5].xValid
      - | io: input


    * - $(PREFIX):Entry:005:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[5].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:006:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[6].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:006:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[6].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:006:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[6].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:006:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[6].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:006:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[6].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:006:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[6].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:006:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[6].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:006:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[6].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:006:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[6].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:006:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[6].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:006:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[6].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:006:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[6].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:006:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[6].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:006:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[6].nBCRange
      - | io: input


    * - $(PREFIX):Entry:006:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:006:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[6].sDevName
      - | io: input


    * - $(PREFIX):Entry:006:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[6].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:006:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[6].nId
      - | io: input


    * - $(PREFIX):Entry:006:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[6].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:006:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[6].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:006:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[6].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:006:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[6].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:006:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[6].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:006:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[6].xValid
      - | io: input


    * - $(PREFIX):Entry:006:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[6].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:007:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[7].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:007:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[7].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:007:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[7].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:007:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[7].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:007:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[7].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:007:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[7].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:007:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[7].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:007:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[7].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:007:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[7].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:007:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[7].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:007:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[7].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:007:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[7].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:007:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[7].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:007:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[7].nBCRange
      - | io: input


    * - $(PREFIX):Entry:007:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:007:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[7].sDevName
      - | io: input


    * - $(PREFIX):Entry:007:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[7].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:007:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[7].nId
      - | io: input


    * - $(PREFIX):Entry:007:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[7].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:007:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[7].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:007:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[7].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:007:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[7].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:007:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[7].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:007:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[7].xValid
      - | io: input


    * - $(PREFIX):Entry:007:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[7].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:008:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[8].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:008:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[8].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:008:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[8].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:008:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[8].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:008:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[8].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:008:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[8].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:008:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[8].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:008:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[8].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:008:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[8].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:008:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[8].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:008:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[8].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:008:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[8].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:008:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[8].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:008:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[8].nBCRange
      - | io: input


    * - $(PREFIX):Entry:008:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:008:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[8].sDevName
      - | io: input


    * - $(PREFIX):Entry:008:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[8].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:008:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[8].nId
      - | io: input


    * - $(PREFIX):Entry:008:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[8].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:008:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[8].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:008:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[8].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:008:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[8].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:008:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[8].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:008:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[8].xValid
      - | io: input


    * - $(PREFIX):Entry:008:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[8].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:009:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[9].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:009:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[9].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:009:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[9].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:009:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[9].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:009:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[9].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:009:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[9].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:009:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[9].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:009:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[9].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:009:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[9].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:009:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[9].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:009:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[9].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:009:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[9].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:009:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[9].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:009:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[9].nBCRange
      - | io: input


    * - $(PREFIX):Entry:009:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:009:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[9].sDevName
      - | io: input


    * - $(PREFIX):Entry:009:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[9].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:009:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[9].nId
      - | io: input


    * - $(PREFIX):Entry:009:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[9].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:009:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[9].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:009:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[9].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:009:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[9].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:009:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[9].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:009:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[9].xValid
      - | io: input


    * - $(PREFIX):Entry:009:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[9].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:010:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[10].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:010:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[10].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:010:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[10].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:010:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[10].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:010:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[10].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:010:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[10].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:010:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[10].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:010:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[10].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:010:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[10].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:010:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[10].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:010:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[10].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:010:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[10].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:010:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[10].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:010:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[10].nBCRange
      - | io: input


    * - $(PREFIX):Entry:010:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:010:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[10].sDevName
      - | io: input


    * - $(PREFIX):Entry:010:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[10].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:010:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[10].nId
      - | io: input


    * - $(PREFIX):Entry:010:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[10].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:010:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[10].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:010:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[10].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:010:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[10].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:010:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[10].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:010:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[10].xValid
      - | io: input


    * - $(PREFIX):Entry:010:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[10].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:011:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[11].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:011:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[11].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:011:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[11].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:011:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[11].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:011:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[11].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:011:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[11].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:011:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[11].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:011:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[11].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:011:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[11].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:011:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[11].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:011:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[11].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:011:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[11].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:011:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[11].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:011:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[11].nBCRange
      - | io: input


    * - $(PREFIX):Entry:011:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:011:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[11].sDevName
      - | io: input


    * - $(PREFIX):Entry:011:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[11].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:011:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[11].nId
      - | io: input


    * - $(PREFIX):Entry:011:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[11].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:011:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[11].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:011:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[11].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:011:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[11].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:011:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[11].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:011:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[11].xValid
      - | io: input


    * - $(PREFIX):Entry:011:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[11].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:012:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[12].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:012:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[12].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:012:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[12].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:012:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[12].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:012:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[12].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:012:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[12].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:012:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[12].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:012:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[12].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:012:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[12].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:012:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[12].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:012:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[12].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:012:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[12].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:012:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[12].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:012:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[12].nBCRange
      - | io: input


    * - $(PREFIX):Entry:012:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:012:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[12].sDevName
      - | io: input


    * - $(PREFIX):Entry:012:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[12].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:012:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[12].nId
      - | io: input


    * - $(PREFIX):Entry:012:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[12].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:012:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[12].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:012:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[12].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:012:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[12].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:012:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[12].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:012:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[12].xValid
      - | io: input


    * - $(PREFIX):Entry:012:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[12].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:013:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[13].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:013:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[13].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:013:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[13].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:013:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[13].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:013:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[13].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:013:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[13].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:013:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[13].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:013:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[13].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:013:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[13].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:013:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[13].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:013:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[13].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:013:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[13].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:013:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[13].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:013:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[13].nBCRange
      - | io: input


    * - $(PREFIX):Entry:013:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:013:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[13].sDevName
      - | io: input


    * - $(PREFIX):Entry:013:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[13].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:013:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[13].nId
      - | io: input


    * - $(PREFIX):Entry:013:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[13].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:013:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[13].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:013:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[13].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:013:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[13].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:013:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[13].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:013:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[13].xValid
      - | io: input


    * - $(PREFIX):Entry:013:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[13].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:014:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[14].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:014:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[14].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:014:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[14].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:014:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[14].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:014:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[14].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:014:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[14].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:014:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[14].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:014:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[14].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:014:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[14].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:014:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[14].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:014:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[14].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:014:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[14].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:014:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[14].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:014:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[14].nBCRange
      - | io: input


    * - $(PREFIX):Entry:014:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:014:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[14].sDevName
      - | io: input


    * - $(PREFIX):Entry:014:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[14].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:014:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[14].nId
      - | io: input


    * - $(PREFIX):Entry:014:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[14].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:014:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[14].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:014:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[14].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:014:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[14].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:014:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[14].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:014:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[14].xValid
      - | io: input


    * - $(PREFIX):Entry:014:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[14].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:015:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[15].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:015:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[15].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:015:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[15].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:015:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[15].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:015:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[15].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:015:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[15].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:015:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[15].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:015:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[15].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:015:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[15].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:015:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[15].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:015:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[15].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:015:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[15].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:015:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[15].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:015:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[15].nBCRange
      - | io: input


    * - $(PREFIX):Entry:015:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:015:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[15].sDevName
      - | io: input


    * - $(PREFIX):Entry:015:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[15].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:015:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[15].nId
      - | io: input


    * - $(PREFIX):Entry:015:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[15].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:015:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[15].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:015:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[15].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:015:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[15].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:015:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[15].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:015:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[15].xValid
      - | io: input


    * - $(PREFIX):Entry:015:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[15].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:016:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[16].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:016:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[16].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:016:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[16].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:016:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[16].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:016:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[16].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:016:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[16].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:016:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[16].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:016:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[16].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:016:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[16].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:016:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[16].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:016:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[16].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:016:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[16].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:016:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[16].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:016:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[16].nBCRange
      - | io: input


    * - $(PREFIX):Entry:016:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:016:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[16].sDevName
      - | io: input


    * - $(PREFIX):Entry:016:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[16].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:016:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[16].nId
      - | io: input


    * - $(PREFIX):Entry:016:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[16].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:016:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[16].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:016:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[16].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:016:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[16].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:016:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[16].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:016:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[16].xValid
      - | io: input


    * - $(PREFIX):Entry:016:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[16].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:017:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[17].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:017:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[17].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:017:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[17].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:017:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[17].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:017:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[17].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:017:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[17].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:017:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[17].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:017:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[17].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:017:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[17].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:017:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[17].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:017:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[17].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:017:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[17].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:017:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[17].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:017:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[17].nBCRange
      - | io: input


    * - $(PREFIX):Entry:017:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:017:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[17].sDevName
      - | io: input


    * - $(PREFIX):Entry:017:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[17].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:017:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[17].nId
      - | io: input


    * - $(PREFIX):Entry:017:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[17].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:017:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[17].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:017:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[17].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:017:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[17].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:017:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[17].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:017:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[17].xValid
      - | io: input


    * - $(PREFIX):Entry:017:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[17].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:018:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[18].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:018:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[18].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:018:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[18].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:018:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[18].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:018:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[18].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:018:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[18].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:018:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[18].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:018:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[18].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:018:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[18].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:018:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[18].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:018:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[18].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:018:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[18].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:018:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[18].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:018:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[18].nBCRange
      - | io: input


    * - $(PREFIX):Entry:018:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:018:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[18].sDevName
      - | io: input


    * - $(PREFIX):Entry:018:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[18].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:018:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[18].nId
      - | io: input


    * - $(PREFIX):Entry:018:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[18].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:018:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[18].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:018:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[18].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:018:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[18].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:018:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[18].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:018:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[18].xValid
      - | io: input


    * - $(PREFIX):Entry:018:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[18].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:019:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[19].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:019:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[19].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:019:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[19].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:019:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[19].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:019:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[19].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:019:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[19].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:019:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[19].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:019:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[19].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:019:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[19].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:019:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[19].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:019:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[19].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:019:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[19].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:019:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[19].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:019:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[19].nBCRange
      - | io: input


    * - $(PREFIX):Entry:019:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:019:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[19].sDevName
      - | io: input


    * - $(PREFIX):Entry:019:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[19].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:019:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[19].nId
      - | io: input


    * - $(PREFIX):Entry:019:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[19].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:019:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[19].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:019:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[19].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:019:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[19].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:019:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[19].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:019:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[19].xValid
      - | io: input


    * - $(PREFIX):Entry:019:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[19].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:020:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[20].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:020:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[20].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:020:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[20].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:020:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[20].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:020:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[20].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:020:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[20].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:020:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[20].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:020:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[20].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:020:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[20].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:020:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[20].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:020:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[20].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:020:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[20].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:020:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[20].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:020:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[20].nBCRange
      - | io: input


    * - $(PREFIX):Entry:020:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:020:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[20].sDevName
      - | io: input


    * - $(PREFIX):Entry:020:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[20].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:020:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[20].nId
      - | io: input


    * - $(PREFIX):Entry:020:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[20].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:020:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[20].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:020:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[20].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:020:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[20].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:020:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[20].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:020:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[20].xValid
      - | io: input


    * - $(PREFIX):Entry:020:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[20].aVetoDevices
      - | io: input


  
PMPS.FB_HardwareFFOutput
^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ClearFault
      - bo
      - Might be overidden by PLC writes
      - | io: output


    * - $(PREFIX):ClearFault_RBV
      - bi
      - Might be overidden by PLC writes
      - | io: output


    * - $(PREFIX):EnableVeto
      - bo
      - $(SYMBOL).i_xVeto
      - | io: output


    * - $(PREFIX):EnableVeto_RBV
      - bi
      - $(SYMBOL).i_xVeto
      - | io: output


    * - $(PREFIX):FaultHWO_RBV
      - bi
      - Hardware Output Status
      - | io: input


    * - $(PREFIX):FF:0001:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[1].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0001:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[1].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0001:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[1].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0001:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[1].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0001:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[1].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0001:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[1].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0001:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[1].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0001:OK_RBV
      - bi
      - $(SYMBOL).astFF[1].OK
      - | io: input


    * - $(PREFIX):FF:0001:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[1].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0001:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[1].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0001:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[1].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0001:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[1].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0001:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[1].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0001:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[1].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0001:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[1].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0001:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[1].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0001:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[1].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0001:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[1].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0001:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[1].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0001:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[1].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0001:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[1].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0001:Reset
      - bo
      - $(SYMBOL).astFF[1].Reset
      - | io: output


    * - $(PREFIX):FF:0001:Reset_RBV
      - bi
      - $(SYMBOL).astFF[1].Reset
      - | io: output


    * - $(PREFIX):FF:0002:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[2].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0002:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[2].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0002:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[2].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0002:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[2].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0002:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[2].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0002:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[2].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0002:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[2].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0002:OK_RBV
      - bi
      - $(SYMBOL).astFF[2].OK
      - | io: input


    * - $(PREFIX):FF:0002:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[2].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0002:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[2].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0002:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[2].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0002:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[2].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0002:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[2].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0002:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[2].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0002:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[2].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0002:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[2].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0002:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[2].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0002:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[2].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0002:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[2].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0002:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[2].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0002:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[2].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0002:Reset
      - bo
      - $(SYMBOL).astFF[2].Reset
      - | io: output


    * - $(PREFIX):FF:0002:Reset_RBV
      - bi
      - $(SYMBOL).astFF[2].Reset
      - | io: output


    * - $(PREFIX):FF:0003:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[3].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0003:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[3].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0003:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[3].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0003:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[3].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0003:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[3].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0003:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[3].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0003:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[3].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0003:OK_RBV
      - bi
      - $(SYMBOL).astFF[3].OK
      - | io: input


    * - $(PREFIX):FF:0003:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[3].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0003:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[3].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0003:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[3].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0003:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[3].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0003:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[3].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0003:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[3].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0003:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[3].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0003:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[3].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0003:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[3].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0003:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[3].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0003:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[3].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0003:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[3].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0003:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[3].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0003:Reset
      - bo
      - $(SYMBOL).astFF[3].Reset
      - | io: output


    * - $(PREFIX):FF:0003:Reset_RBV
      - bi
      - $(SYMBOL).astFF[3].Reset
      - | io: output


    * - $(PREFIX):FF:0004:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[4].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0004:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[4].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0004:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[4].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0004:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[4].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0004:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[4].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0004:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[4].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0004:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[4].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0004:OK_RBV
      - bi
      - $(SYMBOL).astFF[4].OK
      - | io: input


    * - $(PREFIX):FF:0004:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[4].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0004:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[4].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0004:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[4].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0004:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[4].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0004:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[4].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0004:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[4].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0004:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[4].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0004:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[4].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0004:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[4].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0004:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[4].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0004:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[4].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0004:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[4].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0004:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[4].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0004:Reset
      - bo
      - $(SYMBOL).astFF[4].Reset
      - | io: output


    * - $(PREFIX):FF:0004:Reset_RBV
      - bi
      - $(SYMBOL).astFF[4].Reset
      - | io: output


    * - $(PREFIX):FF:0005:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[5].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0005:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[5].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0005:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[5].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0005:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[5].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0005:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[5].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0005:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[5].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0005:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[5].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0005:OK_RBV
      - bi
      - $(SYMBOL).astFF[5].OK
      - | io: input


    * - $(PREFIX):FF:0005:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[5].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0005:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[5].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0005:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[5].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0005:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[5].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0005:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[5].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0005:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[5].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0005:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[5].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0005:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[5].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0005:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[5].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0005:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[5].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0005:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[5].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0005:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[5].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0005:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[5].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0005:Reset
      - bo
      - $(SYMBOL).astFF[5].Reset
      - | io: output


    * - $(PREFIX):FF:0005:Reset_RBV
      - bi
      - $(SYMBOL).astFF[5].Reset
      - | io: output


    * - $(PREFIX):FF:0006:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[6].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0006:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[6].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0006:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[6].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0006:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[6].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0006:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[6].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0006:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[6].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0006:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[6].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0006:OK_RBV
      - bi
      - $(SYMBOL).astFF[6].OK
      - | io: input


    * - $(PREFIX):FF:0006:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[6].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0006:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[6].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0006:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[6].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0006:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[6].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0006:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[6].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0006:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[6].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0006:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[6].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0006:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[6].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0006:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[6].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0006:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[6].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0006:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[6].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0006:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[6].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0006:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[6].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0006:Reset
      - bo
      - $(SYMBOL).astFF[6].Reset
      - | io: output


    * - $(PREFIX):FF:0006:Reset_RBV
      - bi
      - $(SYMBOL).astFF[6].Reset
      - | io: output


    * - $(PREFIX):FF:0007:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[7].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0007:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[7].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0007:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[7].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0007:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[7].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0007:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[7].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0007:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[7].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0007:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[7].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0007:OK_RBV
      - bi
      - $(SYMBOL).astFF[7].OK
      - | io: input


    * - $(PREFIX):FF:0007:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[7].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0007:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[7].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0007:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[7].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0007:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[7].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0007:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[7].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0007:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[7].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0007:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[7].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0007:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[7].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0007:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[7].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0007:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[7].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0007:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[7].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0007:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[7].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0007:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[7].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0007:Reset
      - bo
      - $(SYMBOL).astFF[7].Reset
      - | io: output


    * - $(PREFIX):FF:0007:Reset_RBV
      - bi
      - $(SYMBOL).astFF[7].Reset
      - | io: output


    * - $(PREFIX):FF:0008:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[8].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0008:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[8].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0008:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[8].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0008:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[8].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0008:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[8].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0008:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[8].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0008:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[8].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0008:OK_RBV
      - bi
      - $(SYMBOL).astFF[8].OK
      - | io: input


    * - $(PREFIX):FF:0008:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[8].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0008:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[8].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0008:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[8].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0008:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[8].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0008:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[8].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0008:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[8].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0008:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[8].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0008:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[8].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0008:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[8].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0008:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[8].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0008:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[8].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0008:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[8].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0008:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[8].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0008:Reset
      - bo
      - $(SYMBOL).astFF[8].Reset
      - | io: output


    * - $(PREFIX):FF:0008:Reset_RBV
      - bi
      - $(SYMBOL).astFF[8].Reset
      - | io: output


    * - $(PREFIX):FF:0009:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[9].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0009:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[9].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0009:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[9].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0009:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[9].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0009:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[9].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0009:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[9].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0009:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[9].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0009:OK_RBV
      - bi
      - $(SYMBOL).astFF[9].OK
      - | io: input


    * - $(PREFIX):FF:0009:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[9].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0009:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[9].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0009:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[9].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0009:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[9].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0009:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[9].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0009:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[9].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0009:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[9].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0009:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[9].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0009:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[9].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0009:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[9].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0009:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[9].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0009:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[9].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0009:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[9].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0009:Reset
      - bo
      - $(SYMBOL).astFF[9].Reset
      - | io: output


    * - $(PREFIX):FF:0009:Reset_RBV
      - bi
      - $(SYMBOL).astFF[9].Reset
      - | io: output


    * - $(PREFIX):FF:0010:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[10].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0010:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[10].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0010:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[10].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0010:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[10].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0010:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[10].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0010:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[10].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0010:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[10].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0010:OK_RBV
      - bi
      - $(SYMBOL).astFF[10].OK
      - | io: input


    * - $(PREFIX):FF:0010:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[10].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0010:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[10].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0010:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[10].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0010:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[10].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0010:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[10].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0010:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[10].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0010:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[10].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0010:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[10].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0010:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[10].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0010:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[10].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0010:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[10].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0010:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[10].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0010:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[10].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0010:Reset
      - bo
      - $(SYMBOL).astFF[10].Reset
      - | io: output


    * - $(PREFIX):FF:0010:Reset_RBV
      - bi
      - $(SYMBOL).astFF[10].Reset
      - | io: output


    * - $(PREFIX):FF:0011:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[11].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0011:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[11].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0011:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[11].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0011:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[11].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0011:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[11].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0011:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[11].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0011:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[11].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0011:OK_RBV
      - bi
      - $(SYMBOL).astFF[11].OK
      - | io: input


    * - $(PREFIX):FF:0011:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[11].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0011:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[11].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0011:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[11].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0011:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[11].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0011:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[11].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0011:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[11].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0011:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[11].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0011:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[11].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0011:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[11].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0011:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[11].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0011:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[11].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0011:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[11].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0011:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[11].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0011:Reset
      - bo
      - $(SYMBOL).astFF[11].Reset
      - | io: output


    * - $(PREFIX):FF:0011:Reset_RBV
      - bi
      - $(SYMBOL).astFF[11].Reset
      - | io: output


    * - $(PREFIX):FF:0012:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[12].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0012:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[12].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0012:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[12].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0012:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[12].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0012:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[12].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0012:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[12].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0012:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[12].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0012:OK_RBV
      - bi
      - $(SYMBOL).astFF[12].OK
      - | io: input


    * - $(PREFIX):FF:0012:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[12].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0012:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[12].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0012:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[12].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0012:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[12].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0012:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[12].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0012:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[12].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0012:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[12].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0012:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[12].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0012:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[12].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0012:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[12].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0012:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[12].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0012:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[12].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0012:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[12].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0012:Reset
      - bo
      - $(SYMBOL).astFF[12].Reset
      - | io: output


    * - $(PREFIX):FF:0012:Reset_RBV
      - bi
      - $(SYMBOL).astFF[12].Reset
      - | io: output


    * - $(PREFIX):FF:0013:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[13].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0013:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[13].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0013:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[13].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0013:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[13].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0013:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[13].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0013:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[13].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0013:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[13].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0013:OK_RBV
      - bi
      - $(SYMBOL).astFF[13].OK
      - | io: input


    * - $(PREFIX):FF:0013:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[13].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0013:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[13].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0013:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[13].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0013:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[13].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0013:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[13].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0013:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[13].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0013:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[13].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0013:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[13].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0013:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[13].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0013:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[13].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0013:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[13].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0013:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[13].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0013:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[13].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0013:Reset
      - bo
      - $(SYMBOL).astFF[13].Reset
      - | io: output


    * - $(PREFIX):FF:0013:Reset_RBV
      - bi
      - $(SYMBOL).astFF[13].Reset
      - | io: output


    * - $(PREFIX):FF:0014:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[14].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0014:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[14].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0014:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[14].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0014:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[14].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0014:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[14].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0014:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[14].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0014:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[14].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0014:OK_RBV
      - bi
      - $(SYMBOL).astFF[14].OK
      - | io: input


    * - $(PREFIX):FF:0014:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[14].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0014:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[14].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0014:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[14].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0014:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[14].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0014:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[14].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0014:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[14].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0014:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[14].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0014:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[14].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0014:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[14].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0014:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[14].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0014:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[14].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0014:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[14].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0014:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[14].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0014:Reset
      - bo
      - $(SYMBOL).astFF[14].Reset
      - | io: output


    * - $(PREFIX):FF:0014:Reset_RBV
      - bi
      - $(SYMBOL).astFF[14].Reset
      - | io: output


    * - $(PREFIX):FF:0015:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[15].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0015:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[15].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0015:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[15].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0015:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[15].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0015:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[15].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0015:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[15].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0015:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[15].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0015:OK_RBV
      - bi
      - $(SYMBOL).astFF[15].OK
      - | io: input


    * - $(PREFIX):FF:0015:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[15].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0015:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[15].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0015:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[15].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0015:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[15].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0015:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[15].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0015:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[15].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0015:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[15].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0015:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[15].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0015:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[15].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0015:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[15].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0015:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[15].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0015:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[15].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0015:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[15].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0015:Reset
      - bo
      - $(SYMBOL).astFF[15].Reset
      - | io: output


    * - $(PREFIX):FF:0015:Reset_RBV
      - bi
      - $(SYMBOL).astFF[15].Reset
      - | io: output


    * - $(PREFIX):FF:0016:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[16].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0016:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[16].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0016:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[16].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0016:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[16].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0016:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[16].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0016:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[16].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0016:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[16].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0016:OK_RBV
      - bi
      - $(SYMBOL).astFF[16].OK
      - | io: input


    * - $(PREFIX):FF:0016:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[16].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0016:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[16].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0016:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[16].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0016:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[16].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0016:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[16].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0016:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[16].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0016:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[16].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0016:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[16].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0016:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[16].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0016:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[16].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0016:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[16].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0016:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[16].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0016:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[16].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0016:Reset
      - bo
      - $(SYMBOL).astFF[16].Reset
      - | io: output


    * - $(PREFIX):FF:0016:Reset_RBV
      - bi
      - $(SYMBOL).astFF[16].Reset
      - | io: output


    * - $(PREFIX):FF:0017:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[17].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0017:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[17].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0017:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[17].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0017:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[17].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0017:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[17].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0017:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[17].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0017:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[17].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0017:OK_RBV
      - bi
      - $(SYMBOL).astFF[17].OK
      - | io: input


    * - $(PREFIX):FF:0017:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[17].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0017:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[17].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0017:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[17].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0017:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[17].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0017:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[17].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0017:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[17].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0017:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[17].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0017:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[17].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0017:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[17].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0017:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[17].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0017:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[17].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0017:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[17].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0017:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[17].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0017:Reset
      - bo
      - $(SYMBOL).astFF[17].Reset
      - | io: output


    * - $(PREFIX):FF:0017:Reset_RBV
      - bi
      - $(SYMBOL).astFF[17].Reset
      - | io: output


    * - $(PREFIX):FF:0018:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[18].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0018:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[18].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0018:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[18].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0018:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[18].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0018:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[18].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0018:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[18].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0018:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[18].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0018:OK_RBV
      - bi
      - $(SYMBOL).astFF[18].OK
      - | io: input


    * - $(PREFIX):FF:0018:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[18].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0018:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[18].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0018:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[18].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0018:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[18].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0018:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[18].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0018:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[18].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0018:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[18].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0018:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[18].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0018:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[18].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0018:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[18].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0018:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[18].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0018:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[18].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0018:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[18].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0018:Reset
      - bo
      - $(SYMBOL).astFF[18].Reset
      - | io: output


    * - $(PREFIX):FF:0018:Reset_RBV
      - bi
      - $(SYMBOL).astFF[18].Reset
      - | io: output


    * - $(PREFIX):FF:0019:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[19].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0019:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[19].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0019:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[19].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0019:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[19].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0019:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[19].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0019:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[19].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0019:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[19].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0019:OK_RBV
      - bi
      - $(SYMBOL).astFF[19].OK
      - | io: input


    * - $(PREFIX):FF:0019:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[19].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0019:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[19].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0019:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[19].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0019:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[19].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0019:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[19].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0019:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[19].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0019:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[19].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0019:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[19].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0019:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[19].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0019:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[19].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0019:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[19].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0019:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[19].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0019:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[19].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0019:Reset
      - bo
      - $(SYMBOL).astFF[19].Reset
      - | io: output


    * - $(PREFIX):FF:0019:Reset_RBV
      - bi
      - $(SYMBOL).astFF[19].Reset
      - | io: output


    * - $(PREFIX):FF:0020:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[20].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0020:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[20].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0020:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[20].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0020:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[20].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0020:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[20].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0020:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[20].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0020:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[20].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0020:OK_RBV
      - bi
      - $(SYMBOL).astFF[20].OK
      - | io: input


    * - $(PREFIX):FF:0020:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[20].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0020:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[20].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0020:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[20].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0020:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[20].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0020:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[20].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0020:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[20].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0020:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[20].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0020:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[20].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0020:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[20].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0020:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[20].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0020:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[20].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0020:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[20].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0020:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[20].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0020:Reset
      - bo
      - $(SYMBOL).astFF[20].Reset
      - | io: output


    * - $(PREFIX):FF:0020:Reset_RBV
      - bi
      - $(SYMBOL).astFF[20].Reset
      - | io: output


    * - $(PREFIX):FF:0021:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[21].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0021:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[21].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0021:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[21].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0021:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[21].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0021:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[21].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0021:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[21].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0021:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[21].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0021:OK_RBV
      - bi
      - $(SYMBOL).astFF[21].OK
      - | io: input


    * - $(PREFIX):FF:0021:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[21].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0021:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[21].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0021:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[21].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0021:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[21].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0021:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[21].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0021:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[21].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0021:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[21].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0021:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[21].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0021:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[21].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0021:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[21].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0021:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[21].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0021:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[21].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0021:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[21].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0021:Reset
      - bo
      - $(SYMBOL).astFF[21].Reset
      - | io: output


    * - $(PREFIX):FF:0021:Reset_RBV
      - bi
      - $(SYMBOL).astFF[21].Reset
      - | io: output


    * - $(PREFIX):FF:0022:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[22].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0022:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[22].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0022:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[22].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0022:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[22].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0022:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[22].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0022:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[22].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0022:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[22].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0022:OK_RBV
      - bi
      - $(SYMBOL).astFF[22].OK
      - | io: input


    * - $(PREFIX):FF:0022:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[22].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0022:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[22].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0022:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[22].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0022:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[22].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0022:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[22].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0022:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[22].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0022:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[22].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0022:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[22].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0022:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[22].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0022:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[22].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0022:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[22].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0022:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[22].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0022:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[22].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0022:Reset
      - bo
      - $(SYMBOL).astFF[22].Reset
      - | io: output


    * - $(PREFIX):FF:0022:Reset_RBV
      - bi
      - $(SYMBOL).astFF[22].Reset
      - | io: output


    * - $(PREFIX):FF:0023:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[23].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0023:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[23].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0023:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[23].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0023:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[23].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0023:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[23].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0023:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[23].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0023:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[23].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0023:OK_RBV
      - bi
      - $(SYMBOL).astFF[23].OK
      - | io: input


    * - $(PREFIX):FF:0023:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[23].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0023:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[23].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0023:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[23].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0023:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[23].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0023:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[23].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0023:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[23].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0023:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[23].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0023:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[23].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0023:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[23].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0023:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[23].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0023:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[23].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0023:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[23].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0023:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[23].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0023:Reset
      - bo
      - $(SYMBOL).astFF[23].Reset
      - | io: output


    * - $(PREFIX):FF:0023:Reset_RBV
      - bi
      - $(SYMBOL).astFF[23].Reset
      - | io: output


    * - $(PREFIX):FF:0024:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[24].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0024:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[24].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0024:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[24].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0024:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[24].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0024:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[24].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0024:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[24].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0024:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[24].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0024:OK_RBV
      - bi
      - $(SYMBOL).astFF[24].OK
      - | io: input


    * - $(PREFIX):FF:0024:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[24].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0024:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[24].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0024:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[24].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0024:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[24].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0024:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[24].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0024:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[24].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0024:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[24].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0024:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[24].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0024:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[24].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0024:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[24].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0024:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[24].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0024:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[24].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0024:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[24].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0024:Reset
      - bo
      - $(SYMBOL).astFF[24].Reset
      - | io: output


    * - $(PREFIX):FF:0024:Reset_RBV
      - bi
      - $(SYMBOL).astFF[24].Reset
      - | io: output


    * - $(PREFIX):FF:0025:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[25].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0025:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[25].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0025:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[25].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0025:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[25].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0025:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[25].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0025:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[25].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0025:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[25].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0025:OK_RBV
      - bi
      - $(SYMBOL).astFF[25].OK
      - | io: input


    * - $(PREFIX):FF:0025:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[25].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0025:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[25].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0025:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[25].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0025:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[25].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0025:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[25].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0025:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[25].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0025:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[25].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0025:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[25].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0025:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[25].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0025:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[25].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0025:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[25].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0025:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[25].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0025:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[25].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0025:Reset
      - bo
      - $(SYMBOL).astFF[25].Reset
      - | io: output


    * - $(PREFIX):FF:0025:Reset_RBV
      - bi
      - $(SYMBOL).astFF[25].Reset
      - | io: output


    * - $(PREFIX):FF:0026:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[26].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0026:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[26].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0026:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[26].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0026:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[26].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0026:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[26].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0026:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[26].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0026:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[26].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0026:OK_RBV
      - bi
      - $(SYMBOL).astFF[26].OK
      - | io: input


    * - $(PREFIX):FF:0026:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[26].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0026:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[26].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0026:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[26].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0026:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[26].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0026:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[26].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0026:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[26].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0026:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[26].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0026:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[26].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0026:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[26].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0026:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[26].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0026:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[26].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0026:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[26].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0026:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[26].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0026:Reset
      - bo
      - $(SYMBOL).astFF[26].Reset
      - | io: output


    * - $(PREFIX):FF:0026:Reset_RBV
      - bi
      - $(SYMBOL).astFF[26].Reset
      - | io: output


    * - $(PREFIX):FF:0027:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[27].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0027:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[27].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0027:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[27].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0027:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[27].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0027:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[27].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0027:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[27].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0027:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[27].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0027:OK_RBV
      - bi
      - $(SYMBOL).astFF[27].OK
      - | io: input


    * - $(PREFIX):FF:0027:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[27].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0027:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[27].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0027:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[27].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0027:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[27].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0027:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[27].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0027:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[27].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0027:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[27].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0027:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[27].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0027:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[27].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0027:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[27].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0027:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[27].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0027:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[27].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0027:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[27].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0027:Reset
      - bo
      - $(SYMBOL).astFF[27].Reset
      - | io: output


    * - $(PREFIX):FF:0027:Reset_RBV
      - bi
      - $(SYMBOL).astFF[27].Reset
      - | io: output


    * - $(PREFIX):FF:0028:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[28].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0028:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[28].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0028:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[28].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0028:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[28].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0028:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[28].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0028:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[28].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0028:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[28].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0028:OK_RBV
      - bi
      - $(SYMBOL).astFF[28].OK
      - | io: input


    * - $(PREFIX):FF:0028:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[28].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0028:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[28].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0028:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[28].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0028:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[28].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0028:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[28].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0028:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[28].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0028:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[28].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0028:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[28].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0028:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[28].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0028:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[28].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0028:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[28].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0028:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[28].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0028:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[28].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0028:Reset
      - bo
      - $(SYMBOL).astFF[28].Reset
      - | io: output


    * - $(PREFIX):FF:0028:Reset_RBV
      - bi
      - $(SYMBOL).astFF[28].Reset
      - | io: output


    * - $(PREFIX):FF:0029:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[29].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0029:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[29].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0029:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[29].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0029:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[29].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0029:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[29].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0029:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[29].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0029:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[29].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0029:OK_RBV
      - bi
      - $(SYMBOL).astFF[29].OK
      - | io: input


    * - $(PREFIX):FF:0029:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[29].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0029:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[29].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0029:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[29].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0029:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[29].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0029:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[29].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0029:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[29].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0029:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[29].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0029:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[29].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0029:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[29].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0029:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[29].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0029:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[29].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0029:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[29].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0029:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[29].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0029:Reset
      - bo
      - $(SYMBOL).astFF[29].Reset
      - | io: output


    * - $(PREFIX):FF:0029:Reset_RBV
      - bi
      - $(SYMBOL).astFF[29].Reset
      - | io: output


    * - $(PREFIX):FF:0030:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[30].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0030:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[30].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0030:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[30].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0030:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[30].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0030:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[30].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0030:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[30].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0030:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[30].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0030:OK_RBV
      - bi
      - $(SYMBOL).astFF[30].OK
      - | io: input


    * - $(PREFIX):FF:0030:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[30].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0030:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[30].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0030:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[30].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0030:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[30].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0030:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[30].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0030:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[30].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0030:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[30].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0030:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[30].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0030:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[30].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0030:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[30].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0030:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[30].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0030:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[30].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0030:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[30].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0030:Reset
      - bo
      - $(SYMBOL).astFF[30].Reset
      - | io: output


    * - $(PREFIX):FF:0030:Reset_RBV
      - bi
      - $(SYMBOL).astFF[30].Reset
      - | io: output


    * - $(PREFIX):FF:0031:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[31].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0031:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[31].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0031:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[31].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0031:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[31].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0031:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[31].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0031:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[31].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0031:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[31].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0031:OK_RBV
      - bi
      - $(SYMBOL).astFF[31].OK
      - | io: input


    * - $(PREFIX):FF:0031:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[31].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0031:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[31].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0031:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[31].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0031:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[31].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0031:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[31].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0031:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[31].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0031:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[31].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0031:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[31].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0031:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[31].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0031:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[31].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0031:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[31].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0031:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[31].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0031:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[31].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0031:Reset
      - bo
      - $(SYMBOL).astFF[31].Reset
      - | io: output


    * - $(PREFIX):FF:0031:Reset_RBV
      - bi
      - $(SYMBOL).astFF[31].Reset
      - | io: output


    * - $(PREFIX):FF:0032:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[32].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0032:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[32].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0032:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[32].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0032:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[32].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0032:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[32].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0032:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[32].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0032:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[32].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0032:OK_RBV
      - bi
      - $(SYMBOL).astFF[32].OK
      - | io: input


    * - $(PREFIX):FF:0032:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[32].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0032:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[32].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0032:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[32].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0032:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[32].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0032:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[32].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0032:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[32].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0032:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[32].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0032:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[32].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0032:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[32].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0032:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[32].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0032:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[32].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0032:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[32].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0032:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[32].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0032:Reset
      - bo
      - $(SYMBOL).astFF[32].Reset
      - | io: output


    * - $(PREFIX):FF:0032:Reset_RBV
      - bi
      - $(SYMBOL).astFF[32].Reset
      - | io: output


    * - $(PREFIX):FF:0033:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[33].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0033:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[33].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0033:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[33].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0033:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[33].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0033:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[33].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0033:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[33].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0033:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[33].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0033:OK_RBV
      - bi
      - $(SYMBOL).astFF[33].OK
      - | io: input


    * - $(PREFIX):FF:0033:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[33].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0033:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[33].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0033:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[33].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0033:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[33].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0033:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[33].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0033:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[33].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0033:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[33].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0033:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[33].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0033:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[33].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0033:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[33].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0033:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[33].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0033:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[33].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0033:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[33].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0033:Reset
      - bo
      - $(SYMBOL).astFF[33].Reset
      - | io: output


    * - $(PREFIX):FF:0033:Reset_RBV
      - bi
      - $(SYMBOL).astFF[33].Reset
      - | io: output


    * - $(PREFIX):FF:0034:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[34].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0034:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[34].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0034:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[34].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0034:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[34].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0034:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[34].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0034:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[34].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0034:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[34].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0034:OK_RBV
      - bi
      - $(SYMBOL).astFF[34].OK
      - | io: input


    * - $(PREFIX):FF:0034:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[34].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0034:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[34].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0034:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[34].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0034:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[34].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0034:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[34].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0034:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[34].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0034:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[34].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0034:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[34].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0034:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[34].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0034:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[34].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0034:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[34].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0034:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[34].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0034:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[34].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0034:Reset
      - bo
      - $(SYMBOL).astFF[34].Reset
      - | io: output


    * - $(PREFIX):FF:0034:Reset_RBV
      - bi
      - $(SYMBOL).astFF[34].Reset
      - | io: output


    * - $(PREFIX):FF:0035:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[35].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0035:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[35].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0035:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[35].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0035:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[35].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0035:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[35].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0035:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[35].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0035:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[35].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0035:OK_RBV
      - bi
      - $(SYMBOL).astFF[35].OK
      - | io: input


    * - $(PREFIX):FF:0035:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[35].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0035:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[35].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0035:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[35].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0035:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[35].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0035:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[35].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0035:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[35].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0035:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[35].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0035:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[35].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0035:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[35].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0035:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[35].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0035:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[35].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0035:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[35].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0035:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[35].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0035:Reset
      - bo
      - $(SYMBOL).astFF[35].Reset
      - | io: output


    * - $(PREFIX):FF:0035:Reset_RBV
      - bi
      - $(SYMBOL).astFF[35].Reset
      - | io: output


    * - $(PREFIX):FF:0036:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[36].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0036:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[36].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0036:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[36].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0036:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[36].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0036:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[36].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0036:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[36].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0036:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[36].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0036:OK_RBV
      - bi
      - $(SYMBOL).astFF[36].OK
      - | io: input


    * - $(PREFIX):FF:0036:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[36].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0036:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[36].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0036:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[36].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0036:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[36].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0036:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[36].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0036:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[36].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0036:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[36].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0036:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[36].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0036:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[36].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0036:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[36].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0036:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[36].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0036:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[36].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0036:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[36].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0036:Reset
      - bo
      - $(SYMBOL).astFF[36].Reset
      - | io: output


    * - $(PREFIX):FF:0036:Reset_RBV
      - bi
      - $(SYMBOL).astFF[36].Reset
      - | io: output


    * - $(PREFIX):FF:0037:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[37].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0037:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[37].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0037:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[37].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0037:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[37].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0037:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[37].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0037:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[37].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0037:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[37].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0037:OK_RBV
      - bi
      - $(SYMBOL).astFF[37].OK
      - | io: input


    * - $(PREFIX):FF:0037:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[37].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0037:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[37].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0037:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[37].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0037:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[37].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0037:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[37].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0037:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[37].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0037:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[37].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0037:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[37].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0037:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[37].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0037:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[37].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0037:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[37].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0037:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[37].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0037:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[37].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0037:Reset
      - bo
      - $(SYMBOL).astFF[37].Reset
      - | io: output


    * - $(PREFIX):FF:0037:Reset_RBV
      - bi
      - $(SYMBOL).astFF[37].Reset
      - | io: output


    * - $(PREFIX):FF:0038:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[38].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0038:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[38].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0038:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[38].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0038:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[38].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0038:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[38].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0038:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[38].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0038:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[38].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0038:OK_RBV
      - bi
      - $(SYMBOL).astFF[38].OK
      - | io: input


    * - $(PREFIX):FF:0038:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[38].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0038:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[38].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0038:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[38].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0038:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[38].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0038:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[38].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0038:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[38].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0038:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[38].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0038:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[38].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0038:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[38].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0038:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[38].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0038:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[38].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0038:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[38].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0038:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[38].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0038:Reset
      - bo
      - $(SYMBOL).astFF[38].Reset
      - | io: output


    * - $(PREFIX):FF:0038:Reset_RBV
      - bi
      - $(SYMBOL).astFF[38].Reset
      - | io: output


    * - $(PREFIX):FF:0039:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[39].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0039:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[39].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0039:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[39].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0039:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[39].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0039:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[39].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0039:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[39].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0039:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[39].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0039:OK_RBV
      - bi
      - $(SYMBOL).astFF[39].OK
      - | io: input


    * - $(PREFIX):FF:0039:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[39].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0039:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[39].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0039:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[39].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0039:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[39].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0039:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[39].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0039:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[39].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0039:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[39].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0039:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[39].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0039:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[39].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0039:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[39].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0039:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[39].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0039:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[39].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0039:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[39].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0039:Reset
      - bo
      - $(SYMBOL).astFF[39].Reset
      - | io: output


    * - $(PREFIX):FF:0039:Reset_RBV
      - bi
      - $(SYMBOL).astFF[39].Reset
      - | io: output


    * - $(PREFIX):FF:0040:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[40].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0040:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[40].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0040:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[40].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0040:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[40].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0040:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[40].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0040:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[40].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0040:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[40].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0040:OK_RBV
      - bi
      - $(SYMBOL).astFF[40].OK
      - | io: input


    * - $(PREFIX):FF:0040:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[40].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0040:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[40].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0040:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[40].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0040:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[40].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0040:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[40].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0040:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[40].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0040:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[40].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0040:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[40].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0040:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[40].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0040:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[40].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0040:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[40].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0040:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[40].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0040:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[40].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0040:Reset
      - bo
      - $(SYMBOL).astFF[40].Reset
      - | io: output


    * - $(PREFIX):FF:0040:Reset_RBV
      - bi
      - $(SYMBOL).astFF[40].Reset
      - | io: output


    * - $(PREFIX):FF:0041:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[41].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0041:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[41].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0041:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[41].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0041:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[41].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0041:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[41].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0041:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[41].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0041:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[41].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0041:OK_RBV
      - bi
      - $(SYMBOL).astFF[41].OK
      - | io: input


    * - $(PREFIX):FF:0041:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[41].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0041:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[41].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0041:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[41].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0041:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[41].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0041:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[41].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0041:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[41].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0041:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[41].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0041:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[41].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0041:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[41].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0041:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[41].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0041:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[41].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0041:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[41].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0041:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[41].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0041:Reset
      - bo
      - $(SYMBOL).astFF[41].Reset
      - | io: output


    * - $(PREFIX):FF:0041:Reset_RBV
      - bi
      - $(SYMBOL).astFF[41].Reset
      - | io: output


    * - $(PREFIX):FF:0042:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[42].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0042:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[42].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0042:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[42].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0042:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[42].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0042:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[42].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0042:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[42].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0042:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[42].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0042:OK_RBV
      - bi
      - $(SYMBOL).astFF[42].OK
      - | io: input


    * - $(PREFIX):FF:0042:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[42].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0042:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[42].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0042:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[42].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0042:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[42].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0042:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[42].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0042:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[42].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0042:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[42].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0042:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[42].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0042:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[42].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0042:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[42].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0042:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[42].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0042:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[42].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0042:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[42].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0042:Reset
      - bo
      - $(SYMBOL).astFF[42].Reset
      - | io: output


    * - $(PREFIX):FF:0042:Reset_RBV
      - bi
      - $(SYMBOL).astFF[42].Reset
      - | io: output


    * - $(PREFIX):FF:0043:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[43].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0043:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[43].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0043:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[43].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0043:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[43].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0043:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[43].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0043:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[43].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0043:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[43].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0043:OK_RBV
      - bi
      - $(SYMBOL).astFF[43].OK
      - | io: input


    * - $(PREFIX):FF:0043:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[43].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0043:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[43].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0043:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[43].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0043:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[43].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0043:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[43].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0043:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[43].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0043:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[43].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0043:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[43].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0043:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[43].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0043:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[43].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0043:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[43].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0043:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[43].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0043:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[43].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0043:Reset
      - bo
      - $(SYMBOL).astFF[43].Reset
      - | io: output


    * - $(PREFIX):FF:0043:Reset_RBV
      - bi
      - $(SYMBOL).astFF[43].Reset
      - | io: output


    * - $(PREFIX):FF:0044:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[44].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0044:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[44].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0044:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[44].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0044:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[44].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0044:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[44].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0044:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[44].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0044:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[44].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0044:OK_RBV
      - bi
      - $(SYMBOL).astFF[44].OK
      - | io: input


    * - $(PREFIX):FF:0044:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[44].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0044:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[44].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0044:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[44].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0044:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[44].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0044:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[44].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0044:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[44].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0044:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[44].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0044:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[44].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0044:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[44].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0044:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[44].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0044:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[44].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0044:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[44].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0044:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[44].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0044:Reset
      - bo
      - $(SYMBOL).astFF[44].Reset
      - | io: output


    * - $(PREFIX):FF:0044:Reset_RBV
      - bi
      - $(SYMBOL).astFF[44].Reset
      - | io: output


    * - $(PREFIX):FF:0045:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[45].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0045:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[45].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0045:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[45].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0045:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[45].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0045:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[45].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0045:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[45].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0045:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[45].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0045:OK_RBV
      - bi
      - $(SYMBOL).astFF[45].OK
      - | io: input


    * - $(PREFIX):FF:0045:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[45].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0045:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[45].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0045:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[45].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0045:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[45].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0045:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[45].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0045:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[45].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0045:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[45].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0045:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[45].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0045:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[45].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0045:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[45].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0045:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[45].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0045:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[45].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0045:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[45].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0045:Reset
      - bo
      - $(SYMBOL).astFF[45].Reset
      - | io: output


    * - $(PREFIX):FF:0045:Reset_RBV
      - bi
      - $(SYMBOL).astFF[45].Reset
      - | io: output


    * - $(PREFIX):FF:0046:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[46].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0046:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[46].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0046:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[46].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0046:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[46].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0046:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[46].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0046:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[46].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0046:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[46].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0046:OK_RBV
      - bi
      - $(SYMBOL).astFF[46].OK
      - | io: input


    * - $(PREFIX):FF:0046:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[46].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0046:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[46].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0046:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[46].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0046:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[46].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0046:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[46].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0046:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[46].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0046:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[46].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0046:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[46].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0046:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[46].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0046:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[46].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0046:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[46].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0046:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[46].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0046:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[46].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0046:Reset
      - bo
      - $(SYMBOL).astFF[46].Reset
      - | io: output


    * - $(PREFIX):FF:0046:Reset_RBV
      - bi
      - $(SYMBOL).astFF[46].Reset
      - | io: output


    * - $(PREFIX):FF:0047:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[47].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0047:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[47].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0047:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[47].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0047:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[47].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0047:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[47].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0047:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[47].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0047:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[47].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0047:OK_RBV
      - bi
      - $(SYMBOL).astFF[47].OK
      - | io: input


    * - $(PREFIX):FF:0047:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[47].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0047:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[47].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0047:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[47].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0047:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[47].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0047:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[47].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0047:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[47].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0047:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[47].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0047:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[47].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0047:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[47].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0047:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[47].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0047:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[47].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0047:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[47].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0047:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[47].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0047:Reset
      - bo
      - $(SYMBOL).astFF[47].Reset
      - | io: output


    * - $(PREFIX):FF:0047:Reset_RBV
      - bi
      - $(SYMBOL).astFF[47].Reset
      - | io: output


    * - $(PREFIX):FF:0048:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[48].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0048:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[48].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0048:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[48].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0048:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[48].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0048:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[48].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0048:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[48].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0048:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[48].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0048:OK_RBV
      - bi
      - $(SYMBOL).astFF[48].OK
      - | io: input


    * - $(PREFIX):FF:0048:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[48].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0048:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[48].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0048:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[48].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0048:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[48].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0048:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[48].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0048:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[48].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0048:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[48].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0048:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[48].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0048:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[48].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0048:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[48].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0048:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[48].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0048:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[48].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0048:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[48].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0048:Reset
      - bo
      - $(SYMBOL).astFF[48].Reset
      - | io: output


    * - $(PREFIX):FF:0048:Reset_RBV
      - bi
      - $(SYMBOL).astFF[48].Reset
      - | io: output


    * - $(PREFIX):FF:0049:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[49].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0049:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[49].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0049:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[49].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0049:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[49].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0049:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[49].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0049:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[49].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0049:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[49].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0049:OK_RBV
      - bi
      - $(SYMBOL).astFF[49].OK
      - | io: input


    * - $(PREFIX):FF:0049:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[49].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0049:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[49].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0049:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[49].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0049:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[49].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0049:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[49].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0049:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[49].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0049:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[49].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0049:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[49].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0049:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[49].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0049:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[49].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0049:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[49].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0049:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[49].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0049:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[49].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0049:Reset
      - bo
      - $(SYMBOL).astFF[49].Reset
      - | io: output


    * - $(PREFIX):FF:0049:Reset_RBV
      - bi
      - $(SYMBOL).astFF[49].Reset
      - | io: output


    * - $(PREFIX):FF:0050:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[50].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0050:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[50].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0050:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[50].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0050:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[50].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0050:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[50].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0050:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[50].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0050:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[50].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0050:OK_RBV
      - bi
      - $(SYMBOL).astFF[50].OK
      - | io: input


    * - $(PREFIX):FF:0050:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[50].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0050:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[50].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0050:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[50].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0050:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[50].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0050:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[50].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0050:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[50].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0050:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[50].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0050:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[50].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0050:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[50].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0050:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[50].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0050:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[50].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0050:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[50].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0050:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[50].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0050:Reset
      - bo
      - $(SYMBOL).astFF[50].Reset
      - | io: output


    * - $(PREFIX):FF:0050:Reset_RBV
      - bi
      - $(SYMBOL).astFF[50].Reset
      - | io: output


    * - $(PREFIX):FF:0051:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[51].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0051:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[51].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0051:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[51].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0051:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[51].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0051:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[51].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0051:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[51].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0051:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[51].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0051:OK_RBV
      - bi
      - $(SYMBOL).astFF[51].OK
      - | io: input


    * - $(PREFIX):FF:0051:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[51].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0051:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[51].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0051:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[51].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0051:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[51].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0051:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[51].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0051:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[51].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0051:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[51].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0051:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[51].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0051:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[51].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0051:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[51].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0051:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[51].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0051:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[51].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0051:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[51].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0051:Reset
      - bo
      - $(SYMBOL).astFF[51].Reset
      - | io: output


    * - $(PREFIX):FF:0051:Reset_RBV
      - bi
      - $(SYMBOL).astFF[51].Reset
      - | io: output


    * - $(PREFIX):FF:0052:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[52].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0052:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[52].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0052:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[52].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0052:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[52].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0052:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[52].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0052:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[52].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0052:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[52].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0052:OK_RBV
      - bi
      - $(SYMBOL).astFF[52].OK
      - | io: input


    * - $(PREFIX):FF:0052:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[52].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0052:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[52].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0052:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[52].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0052:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[52].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0052:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[52].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0052:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[52].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0052:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[52].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0052:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[52].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0052:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[52].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0052:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[52].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0052:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[52].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0052:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[52].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0052:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[52].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0052:Reset
      - bo
      - $(SYMBOL).astFF[52].Reset
      - | io: output


    * - $(PREFIX):FF:0052:Reset_RBV
      - bi
      - $(SYMBOL).astFF[52].Reset
      - | io: output


    * - $(PREFIX):FF:0053:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[53].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0053:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[53].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0053:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[53].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0053:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[53].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0053:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[53].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0053:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[53].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0053:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[53].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0053:OK_RBV
      - bi
      - $(SYMBOL).astFF[53].OK
      - | io: input


    * - $(PREFIX):FF:0053:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[53].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0053:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[53].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0053:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[53].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0053:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[53].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0053:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[53].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0053:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[53].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0053:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[53].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0053:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[53].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0053:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[53].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0053:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[53].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0053:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[53].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0053:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[53].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0053:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[53].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0053:Reset
      - bo
      - $(SYMBOL).astFF[53].Reset
      - | io: output


    * - $(PREFIX):FF:0053:Reset_RBV
      - bi
      - $(SYMBOL).astFF[53].Reset
      - | io: output


    * - $(PREFIX):FF:0054:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[54].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0054:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[54].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0054:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[54].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0054:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[54].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0054:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[54].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0054:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[54].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0054:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[54].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0054:OK_RBV
      - bi
      - $(SYMBOL).astFF[54].OK
      - | io: input


    * - $(PREFIX):FF:0054:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[54].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0054:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[54].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0054:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[54].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0054:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[54].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0054:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[54].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0054:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[54].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0054:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[54].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0054:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[54].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0054:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[54].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0054:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[54].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0054:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[54].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0054:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[54].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0054:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[54].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0054:Reset
      - bo
      - $(SYMBOL).astFF[54].Reset
      - | io: output


    * - $(PREFIX):FF:0054:Reset_RBV
      - bi
      - $(SYMBOL).astFF[54].Reset
      - | io: output


    * - $(PREFIX):FF:0055:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[55].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0055:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[55].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0055:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[55].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0055:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[55].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0055:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[55].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0055:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[55].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0055:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[55].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0055:OK_RBV
      - bi
      - $(SYMBOL).astFF[55].OK
      - | io: input


    * - $(PREFIX):FF:0055:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[55].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0055:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[55].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0055:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[55].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0055:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[55].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0055:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[55].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0055:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[55].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0055:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[55].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0055:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[55].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0055:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[55].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0055:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[55].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0055:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[55].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0055:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[55].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0055:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[55].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0055:Reset
      - bo
      - $(SYMBOL).astFF[55].Reset
      - | io: output


    * - $(PREFIX):FF:0055:Reset_RBV
      - bi
      - $(SYMBOL).astFF[55].Reset
      - | io: output


    * - $(PREFIX):FF:0056:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[56].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0056:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[56].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0056:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[56].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0056:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[56].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0056:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[56].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0056:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[56].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0056:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[56].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0056:OK_RBV
      - bi
      - $(SYMBOL).astFF[56].OK
      - | io: input


    * - $(PREFIX):FF:0056:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[56].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0056:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[56].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0056:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[56].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0056:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[56].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0056:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[56].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0056:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[56].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0056:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[56].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0056:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[56].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0056:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[56].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0056:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[56].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0056:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[56].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0056:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[56].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0056:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[56].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0056:Reset
      - bo
      - $(SYMBOL).astFF[56].Reset
      - | io: output


    * - $(PREFIX):FF:0056:Reset_RBV
      - bi
      - $(SYMBOL).astFF[56].Reset
      - | io: output


    * - $(PREFIX):FF:0057:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[57].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0057:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[57].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0057:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[57].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0057:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[57].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0057:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[57].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0057:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[57].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0057:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[57].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0057:OK_RBV
      - bi
      - $(SYMBOL).astFF[57].OK
      - | io: input


    * - $(PREFIX):FF:0057:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[57].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0057:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[57].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0057:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[57].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0057:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[57].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0057:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[57].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0057:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[57].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0057:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[57].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0057:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[57].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0057:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[57].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0057:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[57].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0057:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[57].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0057:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[57].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0057:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[57].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0057:Reset
      - bo
      - $(SYMBOL).astFF[57].Reset
      - | io: output


    * - $(PREFIX):FF:0057:Reset_RBV
      - bi
      - $(SYMBOL).astFF[57].Reset
      - | io: output


    * - $(PREFIX):FF:0058:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[58].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0058:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[58].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0058:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[58].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0058:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[58].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0058:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[58].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0058:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[58].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0058:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[58].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0058:OK_RBV
      - bi
      - $(SYMBOL).astFF[58].OK
      - | io: input


    * - $(PREFIX):FF:0058:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[58].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0058:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[58].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0058:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[58].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0058:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[58].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0058:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[58].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0058:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[58].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0058:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[58].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0058:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[58].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0058:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[58].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0058:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[58].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0058:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[58].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0058:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[58].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0058:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[58].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0058:Reset
      - bo
      - $(SYMBOL).astFF[58].Reset
      - | io: output


    * - $(PREFIX):FF:0058:Reset_RBV
      - bi
      - $(SYMBOL).astFF[58].Reset
      - | io: output


    * - $(PREFIX):FF:0059:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[59].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0059:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[59].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0059:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[59].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0059:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[59].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0059:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[59].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0059:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[59].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0059:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[59].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0059:OK_RBV
      - bi
      - $(SYMBOL).astFF[59].OK
      - | io: input


    * - $(PREFIX):FF:0059:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[59].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0059:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[59].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0059:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[59].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0059:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[59].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0059:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[59].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0059:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[59].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0059:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[59].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0059:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[59].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0059:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[59].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0059:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[59].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0059:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[59].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0059:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[59].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0059:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[59].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0059:Reset
      - bo
      - $(SYMBOL).astFF[59].Reset
      - | io: output


    * - $(PREFIX):FF:0059:Reset_RBV
      - bi
      - $(SYMBOL).astFF[59].Reset
      - | io: output


    * - $(PREFIX):FF:0060:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[60].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0060:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[60].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0060:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[60].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0060:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[60].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0060:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[60].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0060:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[60].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0060:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[60].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0060:OK_RBV
      - bi
      - $(SYMBOL).astFF[60].OK
      - | io: input


    * - $(PREFIX):FF:0060:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[60].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0060:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[60].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0060:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[60].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0060:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[60].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0060:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[60].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0060:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[60].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0060:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[60].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0060:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[60].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0060:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[60].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0060:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[60].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0060:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[60].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0060:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[60].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0060:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[60].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0060:Reset
      - bo
      - $(SYMBOL).astFF[60].Reset
      - | io: output


    * - $(PREFIX):FF:0060:Reset_RBV
      - bi
      - $(SYMBOL).astFF[60].Reset
      - | io: output


    * - $(PREFIX):FF:0061:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[61].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0061:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[61].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0061:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[61].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0061:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[61].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0061:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[61].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0061:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[61].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0061:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[61].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0061:OK_RBV
      - bi
      - $(SYMBOL).astFF[61].OK
      - | io: input


    * - $(PREFIX):FF:0061:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[61].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0061:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[61].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0061:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[61].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0061:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[61].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0061:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[61].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0061:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[61].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0061:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[61].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0061:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[61].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0061:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[61].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0061:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[61].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0061:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[61].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0061:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[61].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0061:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[61].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0061:Reset
      - bo
      - $(SYMBOL).astFF[61].Reset
      - | io: output


    * - $(PREFIX):FF:0061:Reset_RBV
      - bi
      - $(SYMBOL).astFF[61].Reset
      - | io: output


    * - $(PREFIX):FF:0062:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[62].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0062:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[62].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0062:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[62].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0062:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[62].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0062:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[62].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0062:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[62].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0062:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[62].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0062:OK_RBV
      - bi
      - $(SYMBOL).astFF[62].OK
      - | io: input


    * - $(PREFIX):FF:0062:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[62].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0062:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[62].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0062:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[62].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0062:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[62].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0062:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[62].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0062:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[62].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0062:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[62].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0062:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[62].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0062:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[62].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0062:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[62].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0062:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[62].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0062:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[62].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0062:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[62].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0062:Reset
      - bo
      - $(SYMBOL).astFF[62].Reset
      - | io: output


    * - $(PREFIX):FF:0062:Reset_RBV
      - bi
      - $(SYMBOL).astFF[62].Reset
      - | io: output


    * - $(PREFIX):FF:0063:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[63].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0063:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[63].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0063:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[63].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0063:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[63].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0063:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[63].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0063:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[63].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0063:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[63].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0063:OK_RBV
      - bi
      - $(SYMBOL).astFF[63].OK
      - | io: input


    * - $(PREFIX):FF:0063:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[63].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0063:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[63].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0063:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[63].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0063:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[63].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0063:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[63].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0063:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[63].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0063:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[63].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0063:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[63].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0063:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[63].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0063:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[63].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0063:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[63].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0063:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[63].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0063:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[63].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0063:Reset
      - bo
      - $(SYMBOL).astFF[63].Reset
      - | io: output


    * - $(PREFIX):FF:0063:Reset_RBV
      - bi
      - $(SYMBOL).astFF[63].Reset
      - | io: output


    * - $(PREFIX):FF:0064:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[64].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0064:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[64].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0064:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[64].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0064:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[64].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0064:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[64].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0064:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[64].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0064:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[64].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0064:OK_RBV
      - bi
      - $(SYMBOL).astFF[64].OK
      - | io: input


    * - $(PREFIX):FF:0064:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[64].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0064:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[64].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0064:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[64].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0064:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[64].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0064:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[64].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0064:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[64].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0064:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[64].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0064:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[64].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0064:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[64].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0064:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[64].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0064:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[64].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0064:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[64].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0064:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[64].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0064:Reset
      - bo
      - $(SYMBOL).astFF[64].Reset
      - | io: output


    * - $(PREFIX):FF:0064:Reset_RBV
      - bi
      - $(SYMBOL).astFF[64].Reset
      - | io: output


    * - $(PREFIX):FF:0065:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[65].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0065:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[65].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0065:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[65].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0065:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[65].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0065:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[65].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0065:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[65].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0065:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[65].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0065:OK_RBV
      - bi
      - $(SYMBOL).astFF[65].OK
      - | io: input


    * - $(PREFIX):FF:0065:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[65].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0065:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[65].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0065:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[65].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0065:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[65].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0065:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[65].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0065:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[65].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0065:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[65].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0065:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[65].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0065:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[65].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0065:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[65].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0065:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[65].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0065:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[65].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0065:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[65].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0065:Reset
      - bo
      - $(SYMBOL).astFF[65].Reset
      - | io: output


    * - $(PREFIX):FF:0065:Reset_RBV
      - bi
      - $(SYMBOL).astFF[65].Reset
      - | io: output


    * - $(PREFIX):FF:0066:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[66].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0066:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[66].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0066:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[66].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0066:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[66].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0066:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[66].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0066:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[66].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0066:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[66].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0066:OK_RBV
      - bi
      - $(SYMBOL).astFF[66].OK
      - | io: input


    * - $(PREFIX):FF:0066:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[66].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0066:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[66].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0066:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[66].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0066:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[66].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0066:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[66].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0066:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[66].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0066:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[66].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0066:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[66].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0066:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[66].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0066:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[66].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0066:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[66].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0066:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[66].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0066:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[66].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0066:Reset
      - bo
      - $(SYMBOL).astFF[66].Reset
      - | io: output


    * - $(PREFIX):FF:0066:Reset_RBV
      - bi
      - $(SYMBOL).astFF[66].Reset
      - | io: output


    * - $(PREFIX):FF:0067:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[67].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0067:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[67].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0067:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[67].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0067:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[67].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0067:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[67].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0067:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[67].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0067:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[67].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0067:OK_RBV
      - bi
      - $(SYMBOL).astFF[67].OK
      - | io: input


    * - $(PREFIX):FF:0067:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[67].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0067:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[67].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0067:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[67].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0067:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[67].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0067:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[67].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0067:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[67].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0067:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[67].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0067:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[67].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0067:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[67].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0067:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[67].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0067:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[67].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0067:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[67].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0067:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[67].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0067:Reset
      - bo
      - $(SYMBOL).astFF[67].Reset
      - | io: output


    * - $(PREFIX):FF:0067:Reset_RBV
      - bi
      - $(SYMBOL).astFF[67].Reset
      - | io: output


    * - $(PREFIX):FF:0068:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[68].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0068:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[68].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0068:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[68].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0068:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[68].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0068:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[68].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0068:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[68].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0068:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[68].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0068:OK_RBV
      - bi
      - $(SYMBOL).astFF[68].OK
      - | io: input


    * - $(PREFIX):FF:0068:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[68].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0068:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[68].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0068:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[68].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0068:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[68].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0068:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[68].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0068:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[68].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0068:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[68].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0068:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[68].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0068:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[68].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0068:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[68].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0068:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[68].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0068:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[68].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0068:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[68].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0068:Reset
      - bo
      - $(SYMBOL).astFF[68].Reset
      - | io: output


    * - $(PREFIX):FF:0068:Reset_RBV
      - bi
      - $(SYMBOL).astFF[68].Reset
      - | io: output


    * - $(PREFIX):FF:0069:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[69].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0069:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[69].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0069:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[69].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0069:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[69].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0069:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[69].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0069:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[69].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0069:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[69].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0069:OK_RBV
      - bi
      - $(SYMBOL).astFF[69].OK
      - | io: input


    * - $(PREFIX):FF:0069:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[69].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0069:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[69].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0069:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[69].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0069:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[69].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0069:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[69].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0069:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[69].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0069:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[69].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0069:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[69].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0069:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[69].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0069:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[69].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0069:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[69].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0069:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[69].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0069:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[69].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0069:Reset
      - bo
      - $(SYMBOL).astFF[69].Reset
      - | io: output


    * - $(PREFIX):FF:0069:Reset_RBV
      - bi
      - $(SYMBOL).astFF[69].Reset
      - | io: output


    * - $(PREFIX):FF:0070:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[70].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0070:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[70].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0070:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[70].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0070:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[70].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0070:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[70].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0070:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[70].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0070:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[70].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0070:OK_RBV
      - bi
      - $(SYMBOL).astFF[70].OK
      - | io: input


    * - $(PREFIX):FF:0070:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[70].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0070:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[70].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0070:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[70].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0070:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[70].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0070:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[70].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0070:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[70].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0070:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[70].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0070:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[70].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0070:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[70].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0070:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[70].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0070:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[70].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0070:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[70].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0070:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[70].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0070:Reset
      - bo
      - $(SYMBOL).astFF[70].Reset
      - | io: output


    * - $(PREFIX):FF:0070:Reset_RBV
      - bi
      - $(SYMBOL).astFF[70].Reset
      - | io: output


    * - $(PREFIX):FF:0071:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[71].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0071:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[71].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0071:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[71].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0071:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[71].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0071:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[71].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0071:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[71].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0071:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[71].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0071:OK_RBV
      - bi
      - $(SYMBOL).astFF[71].OK
      - | io: input


    * - $(PREFIX):FF:0071:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[71].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0071:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[71].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0071:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[71].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0071:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[71].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0071:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[71].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0071:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[71].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0071:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[71].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0071:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[71].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0071:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[71].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0071:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[71].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0071:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[71].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0071:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[71].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0071:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[71].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0071:Reset
      - bo
      - $(SYMBOL).astFF[71].Reset
      - | io: output


    * - $(PREFIX):FF:0071:Reset_RBV
      - bi
      - $(SYMBOL).astFF[71].Reset
      - | io: output


    * - $(PREFIX):FF:0072:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[72].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0072:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[72].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0072:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[72].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0072:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[72].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0072:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[72].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0072:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[72].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0072:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[72].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0072:OK_RBV
      - bi
      - $(SYMBOL).astFF[72].OK
      - | io: input


    * - $(PREFIX):FF:0072:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[72].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0072:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[72].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0072:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[72].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0072:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[72].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0072:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[72].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0072:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[72].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0072:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[72].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0072:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[72].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0072:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[72].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0072:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[72].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0072:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[72].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0072:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[72].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0072:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[72].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0072:Reset
      - bo
      - $(SYMBOL).astFF[72].Reset
      - | io: output


    * - $(PREFIX):FF:0072:Reset_RBV
      - bi
      - $(SYMBOL).astFF[72].Reset
      - | io: output


    * - $(PREFIX):FF:0073:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[73].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0073:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[73].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0073:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[73].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0073:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[73].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0073:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[73].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0073:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[73].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0073:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[73].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0073:OK_RBV
      - bi
      - $(SYMBOL).astFF[73].OK
      - | io: input


    * - $(PREFIX):FF:0073:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[73].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0073:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[73].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0073:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[73].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0073:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[73].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0073:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[73].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0073:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[73].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0073:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[73].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0073:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[73].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0073:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[73].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0073:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[73].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0073:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[73].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0073:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[73].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0073:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[73].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0073:Reset
      - bo
      - $(SYMBOL).astFF[73].Reset
      - | io: output


    * - $(PREFIX):FF:0073:Reset_RBV
      - bi
      - $(SYMBOL).astFF[73].Reset
      - | io: output


    * - $(PREFIX):FF:0074:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[74].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0074:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[74].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0074:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[74].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0074:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[74].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0074:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[74].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0074:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[74].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0074:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[74].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0074:OK_RBV
      - bi
      - $(SYMBOL).astFF[74].OK
      - | io: input


    * - $(PREFIX):FF:0074:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[74].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0074:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[74].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0074:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[74].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0074:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[74].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0074:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[74].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0074:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[74].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0074:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[74].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0074:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[74].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0074:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[74].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0074:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[74].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0074:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[74].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0074:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[74].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0074:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[74].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0074:Reset
      - bo
      - $(SYMBOL).astFF[74].Reset
      - | io: output


    * - $(PREFIX):FF:0074:Reset_RBV
      - bi
      - $(SYMBOL).astFF[74].Reset
      - | io: output


    * - $(PREFIX):FF:0075:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[75].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0075:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[75].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0075:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[75].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0075:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[75].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0075:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[75].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0075:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[75].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0075:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[75].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0075:OK_RBV
      - bi
      - $(SYMBOL).astFF[75].OK
      - | io: input


    * - $(PREFIX):FF:0075:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[75].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0075:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[75].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0075:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[75].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0075:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[75].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0075:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[75].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0075:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[75].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0075:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[75].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0075:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[75].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0075:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[75].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0075:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[75].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0075:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[75].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0075:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[75].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0075:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[75].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0075:Reset
      - bo
      - $(SYMBOL).astFF[75].Reset
      - | io: output


    * - $(PREFIX):FF:0075:Reset_RBV
      - bi
      - $(SYMBOL).astFF[75].Reset
      - | io: output


    * - $(PREFIX):FF:0076:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[76].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0076:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[76].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0076:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[76].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0076:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[76].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0076:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[76].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0076:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[76].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0076:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[76].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0076:OK_RBV
      - bi
      - $(SYMBOL).astFF[76].OK
      - | io: input


    * - $(PREFIX):FF:0076:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[76].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0076:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[76].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0076:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[76].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0076:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[76].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0076:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[76].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0076:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[76].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0076:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[76].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0076:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[76].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0076:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[76].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0076:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[76].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0076:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[76].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0076:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[76].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0076:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[76].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0076:Reset
      - bo
      - $(SYMBOL).astFF[76].Reset
      - | io: output


    * - $(PREFIX):FF:0076:Reset_RBV
      - bi
      - $(SYMBOL).astFF[76].Reset
      - | io: output


    * - $(PREFIX):FF:0077:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[77].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0077:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[77].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0077:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[77].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0077:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[77].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0077:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[77].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0077:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[77].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0077:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[77].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0077:OK_RBV
      - bi
      - $(SYMBOL).astFF[77].OK
      - | io: input


    * - $(PREFIX):FF:0077:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[77].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0077:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[77].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0077:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[77].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0077:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[77].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0077:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[77].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0077:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[77].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0077:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[77].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0077:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[77].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0077:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[77].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0077:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[77].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0077:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[77].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0077:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[77].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0077:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[77].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0077:Reset
      - bo
      - $(SYMBOL).astFF[77].Reset
      - | io: output


    * - $(PREFIX):FF:0077:Reset_RBV
      - bi
      - $(SYMBOL).astFF[77].Reset
      - | io: output


    * - $(PREFIX):FF:0078:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[78].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0078:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[78].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0078:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[78].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0078:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[78].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0078:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[78].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0078:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[78].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0078:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[78].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0078:OK_RBV
      - bi
      - $(SYMBOL).astFF[78].OK
      - | io: input


    * - $(PREFIX):FF:0078:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[78].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0078:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[78].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0078:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[78].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0078:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[78].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0078:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[78].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0078:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[78].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0078:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[78].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0078:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[78].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0078:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[78].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0078:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[78].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0078:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[78].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0078:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[78].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0078:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[78].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0078:Reset
      - bo
      - $(SYMBOL).astFF[78].Reset
      - | io: output


    * - $(PREFIX):FF:0078:Reset_RBV
      - bi
      - $(SYMBOL).astFF[78].Reset
      - | io: output


    * - $(PREFIX):FF:0079:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[79].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0079:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[79].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0079:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[79].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0079:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[79].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0079:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[79].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0079:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[79].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0079:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[79].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0079:OK_RBV
      - bi
      - $(SYMBOL).astFF[79].OK
      - | io: input


    * - $(PREFIX):FF:0079:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[79].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0079:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[79].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0079:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[79].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0079:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[79].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0079:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[79].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0079:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[79].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0079:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[79].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0079:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[79].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0079:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[79].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0079:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[79].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0079:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[79].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0079:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[79].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0079:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[79].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0079:Reset
      - bo
      - $(SYMBOL).astFF[79].Reset
      - | io: output


    * - $(PREFIX):FF:0079:Reset_RBV
      - bi
      - $(SYMBOL).astFF[79].Reset
      - | io: output


    * - $(PREFIX):FF:0080:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[80].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0080:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[80].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0080:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[80].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0080:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[80].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0080:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[80].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0080:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[80].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0080:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[80].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0080:OK_RBV
      - bi
      - $(SYMBOL).astFF[80].OK
      - | io: input


    * - $(PREFIX):FF:0080:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[80].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0080:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[80].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0080:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[80].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0080:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[80].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0080:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[80].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0080:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[80].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0080:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[80].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0080:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[80].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0080:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[80].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0080:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[80].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0080:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[80].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0080:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[80].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0080:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[80].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0080:Reset
      - bo
      - $(SYMBOL).astFF[80].Reset
      - | io: output


    * - $(PREFIX):FF:0080:Reset_RBV
      - bi
      - $(SYMBOL).astFF[80].Reset
      - | io: output


    * - $(PREFIX):FF:0081:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[81].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0081:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[81].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0081:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[81].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0081:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[81].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0081:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[81].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0081:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[81].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0081:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[81].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0081:OK_RBV
      - bi
      - $(SYMBOL).astFF[81].OK
      - | io: input


    * - $(PREFIX):FF:0081:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[81].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0081:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[81].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0081:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[81].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0081:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[81].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0081:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[81].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0081:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[81].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0081:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[81].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0081:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[81].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0081:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[81].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0081:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[81].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0081:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[81].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0081:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[81].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0081:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[81].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0081:Reset
      - bo
      - $(SYMBOL).astFF[81].Reset
      - | io: output


    * - $(PREFIX):FF:0081:Reset_RBV
      - bi
      - $(SYMBOL).astFF[81].Reset
      - | io: output


    * - $(PREFIX):FF:0082:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[82].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0082:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[82].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0082:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[82].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0082:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[82].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0082:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[82].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0082:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[82].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0082:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[82].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0082:OK_RBV
      - bi
      - $(SYMBOL).astFF[82].OK
      - | io: input


    * - $(PREFIX):FF:0082:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[82].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0082:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[82].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0082:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[82].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0082:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[82].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0082:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[82].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0082:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[82].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0082:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[82].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0082:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[82].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0082:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[82].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0082:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[82].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0082:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[82].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0082:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[82].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0082:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[82].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0082:Reset
      - bo
      - $(SYMBOL).astFF[82].Reset
      - | io: output


    * - $(PREFIX):FF:0082:Reset_RBV
      - bi
      - $(SYMBOL).astFF[82].Reset
      - | io: output


    * - $(PREFIX):FF:0083:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[83].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0083:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[83].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0083:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[83].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0083:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[83].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0083:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[83].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0083:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[83].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0083:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[83].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0083:OK_RBV
      - bi
      - $(SYMBOL).astFF[83].OK
      - | io: input


    * - $(PREFIX):FF:0083:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[83].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0083:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[83].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0083:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[83].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0083:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[83].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0083:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[83].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0083:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[83].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0083:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[83].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0083:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[83].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0083:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[83].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0083:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[83].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0083:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[83].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0083:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[83].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0083:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[83].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0083:Reset
      - bo
      - $(SYMBOL).astFF[83].Reset
      - | io: output


    * - $(PREFIX):FF:0083:Reset_RBV
      - bi
      - $(SYMBOL).astFF[83].Reset
      - | io: output


    * - $(PREFIX):FF:0084:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[84].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0084:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[84].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0084:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[84].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0084:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[84].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0084:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[84].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0084:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[84].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0084:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[84].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0084:OK_RBV
      - bi
      - $(SYMBOL).astFF[84].OK
      - | io: input


    * - $(PREFIX):FF:0084:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[84].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0084:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[84].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0084:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[84].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0084:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[84].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0084:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[84].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0084:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[84].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0084:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[84].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0084:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[84].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0084:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[84].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0084:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[84].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0084:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[84].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0084:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[84].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0084:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[84].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0084:Reset
      - bo
      - $(SYMBOL).astFF[84].Reset
      - | io: output


    * - $(PREFIX):FF:0084:Reset_RBV
      - bi
      - $(SYMBOL).astFF[84].Reset
      - | io: output


    * - $(PREFIX):FF:0085:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[85].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0085:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[85].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0085:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[85].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0085:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[85].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0085:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[85].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0085:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[85].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0085:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[85].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0085:OK_RBV
      - bi
      - $(SYMBOL).astFF[85].OK
      - | io: input


    * - $(PREFIX):FF:0085:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[85].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0085:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[85].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0085:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[85].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0085:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[85].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0085:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[85].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0085:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[85].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0085:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[85].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0085:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[85].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0085:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[85].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0085:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[85].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0085:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[85].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0085:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[85].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0085:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[85].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0085:Reset
      - bo
      - $(SYMBOL).astFF[85].Reset
      - | io: output


    * - $(PREFIX):FF:0085:Reset_RBV
      - bi
      - $(SYMBOL).astFF[85].Reset
      - | io: output


    * - $(PREFIX):FF:0086:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[86].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0086:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[86].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0086:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[86].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0086:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[86].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0086:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[86].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0086:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[86].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0086:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[86].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0086:OK_RBV
      - bi
      - $(SYMBOL).astFF[86].OK
      - | io: input


    * - $(PREFIX):FF:0086:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[86].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0086:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[86].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0086:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[86].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0086:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[86].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0086:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[86].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0086:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[86].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0086:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[86].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0086:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[86].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0086:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[86].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0086:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[86].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0086:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[86].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0086:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[86].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0086:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[86].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0086:Reset
      - bo
      - $(SYMBOL).astFF[86].Reset
      - | io: output


    * - $(PREFIX):FF:0086:Reset_RBV
      - bi
      - $(SYMBOL).astFF[86].Reset
      - | io: output


    * - $(PREFIX):FF:0087:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[87].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0087:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[87].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0087:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[87].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0087:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[87].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0087:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[87].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0087:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[87].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0087:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[87].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0087:OK_RBV
      - bi
      - $(SYMBOL).astFF[87].OK
      - | io: input


    * - $(PREFIX):FF:0087:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[87].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0087:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[87].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0087:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[87].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0087:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[87].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0087:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[87].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0087:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[87].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0087:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[87].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0087:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[87].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0087:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[87].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0087:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[87].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0087:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[87].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0087:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[87].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0087:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[87].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0087:Reset
      - bo
      - $(SYMBOL).astFF[87].Reset
      - | io: output


    * - $(PREFIX):FF:0087:Reset_RBV
      - bi
      - $(SYMBOL).astFF[87].Reset
      - | io: output


    * - $(PREFIX):FF:0088:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[88].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0088:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[88].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0088:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[88].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0088:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[88].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0088:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[88].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0088:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[88].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0088:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[88].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0088:OK_RBV
      - bi
      - $(SYMBOL).astFF[88].OK
      - | io: input


    * - $(PREFIX):FF:0088:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[88].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0088:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[88].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0088:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[88].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0088:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[88].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0088:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[88].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0088:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[88].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0088:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[88].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0088:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[88].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0088:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[88].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0088:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[88].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0088:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[88].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0088:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[88].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0088:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[88].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0088:Reset
      - bo
      - $(SYMBOL).astFF[88].Reset
      - | io: output


    * - $(PREFIX):FF:0088:Reset_RBV
      - bi
      - $(SYMBOL).astFF[88].Reset
      - | io: output


    * - $(PREFIX):FF:0089:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[89].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0089:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[89].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0089:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[89].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0089:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[89].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0089:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[89].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0089:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[89].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0089:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[89].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0089:OK_RBV
      - bi
      - $(SYMBOL).astFF[89].OK
      - | io: input


    * - $(PREFIX):FF:0089:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[89].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0089:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[89].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0089:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[89].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0089:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[89].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0089:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[89].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0089:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[89].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0089:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[89].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0089:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[89].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0089:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[89].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0089:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[89].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0089:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[89].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0089:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[89].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0089:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[89].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0089:Reset
      - bo
      - $(SYMBOL).astFF[89].Reset
      - | io: output


    * - $(PREFIX):FF:0089:Reset_RBV
      - bi
      - $(SYMBOL).astFF[89].Reset
      - | io: output


    * - $(PREFIX):FF:0090:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[90].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0090:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[90].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0090:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[90].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0090:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[90].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0090:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[90].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0090:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[90].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0090:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[90].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0090:OK_RBV
      - bi
      - $(SYMBOL).astFF[90].OK
      - | io: input


    * - $(PREFIX):FF:0090:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[90].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0090:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[90].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0090:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[90].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0090:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[90].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0090:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[90].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0090:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[90].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0090:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[90].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0090:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[90].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0090:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[90].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0090:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[90].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0090:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[90].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0090:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[90].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0090:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[90].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0090:Reset
      - bo
      - $(SYMBOL).astFF[90].Reset
      - | io: output


    * - $(PREFIX):FF:0090:Reset_RBV
      - bi
      - $(SYMBOL).astFF[90].Reset
      - | io: output


    * - $(PREFIX):FF:0091:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[91].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0091:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[91].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0091:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[91].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0091:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[91].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0091:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[91].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0091:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[91].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0091:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[91].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0091:OK_RBV
      - bi
      - $(SYMBOL).astFF[91].OK
      - | io: input


    * - $(PREFIX):FF:0091:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[91].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0091:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[91].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0091:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[91].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0091:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[91].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0091:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[91].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0091:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[91].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0091:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[91].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0091:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[91].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0091:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[91].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0091:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[91].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0091:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[91].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0091:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[91].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0091:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[91].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0091:Reset
      - bo
      - $(SYMBOL).astFF[91].Reset
      - | io: output


    * - $(PREFIX):FF:0091:Reset_RBV
      - bi
      - $(SYMBOL).astFF[91].Reset
      - | io: output


    * - $(PREFIX):FF:0092:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[92].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0092:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[92].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0092:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[92].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0092:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[92].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0092:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[92].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0092:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[92].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0092:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[92].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0092:OK_RBV
      - bi
      - $(SYMBOL).astFF[92].OK
      - | io: input


    * - $(PREFIX):FF:0092:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[92].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0092:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[92].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0092:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[92].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0092:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[92].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0092:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[92].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0092:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[92].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0092:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[92].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0092:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[92].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0092:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[92].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0092:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[92].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0092:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[92].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0092:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[92].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0092:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[92].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0092:Reset
      - bo
      - $(SYMBOL).astFF[92].Reset
      - | io: output


    * - $(PREFIX):FF:0092:Reset_RBV
      - bi
      - $(SYMBOL).astFF[92].Reset
      - | io: output


    * - $(PREFIX):FF:0093:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[93].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0093:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[93].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0093:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[93].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0093:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[93].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0093:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[93].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0093:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[93].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0093:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[93].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0093:OK_RBV
      - bi
      - $(SYMBOL).astFF[93].OK
      - | io: input


    * - $(PREFIX):FF:0093:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[93].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0093:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[93].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0093:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[93].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0093:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[93].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0093:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[93].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0093:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[93].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0093:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[93].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0093:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[93].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0093:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[93].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0093:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[93].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0093:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[93].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0093:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[93].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0093:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[93].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0093:Reset
      - bo
      - $(SYMBOL).astFF[93].Reset
      - | io: output


    * - $(PREFIX):FF:0093:Reset_RBV
      - bi
      - $(SYMBOL).astFF[93].Reset
      - | io: output


    * - $(PREFIX):FF:0094:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[94].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0094:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[94].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0094:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[94].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0094:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[94].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0094:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[94].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0094:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[94].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0094:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[94].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0094:OK_RBV
      - bi
      - $(SYMBOL).astFF[94].OK
      - | io: input


    * - $(PREFIX):FF:0094:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[94].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0094:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[94].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0094:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[94].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0094:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[94].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0094:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[94].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0094:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[94].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0094:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[94].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0094:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[94].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0094:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[94].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0094:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[94].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0094:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[94].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0094:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[94].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0094:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[94].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0094:Reset
      - bo
      - $(SYMBOL).astFF[94].Reset
      - | io: output


    * - $(PREFIX):FF:0094:Reset_RBV
      - bi
      - $(SYMBOL).astFF[94].Reset
      - | io: output


    * - $(PREFIX):FF:0095:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[95].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0095:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[95].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0095:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[95].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0095:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[95].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0095:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[95].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0095:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[95].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0095:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[95].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0095:OK_RBV
      - bi
      - $(SYMBOL).astFF[95].OK
      - | io: input


    * - $(PREFIX):FF:0095:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[95].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0095:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[95].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0095:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[95].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0095:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[95].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0095:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[95].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0095:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[95].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0095:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[95].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0095:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[95].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0095:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[95].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0095:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[95].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0095:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[95].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0095:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[95].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0095:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[95].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0095:Reset
      - bo
      - $(SYMBOL).astFF[95].Reset
      - | io: output


    * - $(PREFIX):FF:0095:Reset_RBV
      - bi
      - $(SYMBOL).astFF[95].Reset
      - | io: output


    * - $(PREFIX):FF:0096:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[96].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0096:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[96].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0096:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[96].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0096:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[96].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0096:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[96].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0096:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[96].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0096:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[96].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0096:OK_RBV
      - bi
      - $(SYMBOL).astFF[96].OK
      - | io: input


    * - $(PREFIX):FF:0096:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[96].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0096:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[96].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0096:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[96].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0096:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[96].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0096:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[96].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0096:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[96].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0096:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[96].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0096:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[96].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0096:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[96].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0096:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[96].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0096:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[96].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0096:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[96].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0096:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[96].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0096:Reset
      - bo
      - $(SYMBOL).astFF[96].Reset
      - | io: output


    * - $(PREFIX):FF:0096:Reset_RBV
      - bi
      - $(SYMBOL).astFF[96].Reset
      - | io: output


    * - $(PREFIX):FF:0097:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[97].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0097:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[97].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0097:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[97].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0097:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[97].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0097:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[97].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0097:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[97].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0097:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[97].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0097:OK_RBV
      - bi
      - $(SYMBOL).astFF[97].OK
      - | io: input


    * - $(PREFIX):FF:0097:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[97].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0097:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[97].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0097:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[97].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0097:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[97].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0097:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[97].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0097:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[97].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0097:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[97].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0097:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[97].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0097:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[97].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0097:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[97].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0097:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[97].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0097:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[97].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0097:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[97].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0097:Reset
      - bo
      - $(SYMBOL).astFF[97].Reset
      - | io: output


    * - $(PREFIX):FF:0097:Reset_RBV
      - bi
      - $(SYMBOL).astFF[97].Reset
      - | io: output


    * - $(PREFIX):FF:0098:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[98].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0098:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[98].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0098:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[98].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0098:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[98].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0098:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[98].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0098:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[98].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0098:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[98].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0098:OK_RBV
      - bi
      - $(SYMBOL).astFF[98].OK
      - | io: input


    * - $(PREFIX):FF:0098:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[98].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0098:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[98].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0098:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[98].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0098:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[98].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0098:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[98].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0098:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[98].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0098:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[98].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0098:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[98].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0098:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[98].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0098:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[98].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0098:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[98].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0098:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[98].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0098:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[98].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0098:Reset
      - bo
      - $(SYMBOL).astFF[98].Reset
      - | io: output


    * - $(PREFIX):FF:0098:Reset_RBV
      - bi
      - $(SYMBOL).astFF[98].Reset
      - | io: output


    * - $(PREFIX):FF:0099:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[99].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0099:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[99].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0099:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[99].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0099:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[99].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0099:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[99].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0099:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[99].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0099:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[99].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0099:OK_RBV
      - bi
      - $(SYMBOL).astFF[99].OK
      - | io: input


    * - $(PREFIX):FF:0099:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[99].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0099:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[99].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0099:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[99].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0099:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[99].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0099:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[99].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0099:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[99].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0099:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[99].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0099:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[99].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0099:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[99].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0099:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[99].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0099:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[99].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0099:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[99].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0099:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[99].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0099:Reset
      - bo
      - $(SYMBOL).astFF[99].Reset
      - | io: output


    * - $(PREFIX):FF:0099:Reset_RBV
      - bi
      - $(SYMBOL).astFF[99].Reset
      - | io: output


    * - $(PREFIX):FF:0100:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[100].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:0100:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[100].Info.Desc
      - | io: input


    * - $(PREFIX):FF:0100:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[100].Info.DevName
      - | io: input


    * - $(PREFIX):FF:0100:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[100].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:0100:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[100].Info.InUse
      - | io: input


    * - $(PREFIX):FF:0100:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[100].Info.sPath
      - | io: input


    * - $(PREFIX):FF:0100:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[100].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:0100:OK_RBV
      - bi
      - $(SYMBOL).astFF[100].OK
      - | io: input


    * - $(PREFIX):FF:0100:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[100].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0100:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[100].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:0100:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[100].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:0100:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[100].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0100:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[100].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:0100:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[100].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0100:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[100].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:0100:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[100].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:0100:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[100].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0100:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[100].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:0100:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[100].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:0100:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[100].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0100:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[100].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:0100:Reset
      - bo
      - $(SYMBOL).astFF[100].Reset
      - | io: output


    * - $(PREFIX):FF:0100:Reset_RBV
      - bi
      - $(SYMBOL).astFF[100].Reset
      - | io: output


    * - $(PREFIX):OK_RBV
      - bi
      - $(SYMBOL).xOK
      - | io: input


    * - $(PREFIX):RegistrationFailure
      - bo
      - $(SYMBOL).xFastFaultRegFail
      - | io: output


    * - $(PREFIX):RegistrationFailure_RBV
      - bi
      - $(SYMBOL).xFastFaultRegFail
      - | io: output


   
PMPS.FB_SubSysToArbiter_IO
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ActiveCohort_RBV
      - longin
      - $(SYMBOL).nActiveCohort
      - | io: input


    * - $(PREFIX):RequestCohort_RBV
      - longin
      - $(SYMBOL).nRequestCohort
      - | io: input


 
PMPS.FB_TempSensor_FFO
^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):CONN_RBV
      - bi
      - $(SYMBOL).bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):FAULT_SP_HYS_RBV
      - ai
      - $(SYMBOL).fHysteresis
      - | field: EGU %
        | field: PREC 2
        | io: input


    * - $(PREFIX):FAULT_SP_RBV
      - ai
      - $(SYMBOL).fFaultThreshold
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):TEMP_RBV
      - ai
      - $(SYMBOL).fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


     
PMPS.PMPS_GVL
^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):$(PREFIX)0RateBeamCnst:Apt:01:Height_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)0RateBeamCnst:Apt:01:OK_RBV
      - bi
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)0RateBeamCnst:Apt:01:Width_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)0RateBeamCnst:Apt:02:Height_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)0RateBeamCnst:Apt:02:OK_RBV
      - bi
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)0RateBeamCnst:Apt:02:Width_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)0RateBeamCnst:Apt:03:Height_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)0RateBeamCnst:Apt:03:OK_RBV
      - bi
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)0RateBeamCnst:Apt:03:Width_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)0RateBeamCnst:Apt:04:Height_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)0RateBeamCnst:Apt:04:OK_RBV
      - bi
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)0RateBeamCnst:Apt:04:Width_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)0RateBeamCnst:BeamClass_RBV
      - longin
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)0RateBeamCnst:BeamClassRanges_RBV
      - longin
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)0RateBeamCnst:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)0RateBeamCnst:eVRanges_RBV
      - longin
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX):$(PREFIX)0RateBeamCnst:MachineMode_RBV
      - longin
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)0RateBeamCnst:PhotonEnergy_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX):$(PREFIX)0RateBeamCnst:Rate_RBV
      - longin
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU Hz
        | io: input


    * - $(PREFIX):$(PREFIX)0RateBeamCnst:Transmission_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):$(PREFIX)0RateBeamCnst:Valid_RBV
      - bi
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)0RateBeamCnst:Veto_RBV
      - waveform
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)AccumulatedFastFaults_RBV
      - longin
      - $(SYMBOL).AccumulatedFF
      - | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).stCurrentBeamParameters.astApertures[1].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).stCurrentBeamParameters.astApertures[1].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).stCurrentBeamParameters.astApertures[1].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).stCurrentBeamParameters.astApertures[2].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).stCurrentBeamParameters.astApertures[2].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).stCurrentBeamParameters.astApertures[2].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).stCurrentBeamParameters.astApertures[3].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).stCurrentBeamParameters.astApertures[3].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).stCurrentBeamParameters.astApertures[3].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).stCurrentBeamParameters.astApertures[4].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).stCurrentBeamParameters.astApertures[4].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).stCurrentBeamParameters.astApertures[4].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:BeamClass_RBV
      - longin
      - $(SYMBOL).stCurrentBeamParameters.nBeamClass
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).stCurrentBeamParameters.nBCRange
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:eVRanges_RBV
      - longin
      - $(SYMBOL).stCurrentBeamParameters.neVRange
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:MachineMode_RBV
      - longin
      - $(SYMBOL).stCurrentBeamParameters.nMachineMode
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).stCurrentBeamParameters.neV
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:Rate_RBV
      - longin
      - $(SYMBOL).stCurrentBeamParameters.nRate
      - | archive: 1s monitor
        | field: EGU Hz
        | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:Transmission_RBV
      - ai
      - $(SYMBOL).stCurrentBeamParameters.nTran
      - | archive: 1s monitor
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:Valid_RBV
      - bi
      - $(SYMBOL).stCurrentBeamParameters.xValid
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)CurrentBP:Veto_RBV
      - waveform
      - $(SYMBOL).stCurrentBeamParameters.aVetoDevices
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)eVRangeCnst_RBV
      - waveform
      - Active eV Range constants
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX):$(PREFIX)eVRangeHyst_RBV
      - ai
      - eV Range hystersis
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:Apt:01:Height_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:Apt:01:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:Apt:01:Width_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:Apt:02:Height_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:Apt:02:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:Apt:02:Width_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:Apt:03:Height_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:Apt:03:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:Apt:03:Width_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:Apt:04:Height_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:Apt:04:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:Apt:04:Width_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:BeamClass_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:BeamClassRanges_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:eVRanges_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:MachineMode_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:PhotonEnergy_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:Rate_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU Hz
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:Transmission_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:Valid_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)FullBeamCnst:Veto_RBV
      - waveform
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)K:eVRangeCnst_RBV
      - waveform
      - eV Range constants
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX):$(PREFIX)L:eVRangeCnst_RBV
      - waveform
      - eV Range constants
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).stRequestedBeamParameters.astApertures[1].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).stRequestedBeamParameters.astApertures[1].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).stRequestedBeamParameters.astApertures[1].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).stRequestedBeamParameters.astApertures[2].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).stRequestedBeamParameters.astApertures[2].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).stRequestedBeamParameters.astApertures[2].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).stRequestedBeamParameters.astApertures[3].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).stRequestedBeamParameters.astApertures[3].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).stRequestedBeamParameters.astApertures[3].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).stRequestedBeamParameters.astApertures[4].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).stRequestedBeamParameters.astApertures[4].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).stRequestedBeamParameters.astApertures[4].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:BeamClass_RBV
      - longin
      - $(SYMBOL).stRequestedBeamParameters.nBeamClass
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).stRequestedBeamParameters.nBCRange
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:eVRanges_RBV
      - longin
      - $(SYMBOL).stRequestedBeamParameters.neVRange
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:MachineMode_RBV
      - longin
      - $(SYMBOL).stRequestedBeamParameters.nMachineMode
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).stRequestedBeamParameters.neV
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:Rate_RBV
      - longin
      - $(SYMBOL).stRequestedBeamParameters.nRate
      - | archive: 1s monitor
        | field: EGU Hz
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:Transmission_RBV
      - ai
      - $(SYMBOL).stRequestedBeamParameters.nTran
      - | archive: 1s monitor
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:Valid_RBV
      - bi
      - $(SYMBOL).stRequestedBeamParameters.xValid
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)RequestedBP:Veto_RBV
      - waveform
      - $(SYMBOL).stRequestedBeamParameters.aVetoDevices
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX):$(PREFIX)SuccessfulPreemptions_RBV
      - longin
      - $(SYMBOL).SuccessfulPreemption
      - | io: input


   
PMPS.ST_BeamParams
^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Apt:01:Height_RBV
      - ai
      - $(SYMBOL).astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:01:OK_RBV
      - bi
      - $(SYMBOL).astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Apt:01:Width_RBV
      - ai
      - $(SYMBOL).astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:02:Height_RBV
      - ai
      - $(SYMBOL).astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:02:OK_RBV
      - bi
      - $(SYMBOL).astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Apt:02:Width_RBV
      - ai
      - $(SYMBOL).astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:03:Height_RBV
      - ai
      - $(SYMBOL).astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:03:OK_RBV
      - bi
      - $(SYMBOL).astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Apt:03:Width_RBV
      - ai
      - $(SYMBOL).astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:04:Height_RBV
      - ai
      - $(SYMBOL).astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:04:OK_RBV
      - bi
      - $(SYMBOL).astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Apt:04:Width_RBV
      - ai
      - $(SYMBOL).astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):BeamClass_RBV
      - longin
      - $(SYMBOL).nBeamClass
      - | io: input


    * - $(PREFIX):BeamClassRanges_RBV
      - longin
      - $(SYMBOL).nBCRange
      - | io: input


    * - $(PREFIX):Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):eVRanges_RBV
      - longin
      - $(SYMBOL).neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):MachineMode_RBV
      - longin
      - $(SYMBOL).nMachineMode
      - | io: input


    * - $(PREFIX):PhotonEnergy_RBV
      - ai
      - $(SYMBOL).neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Rate_RBV
      - longin
      - $(SYMBOL).nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Transmission_RBV
      - ai
      - $(SYMBOL).nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Valid_RBV
      - bi
      - $(SYMBOL).xValid
      - | io: input


    * - $(PREFIX):Veto_RBV
      - waveform
      - $(SYMBOL).aVetoDevices
      - | io: input


 
PMPS.ST_BP_ArbInternal
^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Apt:01:Height_RBV
      - ai
      - $(SYMBOL).astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:01:OK_RBV
      - bi
      - $(SYMBOL).astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Apt:01:Width_RBV
      - ai
      - $(SYMBOL).astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:02:Height_RBV
      - ai
      - $(SYMBOL).astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:02:OK_RBV
      - bi
      - $(SYMBOL).astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Apt:02:Width_RBV
      - ai
      - $(SYMBOL).astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:03:Height_RBV
      - ai
      - $(SYMBOL).astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:03:OK_RBV
      - bi
      - $(SYMBOL).astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Apt:03:Width_RBV
      - ai
      - $(SYMBOL).astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:04:Height_RBV
      - ai
      - $(SYMBOL).astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:04:OK_RBV
      - bi
      - $(SYMBOL).astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Apt:04:Width_RBV
      - ai
      - $(SYMBOL).astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):BeamClass_RBV
      - longin
      - $(SYMBOL).nBeamClass
      - | io: input


    * - $(PREFIX):BeamClassRanges_RBV
      - longin
      - $(SYMBOL).nBCRange
      - | io: input


    * - $(PREFIX):Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Device_RBV
      - waveform
      - $(SYMBOL).sDevName
      - | io: input


    * - $(PREFIX):eVRanges_RBV
      - longin
      - $(SYMBOL).neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):ID_RBV
      - longin
      - $(SYMBOL).nId
      - | io: input


    * - $(PREFIX):Live_RBV
      - bi
      - $(SYMBOL).LiveInTable
      - | io: input


    * - $(PREFIX):MachineMode_RBV
      - longin
      - $(SYMBOL).nMachineMode
      - | io: input


    * - $(PREFIX):PhotonEnergy_RBV
      - ai
      - $(SYMBOL).neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Rate_RBV
      - longin
      - $(SYMBOL).nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Transmission_RBV
      - ai
      - $(SYMBOL).nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Valid_RBV
      - bi
      - $(SYMBOL).xValid
      - | io: input


    * - $(PREFIX):Veto_RBV
      - waveform
      - $(SYMBOL).aVetoDevices
      - | io: input


 
PMPS.ST_DbStateParams
^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):BP:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).stBeamParams.astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):BP:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).stBeamParams.astApertures[1].xOK
      - | io: input


    * - $(PREFIX):BP:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).stBeamParams.astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):BP:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).stBeamParams.astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):BP:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).stBeamParams.astApertures[2].xOK
      - | io: input


    * - $(PREFIX):BP:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).stBeamParams.astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):BP:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).stBeamParams.astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):BP:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).stBeamParams.astApertures[3].xOK
      - | io: input


    * - $(PREFIX):BP:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).stBeamParams.astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):BP:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).stBeamParams.astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):BP:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).stBeamParams.astApertures[4].xOK
      - | io: input


    * - $(PREFIX):BP:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).stBeamParams.astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):BP:BeamClass_RBV
      - longin
      - $(SYMBOL).stBeamParams.nBeamClass
      - | io: input


    * - $(PREFIX):BP:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).stBeamParams.nBCRange
      - | io: input


    * - $(PREFIX):BP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):BP:eVRanges_RBV
      - longin
      - $(SYMBOL).stBeamParams.neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):BP:MachineMode_RBV
      - longin
      - $(SYMBOL).stBeamParams.nMachineMode
      - | io: input


    * - $(PREFIX):BP:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).stBeamParams.neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):BP:Rate_RBV
      - longin
      - $(SYMBOL).stBeamParams.nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):BP:Transmission_RBV
      - ai
      - $(SYMBOL).stBeamParams.nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):BP:Valid_RBV
      - bi
      - $(SYMBOL).stBeamParams.xValid
      - | io: input


    * - $(PREFIX):BP:Veto_RBV
      - waveform
      - $(SYMBOL).stBeamParams.aVetoDevices
      - | io: input


    * - $(PREFIX):PMPS_ID_RBV
      - longin
      - Assertion Request ID
      - | io: input


    * - $(PREFIX):PMPS_LOADED_RBV
      - bi
      - TRUE if PMPS loaded parameters from the database.
      - | io: input


    * - $(PREFIX):PMPS_STATE_RBV
      - waveform
      - PMPS Database Lookup Key
      - | io: input


    * - $(PREFIX):ReParams:PressSP_RBV
      - ai
      - $(SYMBOL).stReactiveParams.nPressSP
      - | field: EGU "TORR"
        | field: PREC 2
        | io: input


    * - $(PREFIX):ReParams:TempSP_RBV
      - ai
      - $(SYMBOL).stReactiveParams.nTempSP
      - | field: EGU "C"
        | field: PREC 2
        | io: input


 
PMPS.ST_FF
^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):BeamPermitted_RBV
      - bi
      - $(SYMBOL).BeamPermitted
      - | io: input


    * - $(PREFIX):Info:Desc_RBV
      - waveform
      - $(SYMBOL).Info.Desc
      - | io: input


    * - $(PREFIX):Info:DevName_RBV
      - waveform
      - $(SYMBOL).Info.DevName
      - | io: input


    * - $(PREFIX):Info:InfoString_RBV
      - waveform
      - $(SYMBOL).Info.InfoString
      - | io: input


    * - $(PREFIX):Info:InUse_RBV
      - bi
      - $(SYMBOL).Info.InUse
      - | io: input


    * - $(PREFIX):Info:Path_RBV
      - waveform
      - $(SYMBOL).Info.sPath
      - | io: input


    * - $(PREFIX):Info:TypeCode_RBV
      - longin
      - $(SYMBOL).Info.TypeCode
      - | io: input


    * - $(PREFIX):OK_RBV
      - bi
      - $(SYMBOL).OK
      - | io: input


    * - $(PREFIX):Ovrd:Activate
      - bo
      - $(SYMBOL).Ovrd.Activate
      - | io: output


    * - $(PREFIX):Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).Ovrd.Activate
      - | io: output


    * - $(PREFIX):Ovrd:Active_RBV
      - bi
      - $(SYMBOL).Ovrd.Active
      - | io: input


    * - $(PREFIX):Ovrd:Deactivate
      - bo
      - $(SYMBOL).Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):Ovrd:Duration
      - longout
      - $(SYMBOL).Ovrd.Duration
      - | io: output


    * - $(PREFIX):Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).Ovrd.Duration
      - | io: output


    * - $(PREFIX):Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):Ovrd:Expiration
      - longout
      - $(SYMBOL).Ovrd.Expiration
      - | io: output


    * - $(PREFIX):Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).Ovrd.Expiration
      - | io: output


    * - $(PREFIX):Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):Ovrd:StartDT
      - longout
      - $(SYMBOL).Ovrd.StartDT
      - | io: output


    * - $(PREFIX):Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).Ovrd.StartDT
      - | io: output


    * - $(PREFIX):Reset
      - bo
      - $(SYMBOL).Reset
      - | io: output


    * - $(PREFIX):Reset_RBV
      - bi
      - $(SYMBOL).Reset
      - | io: output


 
PMPS.ST_FFInfo
^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Desc_RBV
      - waveform
      - $(SYMBOL).Desc
      - | io: input


    * - $(PREFIX):DevName_RBV
      - waveform
      - $(SYMBOL).DevName
      - | io: input


    * - $(PREFIX):InfoString_RBV
      - waveform
      - $(SYMBOL).InfoString
      - | io: input


    * - $(PREFIX):InUse_RBV
      - bi
      - $(SYMBOL).InUse
      - | io: input


    * - $(PREFIX):Path_RBV
      - waveform
      - $(SYMBOL).sPath
      - | io: input


    * - $(PREFIX):TypeCode_RBV
      - longin
      - $(SYMBOL).TypeCode
      - | io: input


 
PMPS.ST_FFOverride
^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Activate
      - bo
      - $(SYMBOL).Activate
      - | io: output


    * - $(PREFIX):Activate_RBV
      - bi
      - $(SYMBOL).Activate
      - | io: output


    * - $(PREFIX):Active_RBV
      - bi
      - $(SYMBOL).Active
      - | io: input


    * - $(PREFIX):Deactivate
      - bo
      - $(SYMBOL).Deactivate
      - | io: output


    * - $(PREFIX):Deactivate_RBV
      - bi
      - $(SYMBOL).Deactivate
      - | io: output


    * - $(PREFIX):Duration
      - longout
      - $(SYMBOL).Duration
      - | io: output


    * - $(PREFIX):Duration_RBV
      - longin
      - $(SYMBOL).Duration
      - | io: output


    * - $(PREFIX):ElapsedTime_RBV
      - longin
      - $(SYMBOL).ElapsedTime
      - | io: input


    * - $(PREFIX):Expiration
      - longout
      - $(SYMBOL).Expiration
      - | io: output


    * - $(PREFIX):Expiration_RBV
      - longin
      - $(SYMBOL).Expiration
      - | io: output


    * - $(PREFIX):RemainingTime_RBV
      - longin
      - $(SYMBOL).RemainingTime
      - | io: input


    * - $(PREFIX):StartDT
      - longout
      - $(SYMBOL).StartDT
      - | io: output


    * - $(PREFIX):StartDT_RBV
      - longin
      - $(SYMBOL).StartDT
      - | io: output


 
PMPS.ST_PMPS_Aperture
^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Height_RBV
      - ai
      - $(SYMBOL).Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):OK_RBV
      - bi
      - $(SYMBOL).xOK
      - | io: input


    * - $(PREFIX):Width_RBV
      - ai
      - $(SYMBOL).Width
      - | field: EGU mm
        | io: input


  
PMPS.ST_ReactiveParams
^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):PressSP_RBV
      - ai
      - $(SYMBOL).nPressSP
      - | field: EGU "TORR"
        | field: PREC 2
        | io: input


    * - $(PREFIX):TempSP_RBV
      - ai
      - $(SYMBOL).nTempSP
      - | field: EGU "C"
        | field: PREC 2
        | io: input


 
PMPS.T_HashTableEntry
^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Key_RBV
      - longin
      - $(SYMBOL).key
      - | io: input


   
PRG_AT2L0_SOLID
^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):AT2L0:XTES:MMS:01:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[1].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[1].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[1].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbAT2L0_states[1].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbAT2L0_states[1].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[1].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:RESET
      - bo
      - $(SYMBOL).fbAT2L0_states[1].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[1].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:SET
      - mbbo
      - $(SYMBOL).fbAT2L0_states[1].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:01:STATE:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[1].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[2].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[2].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[2].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbAT2L0_states[2].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbAT2L0_states[2].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[2].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:RESET
      - bo
      - $(SYMBOL).fbAT2L0_states[2].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[2].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:SET
      - mbbo
      - $(SYMBOL).fbAT2L0_states[2].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:02:STATE:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[2].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[3].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[3].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[3].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbAT2L0_states[3].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbAT2L0_states[3].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[3].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:RESET
      - bo
      - $(SYMBOL).fbAT2L0_states[3].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[3].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:SET
      - mbbo
      - $(SYMBOL).fbAT2L0_states[3].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:03:STATE:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[3].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[4].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[4].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[4].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbAT2L0_states[4].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbAT2L0_states[4].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[4].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:RESET
      - bo
      - $(SYMBOL).fbAT2L0_states[4].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[4].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:SET
      - mbbo
      - $(SYMBOL).fbAT2L0_states[4].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:04:STATE:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[4].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[5].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[5].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[5].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbAT2L0_states[5].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbAT2L0_states[5].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[5].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:RESET
      - bo
      - $(SYMBOL).fbAT2L0_states[5].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[5].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:SET
      - mbbo
      - $(SYMBOL).fbAT2L0_states[5].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:05:STATE:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[5].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[6].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[6].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[6].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbAT2L0_states[6].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbAT2L0_states[6].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[6].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:RESET
      - bo
      - $(SYMBOL).fbAT2L0_states[6].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[6].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:SET
      - mbbo
      - $(SYMBOL).fbAT2L0_states[6].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:06:STATE:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[6].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[7].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[7].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[7].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbAT2L0_states[7].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbAT2L0_states[7].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[7].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:RESET
      - bo
      - $(SYMBOL).fbAT2L0_states[7].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[7].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:SET
      - mbbo
      - $(SYMBOL).fbAT2L0_states[7].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:07:STATE:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[7].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[8].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[8].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[8].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbAT2L0_states[8].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbAT2L0_states[8].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[8].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:RESET
      - bo
      - $(SYMBOL).fbAT2L0_states[8].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[8].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:SET
      - mbbo
      - $(SYMBOL).fbAT2L0_states[8].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:08:STATE:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[8].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[9].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[9].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[9].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbAT2L0_states[9].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbAT2L0_states[9].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[9].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:RESET
      - bo
      - $(SYMBOL).fbAT2L0_states[9].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[9].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:SET
      - mbbo
      - $(SYMBOL).fbAT2L0_states[9].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:09:STATE:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[9].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[10].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[10].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[10].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbAT2L0_states[10].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbAT2L0_states[10].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[10].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:RESET
      - bo
      - $(SYMBOL).fbAT2L0_states[10].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[10].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:SET
      - mbbo
      - $(SYMBOL).fbAT2L0_states[10].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:10:STATE:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[10].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[11].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[11].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[11].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbAT2L0_states[11].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbAT2L0_states[11].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[11].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:RESET
      - bo
      - $(SYMBOL).fbAT2L0_states[11].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[11].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:SET
      - mbbo
      - $(SYMBOL).fbAT2L0_states[11].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:11:STATE:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[11].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[12].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[12].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[12].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbAT2L0_states[12].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbAT2L0_states[12].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[12].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:RESET
      - bo
      - $(SYMBOL).fbAT2L0_states[12].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[12].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:SET
      - mbbo
      - $(SYMBOL).fbAT2L0_states[12].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:12:STATE:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[12].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[13].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[13].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[13].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbAT2L0_states[13].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbAT2L0_states[13].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[13].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:RESET
      - bo
      - $(SYMBOL).fbAT2L0_states[13].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[13].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:SET
      - mbbo
      - $(SYMBOL).fbAT2L0_states[13].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:13:STATE:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[13].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[14].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[14].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[14].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbAT2L0_states[14].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbAT2L0_states[14].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[14].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:RESET
      - bo
      - $(SYMBOL).fbAT2L0_states[14].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[14].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:SET
      - mbbo
      - $(SYMBOL).fbAT2L0_states[14].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:14:STATE:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[14].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[15].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[15].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[15].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbAT2L0_states[15].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbAT2L0_states[15].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[15].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:RESET
      - bo
      - $(SYMBOL).fbAT2L0_states[15].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[15].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:SET
      - mbbo
      - $(SYMBOL).fbAT2L0_states[15].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:15:STATE:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[15].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[16].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[16].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[16].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbAT2L0_states[16].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbAT2L0_states[16].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[16].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:RESET
      - bo
      - $(SYMBOL).fbAT2L0_states[16].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[16].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:SET
      - mbbo
      - $(SYMBOL).fbAT2L0_states[16].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:16:STATE:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[16].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[17].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[17].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[17].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbAT2L0_states[17].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbAT2L0_states[17].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[17].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:RESET
      - bo
      - $(SYMBOL).fbAT2L0_states[17].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[17].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:SET
      - mbbo
      - $(SYMBOL).fbAT2L0_states[17].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:17:STATE:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[17].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[18].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[18].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[18].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbAT2L0_states[18].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbAT2L0_states[18].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[18].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:RESET
      - bo
      - $(SYMBOL).fbAT2L0_states[18].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[18].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:SET
      - mbbo
      - $(SYMBOL).fbAT2L0_states[18].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:18:STATE:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[18].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[19].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[19].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[19].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbAT2L0_states[19].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbAT2L0_states[19].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[19].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:RESET
      - bo
      - $(SYMBOL).fbAT2L0_states[19].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbAT2L0_states[19].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:SET
      - mbbo
      - $(SYMBOL).fbAT2L0_states[19].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:MMS:19:STATE:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbAT2L0_states[19].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - $(PREFIX):AT2L0:XTES:TRANSMISSION
      - ao
      - Overall transmission of AT2L0
      - | io: output


    * - $(PREFIX):AT2L0:XTES:TRANSMISSION_RBV
      - ai
      - Overall transmission of AT2L0
      - | io: output


 
PRG_IM1L0_XTES
^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):IM1L0:XTES:CAM:PWR
      - bo
      - $(SYMBOL).fbIM1L0.fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):IM1L0:XTES:CAM:PWR_RBV
      - bi
      - $(SYMBOL).fbIM1L0.fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):IM1L0:XTES:CIL:AUTO
      - bo
      - $(SYMBOL).fbIM1L0.fbLED.bLEDAuto
      - | io: output


    * - $(PREFIX):IM1L0:XTES:CIL:AUTO_RBV
      - bi
      - $(SYMBOL).fbIM1L0.fbLED.bLEDAuto
      - | io: output


    * - $(PREFIX):IM1L0:XTES:CIL:CLK:REMAINING
      - ao
      - $(SYMBOL).fbIM1L0.fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - $(PREFIX):IM1L0:XTES:CIL:CLK:REMAINING_RBV
      - ai
      - $(SYMBOL).fbIM1L0.fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - $(PREFIX):IM1L0:XTES:CIL:CLK:TIMEOUT
      - ao
      - $(SYMBOL).fbIM1L0.fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - $(PREFIX):IM1L0:XTES:CIL:CLK:TIMEOUT_RBV
      - ai
      - $(SYMBOL).fbIM1L0.fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - $(PREFIX):IM1L0:XTES:CIL:PWR
      - bo
      - $(SYMBOL).fbIM1L0.fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):IM1L0:XTES:CIL:PWR_RBV
      - bi
      - $(SYMBOL).fbIM1L0.fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):IM1L0:XTES:CLF:LOCK
      - bo
      - $(SYMBOL).fbIM1L0.bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - $(PREFIX):IM1L0:XTES:CLF:LOCK_RBV
      - bi
      - $(SYMBOL).fbIM1L0.bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - $(PREFIX):IM1L0:XTES:CLZ:LOCK
      - bo
      - $(SYMBOL).fbIM1L0.bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - $(PREFIX):IM1L0:XTES:CLZ:LOCK_RBV
      - bi
      - $(SYMBOL).fbIM1L0.bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - $(PREFIX):IM1L0:XTES:FLOW_OK
      - bo
      - $(SYMBOL).bIM1L0FlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):IM1L0:XTES:FLOW_OK_RBV
      - bi
      - $(SYMBOL).bIM1L0FlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):IM1L0:XTES:FSW:FLOW_OK
      - bo
      - $(SYMBOL).fbIM1L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):IM1L0:XTES:FSW:FLOW_OK_RBV
      - bi
      - $(SYMBOL).fbIM1L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):IM1L0:XTES:MFW:ERR:MSG_RBV
      - waveform
      - $(SYMBOL).fbIM1L0.fbFilterWheel.sLastError
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MFW:ERR:RESET
      - bo
      - $(SYMBOL).fbIM1L0.fbFilterWheel.bResetError
      - | io: output


    * - $(PREFIX):IM1L0:XTES:MFW:ERR:RESET_RBV
      - bi
      - $(SYMBOL).fbIM1L0.fbFilterWheel.bResetError
      - | io: output


    * - $(PREFIX):IM1L0:XTES:MFW:GET_RBV
      - mbbi
      - $(SYMBOL).fbIM1L0.fbFilterWheel.nGetPos
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MFW:RAW:CMD
      - waveform
      - $(SYMBOL).fbIM1L0.fbFilterWheel.fbCom.sCmd
      - | io: output


    * - $(PREFIX):IM1L0:XTES:MFW:RAW:CMD_RBV
      - waveform
      - $(SYMBOL).fbIM1L0.fbFilterWheel.fbCom.sCmd
      - | io: output


    * - $(PREFIX):IM1L0:XTES:MFW:RAW:DONE_RBV
      - bi
      - $(SYMBOL).fbIM1L0.fbFilterWheel.fbCom.bDone
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MFW:RAW:ERR:RECV_RBV
      - mbbi
      - $(SYMBOL).fbIM1L0.fbFilterWheel.fbCom.eRecvErrorID
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MFW:RAW:ERR:SEND_RBV
      - mbbi
      - $(SYMBOL).fbIM1L0.fbFilterWheel.fbCom.eSendErrorID
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MFW:RAW:ERR:SER_RBV
      - mbbi
      - $(SYMBOL).fbIM1L0.fbFilterWheel.fbCom.eSerialLineErrorID
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MFW:RAW:RESP_RBV
      - waveform
      - $(SYMBOL).fbIM1L0.fbFilterWheel.fbCom.sResponse
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MFW:RAW:SEND
      - bo
      - $(SYMBOL).fbIM1L0.fbFilterWheel.fbCom.bSend
      - | io: output


    * - $(PREFIX):IM1L0:XTES:MFW:RAW:SEND_RBV
      - bi
      - $(SYMBOL).fbIM1L0.fbFilterWheel.fbCom.bSend
      - | io: output


    * - $(PREFIX):IM1L0:XTES:MFW:SET
      - mbbo
      - $(SYMBOL).fbIM1L0.fbFilterWheel.nSetPos
      - | io: output


    * - $(PREFIX):IM1L0:XTES:MFW:SET_RBV
      - mbbi
      - $(SYMBOL).fbIM1L0.fbFilterWheel.nSetPos
      - | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbIM1L0.fbStates.stPlcToEpics.bBusy
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbIM1L0.fbStates.stPlcToEpics.bDone
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbIM1L0.fbStates.stPlcToEpics.bError
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbIM1L0.fbStates.stPlcToEpics.nErrorID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbIM1L0.fbStates.stPlcToEpics.sErrorMsg
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbIM1L0.eEnumGet
      - | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:MAINT
      - bo
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:BeamClass_RBV
      - longin
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBeamClass
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBCRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:eVRanges_RBV
      - longin
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neVRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:MachineMode_RBV
      - longin
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nMachineMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neV
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Rate_RBV
      - longin
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nRate
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU Hz
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Transmission_RBV
      - ai
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nTran
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Valid_RBV
      - bi
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.xValid
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Veto_RBV
      - waveform
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.aVetoDevices
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:PMPS_ID_RBV
      - longin
      - Assertion Request ID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:PMPS_LOADED_RBV
      - bi
      - TRUE if PMPS loaded parameters from the database.
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:PMPS_STATE_RBV
      - waveform
      - PMPS Database Lookup Key
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:ReParams:PressSP_RBV
      - ai
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nPressSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "TORR"
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:PMPS:TRANS:ReParams:TempSP_RBV
      - ai
      - $(SYMBOL).fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nTempSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "C"
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:RESET
      - bo
      - $(SYMBOL).fbIM1L0.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbIM1L0.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:SET
      - mbbo
      - $(SYMBOL).fbIM1L0.eEnumSet
      - | io: output


    * - $(PREFIX):IM1L0:XTES:MMS:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbIM1L0.eEnumSet
      - | io: output


 
PRG_IM1L1_PPM
^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):IM1L1:PPM:CAM:CIL:PCT
      - ao
      - $(SYMBOL).fbIM1L1.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - $(PREFIX):IM1L1:PPM:CAM:CIL:PCT_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - $(PREFIX):IM1L1:PPM:CAM:PWR
      - bo
      - $(SYMBOL).fbIM1L1.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):IM1L1:PPM:CAM:PWR_RBV
      - bi
      - $(SYMBOL).fbIM1L1.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):IM1L1:PPM:FSW:FLOW_OK
      - bo
      - $(SYMBOL).fbIM1L1.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):IM1L1:PPM:FSW:FLOW_OK_RBV
      - bi
      - $(SYMBOL).fbIM1L1.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):IM1L1:PPM:FWM:OFF
      - ao
      - $(SYMBOL).fbIM1L1.fbFlowMeter.fOffset
      - | io: output


    * - $(PREFIX):IM1L1:PPM:FWM:OFF_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbFlowMeter.fOffset
      - | io: output


    * - $(PREFIX):IM1L1:PPM:FWM:RES
      - ao
      - $(SYMBOL).fbIM1L1.fbFlowMeter.fResolution
      - | io: output


    * - $(PREFIX):IM1L1:PPM:FWM:RES_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbFlowMeter.fResolution
      - | io: output


    * - $(PREFIX):IM1L1:PPM:FWM:VAL_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbFlowMeter.fReal
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbIM1L1.fbStates.stPlcToEpics.bBusy
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbIM1L1.fbStates.stPlcToEpics.bDone
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbIM1L1.fbStates.stPlcToEpics.bError
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbIM1L1.fbStates.stPlcToEpics.nErrorID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbIM1L1.fbStates.stPlcToEpics.sErrorMsg
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbIM1L1.eEnumGet
      - | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:MAINT
      - bo
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:BeamClass_RBV
      - longin
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBeamClass
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBCRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:eVRanges_RBV
      - longin
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neVRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:MachineMode_RBV
      - longin
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nMachineMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neV
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Rate_RBV
      - longin
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nRate
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU Hz
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Transmission_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nTran
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Valid_RBV
      - bi
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.xValid
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Veto_RBV
      - waveform
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.aVetoDevices
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:PMPS_ID_RBV
      - longin
      - Assertion Request ID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:PMPS_LOADED_RBV
      - bi
      - TRUE if PMPS loaded parameters from the database.
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:PMPS_STATE_RBV
      - waveform
      - PMPS Database Lookup Key
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:ReParams:PressSP_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nPressSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "TORR"
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:PMPS:TRANS:ReParams:TempSP_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nTempSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "C"
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:RESET
      - bo
      - $(SYMBOL).fbIM1L1.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbIM1L1.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:SET
      - mbbo
      - $(SYMBOL).fbIM1L1.eEnumSet
      - | io: output


    * - $(PREFIX):IM1L1:PPM:MMS:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbIM1L1.eEnumSet
      - | io: output


    * - $(PREFIX):IM1L1:PPM:SPM:BACK:COLL
      - bo
      - $(SYMBOL).fbIM1L1.fbPowerMeter.bBackgroundCollect
      - | io: output


    * - $(PREFIX):IM1L1:PPM:SPM:BACK:COLL_RBV
      - bi
      - $(SYMBOL).fbIM1L1.fbPowerMeter.bBackgroundCollect
      - | io: output


    * - $(PREFIX):IM1L1:PPM:SPM:BACK:MANUAL_COLLECTING_RBV
      - bi
      - $(SYMBOL).fbIM1L1.fbPowerMeter.bBackgroundCollecting
      - | io: input


    * - $(PREFIX):IM1L1:PPM:SPM:BACK:MODE
      - mbbo
      - $(SYMBOL).fbIM1L1.fbPowerMeter.BACKGROUND_MODE
      - | io: output


    * - $(PREFIX):IM1L1:PPM:SPM:BACK:MODE_RBV
      - mbbi
      - $(SYMBOL).fbIM1L1.fbPowerMeter.BACKGROUND_MODE
      - | io: output


    * - $(PREFIX):IM1L1:PPM:SPM:BACK:RESET
      - bo
      - $(SYMBOL).fbIM1L1.fbPowerMeter.bResetAutoBackground
      - | io: output


    * - $(PREFIX):IM1L1:PPM:SPM:BACK:RESET_RBV
      - bi
      - $(SYMBOL).fbIM1L1.fbPowerMeter.bResetAutoBackground
      - | io: output


    * - $(PREFIX):IM1L1:PPM:SPM:BACK:TIME
      - longout
      - $(SYMBOL).fbIM1L1.fbPowerMeter.uBackgroundCollectionTime
      - | field: EGU s
        | io: output


    * - $(PREFIX):IM1L1:PPM:SPM:BACK:TIME_RBV
      - longin
      - $(SYMBOL).fbIM1L1.fbPowerMeter.uBackgroundCollectionTime
      - | field: EGU s
        | io: output


    * - $(PREFIX):IM1L1:PPM:SPM:BACK:VOLT
      - ao
      - $(SYMBOL).fbIM1L1.fbPowerMeter.fBackgroundVoltage
      - | field: EGU mV
        | io: output


    * - $(PREFIX):IM1L1:PPM:SPM:BACK:VOLT_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbPowerMeter.fBackgroundVoltage
      - | field: EGU mV
        | io: output


    * - $(PREFIX):IM1L1:PPM:SPM:HXR_NC_BeamRateFromEpics
      - ao
      - $(SYMBOL).fbIM1L1.fbPowerMeter.fHXR_NC_Frequency; Linked to PV: [None, None, None, 'EVNT:SYS0:1:NC_HARDRATE']
      - | io: output
        | link: [None, None, None, 'EVNT:SYS0:1:NC_HARDRATE']


    * - $(PREFIX):IM1L1:PPM:SPM:HXR_NC_BeamRateFromEpics_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbPowerMeter.fHXR_NC_Frequency; Linked to PV: [None, None, None, 'EVNT:SYS0:1:NC_HARDRATE']
      - | io: output
        | link: [None, None, None, 'EVNT:SYS0:1:NC_HARDRATE']


    * - $(PREFIX):IM1L1:PPM:SPM:HXR_SC_BeamRateFromEpics
      - longout
      - $(SYMBOL).fbIM1L1.fbPowerMeter.uHXR_SC_Frequency; Linked to PV: [None, None, None, 'TPG:SYS0:1:DST03:RATE_RBV']
      - | io: output
        | link: [None, None, None, 'TPG:SYS0:1:DST03:RATE_RBV']


    * - $(PREFIX):IM1L1:PPM:SPM:HXR_SC_BeamRateFromEpics_RBV
      - longin
      - $(SYMBOL).fbIM1L1.fbPowerMeter.uHXR_SC_Frequency; Linked to PV: [None, None, None, 'TPG:SYS0:1:DST03:RATE_RBV']
      - | io: output
        | link: [None, None, None, 'TPG:SYS0:1:DST03:RATE_RBV']


    * - $(PREFIX):IM1L1:PPM:SPM:MJ_BUFFER_RBV
      - waveform
      - $(SYMBOL).fbIM1L1.fbPowerMeter.fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - $(PREFIX):IM1L1:PPM:SPM:MJ_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbPowerMeter.fCalibMJ
      - | field: EGU mJ
        | io: input


    * - $(PREFIX):IM1L1:PPM:SPM:RESP_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbPowerMeter.fResponsivity
      - | field: EGU V/W
        | io: input


    * - $(PREFIX):IM1L1:PPM:SPM:STC:CONN_RBV
      - bi
      - $(SYMBOL).fbIM1L1.fbPowerMeter.fbTempSensor.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):IM1L1:PPM:SPM:STC:ERR_RBV
      - bi
      - $(SYMBOL).fbIM1L1.fbPowerMeter.fbTempSensor.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):IM1L1:PPM:SPM:STC:FAULT_SP_HYS_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbPowerMeter.fbTempSensor.fHysteresis
      - | field: EGU %
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM1L1:PPM:SPM:STC:FAULT_SP_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbPowerMeter.fbTempSensor.fFaultThreshold
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM1L1:PPM:SPM:STC:TEMP_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbPowerMeter.fbTempSensor.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM1L1:PPM:SPM:SXR_NC_BeamRateFromEpics
      - ao
      - $(SYMBOL).fbIM1L1.fbPowerMeter.fSXR_NC_Frequency; Linked to PV: [None, None, None, 'EVNT:SYS0:1:NC_SOFTRATE']
      - | io: output
        | link: [None, None, None, 'EVNT:SYS0:1:NC_SOFTRATE']


    * - $(PREFIX):IM1L1:PPM:SPM:SXR_NC_BeamRateFromEpics_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbPowerMeter.fSXR_NC_Frequency; Linked to PV: [None, None, None, 'EVNT:SYS0:1:NC_SOFTRATE']
      - | io: output
        | link: [None, None, None, 'EVNT:SYS0:1:NC_SOFTRATE']


    * - $(PREFIX):IM1L1:PPM:SPM:SXR_SC_BeamRateFromEpics
      - longout
      - $(SYMBOL).fbIM1L1.fbPowerMeter.uSXR_SC_Frequency; Linked to PV: [None, None, None, 'TPG:SYS0:1:DST04:RATE_RBV']
      - | io: output
        | link: [None, None, None, 'TPG:SYS0:1:DST04:RATE_RBV']


    * - $(PREFIX):IM1L1:PPM:SPM:SXR_SC_BeamRateFromEpics_RBV
      - longin
      - $(SYMBOL).fbIM1L1.fbPowerMeter.uSXR_SC_Frequency; Linked to PV: [None, None, None, 'TPG:SYS0:1:DST04:RATE_RBV']
      - | io: output
        | link: [None, None, None, 'TPG:SYS0:1:DST04:RATE_RBV']


    * - $(PREFIX):IM1L1:PPM:SPM:VOLT_BUFFER_RBV
      - waveform
      - $(SYMBOL).fbIM1L1.fbPowerMeter.fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - $(PREFIX):IM1L1:PPM:SPM:VOLT_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbPowerMeter.fVoltage
      - | field: EGU mV
        | io: input


    * - $(PREFIX):IM1L1:PPM:SPM:WATT_BUFFER_RBV
      - waveform
      - $(SYMBOL).fbIM1L1.fbPowerMeter.fPulseWattageBuffer
      - | field: EGU mW
        | io: input


    * - $(PREFIX):IM1L1:PPM:SPM:WATT_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbPowerMeter.fPulseWattage
      - | field: EGU mW
        | io: input


    * - $(PREFIX):IM1L1:PPM:YAG:STC:CONN_RBV
      - bi
      - $(SYMBOL).fbIM1L1.fbYagTempSensor.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):IM1L1:PPM:YAG:STC:ERR_RBV
      - bi
      - $(SYMBOL).fbIM1L1.fbYagTempSensor.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):IM1L1:PPM:YAG:STC:FAULT_SP_HYS_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbYagTempSensor.fHysteresis
      - | field: EGU %
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM1L1:PPM:YAG:STC:FAULT_SP_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbYagTempSensor.fFaultThreshold
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM1L1:PPM:YAG:STC:TEMP_RBV
      - ai
      - $(SYMBOL).fbIM1L1.fbYagTempSensor.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


 
PRG_IM2L0_XTES
^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):IM2L0:XTES:CAM:PWR
      - bo
      - $(SYMBOL).fbIM2L0.fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):IM2L0:XTES:CAM:PWR_RBV
      - bi
      - $(SYMBOL).fbIM2L0.fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):IM2L0:XTES:CIL:AUTO
      - bo
      - $(SYMBOL).fbIM2L0.fbLED.bLEDAuto
      - | io: output


    * - $(PREFIX):IM2L0:XTES:CIL:AUTO_RBV
      - bi
      - $(SYMBOL).fbIM2L0.fbLED.bLEDAuto
      - | io: output


    * - $(PREFIX):IM2L0:XTES:CIL:CLK:REMAINING
      - ao
      - $(SYMBOL).fbIM2L0.fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - $(PREFIX):IM2L0:XTES:CIL:CLK:REMAINING_RBV
      - ai
      - $(SYMBOL).fbIM2L0.fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - $(PREFIX):IM2L0:XTES:CIL:CLK:TIMEOUT
      - ao
      - $(SYMBOL).fbIM2L0.fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - $(PREFIX):IM2L0:XTES:CIL:CLK:TIMEOUT_RBV
      - ai
      - $(SYMBOL).fbIM2L0.fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - $(PREFIX):IM2L0:XTES:CIL:PWR
      - bo
      - $(SYMBOL).fbIM2L0.fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):IM2L0:XTES:CIL:PWR_RBV
      - bi
      - $(SYMBOL).fbIM2L0.fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):IM2L0:XTES:CLF:LOCK
      - bo
      - $(SYMBOL).fbIM2L0.bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - $(PREFIX):IM2L0:XTES:CLF:LOCK_RBV
      - bi
      - $(SYMBOL).fbIM2L0.bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - $(PREFIX):IM2L0:XTES:CLZ:LOCK
      - bo
      - $(SYMBOL).fbIM2L0.bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - $(PREFIX):IM2L0:XTES:CLZ:LOCK_RBV
      - bi
      - $(SYMBOL).fbIM2L0.bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - $(PREFIX):IM2L0:XTES:FSW:FLOW_OK
      - bo
      - $(SYMBOL).fbIM2L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):IM2L0:XTES:FSW:FLOW_OK_RBV
      - bi
      - $(SYMBOL).fbIM2L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):IM2L0:XTES:MFW:ERR:MSG_RBV
      - waveform
      - $(SYMBOL).fbIM2L0.fbFilterWheel.sLastError
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MFW:ERR:RESET
      - bo
      - $(SYMBOL).fbIM2L0.fbFilterWheel.bResetError
      - | io: output


    * - $(PREFIX):IM2L0:XTES:MFW:ERR:RESET_RBV
      - bi
      - $(SYMBOL).fbIM2L0.fbFilterWheel.bResetError
      - | io: output


    * - $(PREFIX):IM2L0:XTES:MFW:GET_RBV
      - mbbi
      - $(SYMBOL).fbIM2L0.fbFilterWheel.nGetPos
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MFW:RAW:CMD
      - waveform
      - $(SYMBOL).fbIM2L0.fbFilterWheel.fbCom.sCmd
      - | io: output


    * - $(PREFIX):IM2L0:XTES:MFW:RAW:CMD_RBV
      - waveform
      - $(SYMBOL).fbIM2L0.fbFilterWheel.fbCom.sCmd
      - | io: output


    * - $(PREFIX):IM2L0:XTES:MFW:RAW:DONE_RBV
      - bi
      - $(SYMBOL).fbIM2L0.fbFilterWheel.fbCom.bDone
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MFW:RAW:ERR:RECV_RBV
      - mbbi
      - $(SYMBOL).fbIM2L0.fbFilterWheel.fbCom.eRecvErrorID
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MFW:RAW:ERR:SEND_RBV
      - mbbi
      - $(SYMBOL).fbIM2L0.fbFilterWheel.fbCom.eSendErrorID
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MFW:RAW:ERR:SER_RBV
      - mbbi
      - $(SYMBOL).fbIM2L0.fbFilterWheel.fbCom.eSerialLineErrorID
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MFW:RAW:RESP_RBV
      - waveform
      - $(SYMBOL).fbIM2L0.fbFilterWheel.fbCom.sResponse
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MFW:RAW:SEND
      - bo
      - $(SYMBOL).fbIM2L0.fbFilterWheel.fbCom.bSend
      - | io: output


    * - $(PREFIX):IM2L0:XTES:MFW:RAW:SEND_RBV
      - bi
      - $(SYMBOL).fbIM2L0.fbFilterWheel.fbCom.bSend
      - | io: output


    * - $(PREFIX):IM2L0:XTES:MFW:SET
      - mbbo
      - $(SYMBOL).fbIM2L0.fbFilterWheel.nSetPos
      - | io: output


    * - $(PREFIX):IM2L0:XTES:MFW:SET_RBV
      - mbbi
      - $(SYMBOL).fbIM2L0.fbFilterWheel.nSetPos
      - | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbIM2L0.fbStates.stPlcToEpics.bBusy
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbIM2L0.fbStates.stPlcToEpics.bDone
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbIM2L0.fbStates.stPlcToEpics.bError
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbIM2L0.fbStates.stPlcToEpics.nErrorID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbIM2L0.fbStates.stPlcToEpics.sErrorMsg
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbIM2L0.eEnumGet
      - | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:MAINT
      - bo
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:BeamClass_RBV
      - longin
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBeamClass
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBCRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:eVRanges_RBV
      - longin
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neVRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:MachineMode_RBV
      - longin
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nMachineMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neV
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Rate_RBV
      - longin
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nRate
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU Hz
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Transmission_RBV
      - ai
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nTran
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Valid_RBV
      - bi
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.xValid
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Veto_RBV
      - waveform
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.aVetoDevices
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:PMPS_ID_RBV
      - longin
      - Assertion Request ID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:PMPS_LOADED_RBV
      - bi
      - TRUE if PMPS loaded parameters from the database.
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:PMPS_STATE_RBV
      - waveform
      - PMPS Database Lookup Key
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:ReParams:PressSP_RBV
      - ai
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nPressSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "TORR"
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:PMPS:TRANS:ReParams:TempSP_RBV
      - ai
      - $(SYMBOL).fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nTempSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "C"
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:RESET
      - bo
      - $(SYMBOL).fbIM2L0.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbIM2L0.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:SET
      - mbbo
      - $(SYMBOL).fbIM2L0.eEnumSet
      - | io: output


    * - $(PREFIX):IM2L0:XTES:MMS:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbIM2L0.eEnumSet
      - | io: output


 
PRG_IM3L0_PPM
^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):IM3L0:PPM:CAM:CIL:PCT
      - ao
      - $(SYMBOL).fbIM3L0.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - $(PREFIX):IM3L0:PPM:CAM:CIL:PCT_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - $(PREFIX):IM3L0:PPM:CAM:PWR
      - bo
      - $(SYMBOL).fbIM3L0.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):IM3L0:PPM:CAM:PWR_RBV
      - bi
      - $(SYMBOL).fbIM3L0.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):IM3L0:PPM:FSW:FLOW_OK
      - bo
      - $(SYMBOL).fbIM3L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):IM3L0:PPM:FSW:FLOW_OK_RBV
      - bi
      - $(SYMBOL).fbIM3L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):IM3L0:PPM:FWM:OFF
      - ao
      - $(SYMBOL).fbIM3L0.fbFlowMeter.fOffset
      - | io: output


    * - $(PREFIX):IM3L0:PPM:FWM:OFF_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbFlowMeter.fOffset
      - | io: output


    * - $(PREFIX):IM3L0:PPM:FWM:RES
      - ao
      - $(SYMBOL).fbIM3L0.fbFlowMeter.fResolution
      - | io: output


    * - $(PREFIX):IM3L0:PPM:FWM:RES_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbFlowMeter.fResolution
      - | io: output


    * - $(PREFIX):IM3L0:PPM:FWM:VAL_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbFlowMeter.fReal
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbIM3L0.fbStates.stPlcToEpics.bBusy
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbIM3L0.fbStates.stPlcToEpics.bDone
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbIM3L0.fbStates.stPlcToEpics.bError
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbIM3L0.fbStates.stPlcToEpics.nErrorID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbIM3L0.fbStates.stPlcToEpics.sErrorMsg
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbIM3L0.eEnumGet
      - | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:MAINT
      - bo
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:BeamClass_RBV
      - longin
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBeamClass
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBCRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:eVRanges_RBV
      - longin
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neVRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:MachineMode_RBV
      - longin
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nMachineMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neV
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Rate_RBV
      - longin
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nRate
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU Hz
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Transmission_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nTran
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Valid_RBV
      - bi
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.xValid
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Veto_RBV
      - waveform
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.aVetoDevices
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:PMPS_ID_RBV
      - longin
      - Assertion Request ID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:PMPS_LOADED_RBV
      - bi
      - TRUE if PMPS loaded parameters from the database.
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:PMPS_STATE_RBV
      - waveform
      - PMPS Database Lookup Key
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:ReParams:PressSP_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nPressSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "TORR"
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:PMPS:TRANS:ReParams:TempSP_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nTempSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "C"
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:RESET
      - bo
      - $(SYMBOL).fbIM3L0.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbIM3L0.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:SET
      - mbbo
      - $(SYMBOL).fbIM3L0.eEnumSet
      - | io: output


    * - $(PREFIX):IM3L0:PPM:MMS:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbIM3L0.eEnumSet
      - | io: output


    * - $(PREFIX):IM3L0:PPM:SPM:BACK:COLL
      - bo
      - $(SYMBOL).fbIM3L0.fbPowerMeter.bBackgroundCollect
      - | io: output


    * - $(PREFIX):IM3L0:PPM:SPM:BACK:COLL_RBV
      - bi
      - $(SYMBOL).fbIM3L0.fbPowerMeter.bBackgroundCollect
      - | io: output


    * - $(PREFIX):IM3L0:PPM:SPM:BACK:MANUAL_COLLECTING_RBV
      - bi
      - $(SYMBOL).fbIM3L0.fbPowerMeter.bBackgroundCollecting
      - | io: input


    * - $(PREFIX):IM3L0:PPM:SPM:BACK:MODE
      - mbbo
      - $(SYMBOL).fbIM3L0.fbPowerMeter.BACKGROUND_MODE
      - | io: output


    * - $(PREFIX):IM3L0:PPM:SPM:BACK:MODE_RBV
      - mbbi
      - $(SYMBOL).fbIM3L0.fbPowerMeter.BACKGROUND_MODE
      - | io: output


    * - $(PREFIX):IM3L0:PPM:SPM:BACK:RESET
      - bo
      - $(SYMBOL).fbIM3L0.fbPowerMeter.bResetAutoBackground
      - | io: output


    * - $(PREFIX):IM3L0:PPM:SPM:BACK:RESET_RBV
      - bi
      - $(SYMBOL).fbIM3L0.fbPowerMeter.bResetAutoBackground
      - | io: output


    * - $(PREFIX):IM3L0:PPM:SPM:BACK:TIME
      - longout
      - $(SYMBOL).fbIM3L0.fbPowerMeter.uBackgroundCollectionTime
      - | field: EGU s
        | io: output


    * - $(PREFIX):IM3L0:PPM:SPM:BACK:TIME_RBV
      - longin
      - $(SYMBOL).fbIM3L0.fbPowerMeter.uBackgroundCollectionTime
      - | field: EGU s
        | io: output


    * - $(PREFIX):IM3L0:PPM:SPM:BACK:VOLT
      - ao
      - $(SYMBOL).fbIM3L0.fbPowerMeter.fBackgroundVoltage
      - | field: EGU mV
        | io: output


    * - $(PREFIX):IM3L0:PPM:SPM:BACK:VOLT_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbPowerMeter.fBackgroundVoltage
      - | field: EGU mV
        | io: output


    * - $(PREFIX):IM3L0:PPM:SPM:HXR_NC_BeamRateFromEpics
      - ao
      - $(SYMBOL).fbIM3L0.fbPowerMeter.fHXR_NC_Frequency; Linked to PV: [None, None, None, 'EVNT:SYS0:1:NC_HARDRATE']
      - | io: output
        | link: [None, None, None, 'EVNT:SYS0:1:NC_HARDRATE']


    * - $(PREFIX):IM3L0:PPM:SPM:HXR_NC_BeamRateFromEpics_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbPowerMeter.fHXR_NC_Frequency; Linked to PV: [None, None, None, 'EVNT:SYS0:1:NC_HARDRATE']
      - | io: output
        | link: [None, None, None, 'EVNT:SYS0:1:NC_HARDRATE']


    * - $(PREFIX):IM3L0:PPM:SPM:HXR_SC_BeamRateFromEpics
      - longout
      - $(SYMBOL).fbIM3L0.fbPowerMeter.uHXR_SC_Frequency; Linked to PV: [None, None, None, 'TPG:SYS0:1:DST03:RATE_RBV']
      - | io: output
        | link: [None, None, None, 'TPG:SYS0:1:DST03:RATE_RBV']


    * - $(PREFIX):IM3L0:PPM:SPM:HXR_SC_BeamRateFromEpics_RBV
      - longin
      - $(SYMBOL).fbIM3L0.fbPowerMeter.uHXR_SC_Frequency; Linked to PV: [None, None, None, 'TPG:SYS0:1:DST03:RATE_RBV']
      - | io: output
        | link: [None, None, None, 'TPG:SYS0:1:DST03:RATE_RBV']


    * - $(PREFIX):IM3L0:PPM:SPM:MJ_BUFFER_RBV
      - waveform
      - $(SYMBOL).fbIM3L0.fbPowerMeter.fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - $(PREFIX):IM3L0:PPM:SPM:MJ_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbPowerMeter.fCalibMJ
      - | field: EGU mJ
        | io: input


    * - $(PREFIX):IM3L0:PPM:SPM:RESP_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbPowerMeter.fResponsivity
      - | field: EGU V/W
        | io: input


    * - $(PREFIX):IM3L0:PPM:SPM:STC:CONN_RBV
      - bi
      - $(SYMBOL).fbIM3L0.fbPowerMeter.fbTempSensor.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):IM3L0:PPM:SPM:STC:ERR_RBV
      - bi
      - $(SYMBOL).fbIM3L0.fbPowerMeter.fbTempSensor.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):IM3L0:PPM:SPM:STC:FAULT_SP_HYS_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbPowerMeter.fbTempSensor.fHysteresis
      - | field: EGU %
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM3L0:PPM:SPM:STC:FAULT_SP_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbPowerMeter.fbTempSensor.fFaultThreshold
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM3L0:PPM:SPM:STC:TEMP_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbPowerMeter.fbTempSensor.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM3L0:PPM:SPM:SXR_NC_BeamRateFromEpics
      - ao
      - $(SYMBOL).fbIM3L0.fbPowerMeter.fSXR_NC_Frequency; Linked to PV: [None, None, None, 'EVNT:SYS0:1:NC_SOFTRATE']
      - | io: output
        | link: [None, None, None, 'EVNT:SYS0:1:NC_SOFTRATE']


    * - $(PREFIX):IM3L0:PPM:SPM:SXR_NC_BeamRateFromEpics_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbPowerMeter.fSXR_NC_Frequency; Linked to PV: [None, None, None, 'EVNT:SYS0:1:NC_SOFTRATE']
      - | io: output
        | link: [None, None, None, 'EVNT:SYS0:1:NC_SOFTRATE']


    * - $(PREFIX):IM3L0:PPM:SPM:SXR_SC_BeamRateFromEpics
      - longout
      - $(SYMBOL).fbIM3L0.fbPowerMeter.uSXR_SC_Frequency; Linked to PV: [None, None, None, 'TPG:SYS0:1:DST04:RATE_RBV']
      - | io: output
        | link: [None, None, None, 'TPG:SYS0:1:DST04:RATE_RBV']


    * - $(PREFIX):IM3L0:PPM:SPM:SXR_SC_BeamRateFromEpics_RBV
      - longin
      - $(SYMBOL).fbIM3L0.fbPowerMeter.uSXR_SC_Frequency; Linked to PV: [None, None, None, 'TPG:SYS0:1:DST04:RATE_RBV']
      - | io: output
        | link: [None, None, None, 'TPG:SYS0:1:DST04:RATE_RBV']


    * - $(PREFIX):IM3L0:PPM:SPM:VOLT_BUFFER_RBV
      - waveform
      - $(SYMBOL).fbIM3L0.fbPowerMeter.fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - $(PREFIX):IM3L0:PPM:SPM:VOLT_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbPowerMeter.fVoltage
      - | field: EGU mV
        | io: input


    * - $(PREFIX):IM3L0:PPM:SPM:WATT_BUFFER_RBV
      - waveform
      - $(SYMBOL).fbIM3L0.fbPowerMeter.fPulseWattageBuffer
      - | field: EGU mW
        | io: input


    * - $(PREFIX):IM3L0:PPM:SPM:WATT_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbPowerMeter.fPulseWattage
      - | field: EGU mW
        | io: input


    * - $(PREFIX):IM3L0:PPM:YAG:STC:CONN_RBV
      - bi
      - $(SYMBOL).fbIM3L0.fbYagTempSensor.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):IM3L0:PPM:YAG:STC:ERR_RBV
      - bi
      - $(SYMBOL).fbIM3L0.fbYagTempSensor.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):IM3L0:PPM:YAG:STC:FAULT_SP_HYS_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbYagTempSensor.fHysteresis
      - | field: EGU %
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM3L0:PPM:YAG:STC:FAULT_SP_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbYagTempSensor.fFaultThreshold
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM3L0:PPM:YAG:STC:TEMP_RBV
      - ai
      - $(SYMBOL).fbIM3L0.fbYagTempSensor.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


 
PRG_IM4L0_XTES
^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):IM4L0:SCRP:LED:01:PWR
      - bo
      - $(SYMBOL).bIM4L0_SCRP_LED_01
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):IM4L0:SCRP:LED:01:PWR_RBV
      - bi
      - $(SYMBOL).bIM4L0_SCRP_LED_01
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):IM4L0:XTES:CAM:PWR
      - bo
      - $(SYMBOL).fbIM4L0.fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):IM4L0:XTES:CAM:PWR_RBV
      - bi
      - $(SYMBOL).fbIM4L0.fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):IM4L0:XTES:CIL:AUTO
      - bo
      - $(SYMBOL).fbIM4L0.fbLED.bLEDAuto
      - | io: output


    * - $(PREFIX):IM4L0:XTES:CIL:AUTO_RBV
      - bi
      - $(SYMBOL).fbIM4L0.fbLED.bLEDAuto
      - | io: output


    * - $(PREFIX):IM4L0:XTES:CIL:CLK:REMAINING
      - ao
      - $(SYMBOL).fbIM4L0.fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - $(PREFIX):IM4L0:XTES:CIL:CLK:REMAINING_RBV
      - ai
      - $(SYMBOL).fbIM4L0.fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - $(PREFIX):IM4L0:XTES:CIL:CLK:TIMEOUT
      - ao
      - $(SYMBOL).fbIM4L0.fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - $(PREFIX):IM4L0:XTES:CIL:CLK:TIMEOUT_RBV
      - ai
      - $(SYMBOL).fbIM4L0.fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - $(PREFIX):IM4L0:XTES:CIL:PWR
      - bo
      - $(SYMBOL).fbIM4L0.fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):IM4L0:XTES:CIL:PWR_RBV
      - bi
      - $(SYMBOL).fbIM4L0.fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):IM4L0:XTES:CLF:LOCK
      - bo
      - $(SYMBOL).fbIM4L0.bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - $(PREFIX):IM4L0:XTES:CLF:LOCK_RBV
      - bi
      - $(SYMBOL).fbIM4L0.bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - $(PREFIX):IM4L0:XTES:CLZ:LOCK
      - bo
      - $(SYMBOL).fbIM4L0.bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - $(PREFIX):IM4L0:XTES:CLZ:LOCK_RBV
      - bi
      - $(SYMBOL).fbIM4L0.bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - $(PREFIX):IM4L0:XTES:FSW:FLOW_OK
      - bo
      - $(SYMBOL).fbIM4L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):IM4L0:XTES:FSW:FLOW_OK_RBV
      - bi
      - $(SYMBOL).fbIM4L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):IM4L0:XTES:MFW:ERR:MSG_RBV
      - waveform
      - $(SYMBOL).fbIM4L0.fbFilterWheel.sLastError
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MFW:ERR:RESET
      - bo
      - $(SYMBOL).fbIM4L0.fbFilterWheel.bResetError
      - | io: output


    * - $(PREFIX):IM4L0:XTES:MFW:ERR:RESET_RBV
      - bi
      - $(SYMBOL).fbIM4L0.fbFilterWheel.bResetError
      - | io: output


    * - $(PREFIX):IM4L0:XTES:MFW:GET_RBV
      - mbbi
      - $(SYMBOL).fbIM4L0.fbFilterWheel.nGetPos
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MFW:RAW:CMD
      - waveform
      - $(SYMBOL).fbIM4L0.fbFilterWheel.fbCom.sCmd
      - | io: output


    * - $(PREFIX):IM4L0:XTES:MFW:RAW:CMD_RBV
      - waveform
      - $(SYMBOL).fbIM4L0.fbFilterWheel.fbCom.sCmd
      - | io: output


    * - $(PREFIX):IM4L0:XTES:MFW:RAW:DONE_RBV
      - bi
      - $(SYMBOL).fbIM4L0.fbFilterWheel.fbCom.bDone
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MFW:RAW:ERR:RECV_RBV
      - mbbi
      - $(SYMBOL).fbIM4L0.fbFilterWheel.fbCom.eRecvErrorID
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MFW:RAW:ERR:SEND_RBV
      - mbbi
      - $(SYMBOL).fbIM4L0.fbFilterWheel.fbCom.eSendErrorID
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MFW:RAW:ERR:SER_RBV
      - mbbi
      - $(SYMBOL).fbIM4L0.fbFilterWheel.fbCom.eSerialLineErrorID
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MFW:RAW:RESP_RBV
      - waveform
      - $(SYMBOL).fbIM4L0.fbFilterWheel.fbCom.sResponse
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MFW:RAW:SEND
      - bo
      - $(SYMBOL).fbIM4L0.fbFilterWheel.fbCom.bSend
      - | io: output


    * - $(PREFIX):IM4L0:XTES:MFW:RAW:SEND_RBV
      - bi
      - $(SYMBOL).fbIM4L0.fbFilterWheel.fbCom.bSend
      - | io: output


    * - $(PREFIX):IM4L0:XTES:MFW:SET
      - mbbo
      - $(SYMBOL).fbIM4L0.fbFilterWheel.nSetPos
      - | io: output


    * - $(PREFIX):IM4L0:XTES:MFW:SET_RBV
      - mbbi
      - $(SYMBOL).fbIM4L0.fbFilterWheel.nSetPos
      - | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbIM4L0.fbStates.stPlcToEpics.bBusy
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbIM4L0.fbStates.stPlcToEpics.bDone
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbIM4L0.fbStates.stPlcToEpics.bError
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbIM4L0.fbStates.stPlcToEpics.nErrorID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbIM4L0.fbStates.stPlcToEpics.sErrorMsg
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbIM4L0.eEnumGet
      - | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:MAINT
      - bo
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:BeamClass_RBV
      - longin
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBeamClass
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBCRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:eVRanges_RBV
      - longin
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neVRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:MachineMode_RBV
      - longin
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nMachineMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neV
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Rate_RBV
      - longin
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nRate
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU Hz
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Transmission_RBV
      - ai
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nTran
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Valid_RBV
      - bi
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.xValid
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Veto_RBV
      - waveform
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.aVetoDevices
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:PMPS_ID_RBV
      - longin
      - Assertion Request ID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:PMPS_LOADED_RBV
      - bi
      - TRUE if PMPS loaded parameters from the database.
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:PMPS_STATE_RBV
      - waveform
      - PMPS Database Lookup Key
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:ReParams:PressSP_RBV
      - ai
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nPressSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "TORR"
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:PMPS:TRANS:ReParams:TempSP_RBV
      - ai
      - $(SYMBOL).fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nTempSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "C"
        | field: PREC 2
        | io: input


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:RESET
      - bo
      - $(SYMBOL).fbIM4L0.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbIM4L0.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:SET
      - mbbo
      - $(SYMBOL).fbIM4L0.eEnumSet
      - | io: output


    * - $(PREFIX):IM4L0:XTES:MMS:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbIM4L0.eEnumSet
      - | io: output


 
PRG_PF1L0_WFS
^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):PF1L0:WFS:FSW:FLOW_OK
      - bo
      - $(SYMBOL).fbPF1L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):PF1L0:WFS:FSW:FLOW_OK_RBV
      - bi
      - $(SYMBOL).fbPF1L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):PF1L0:WFS:FWM:OFF
      - ao
      - $(SYMBOL).fbPF1L0.fbFlowMeter.fOffset
      - | io: output


    * - $(PREFIX):PF1L0:WFS:FWM:OFF_RBV
      - ai
      - $(SYMBOL).fbPF1L0.fbFlowMeter.fOffset
      - | io: output


    * - $(PREFIX):PF1L0:WFS:FWM:RES
      - ao
      - $(SYMBOL).fbPF1L0.fbFlowMeter.fResolution
      - | io: output


    * - $(PREFIX):PF1L0:WFS:FWM:RES_RBV
      - ai
      - $(SYMBOL).fbPF1L0.fbFlowMeter.fResolution
      - | io: output


    * - $(PREFIX):PF1L0:WFS:FWM:VAL_RBV
      - ai
      - $(SYMBOL).fbPF1L0.fbFlowMeter.fReal
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbPF1L0.fbStates.stPlcToEpics.bBusy
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbPF1L0.fbStates.stPlcToEpics.bDone
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbPF1L0.fbStates.stPlcToEpics.bError
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbPF1L0.fbStates.stPlcToEpics.nErrorID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbPF1L0.fbStates.stPlcToEpics.sErrorMsg
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbPF1L0.eEnumGet
      - | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:MAINT
      - bo
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:BeamClass_RBV
      - longin
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBeamClass
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBCRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:eVRanges_RBV
      - longin
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neVRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU eV
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:MachineMode_RBV
      - longin
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nMachineMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neV
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU eV
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Rate_RBV
      - longin
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nRate
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU Hz
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Transmission_RBV
      - ai
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nTran
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Valid_RBV
      - bi
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.xValid
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Veto_RBV
      - waveform
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.aVetoDevices
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:PMPS_ID_RBV
      - longin
      - Assertion Request ID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:PMPS_LOADED_RBV
      - bi
      - TRUE if PMPS loaded parameters from the database.
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:PMPS_STATE_RBV
      - waveform
      - PMPS Database Lookup Key
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:ReParams:PressSP_RBV
      - ai
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nPressSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU "TORR"
        | field: PREC 2
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:PMPS:TRANS:ReParams:TempSP_RBV
      - ai
      - $(SYMBOL).fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nTempSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU "C"
        | field: PREC 2
        | io: input


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:RESET
      - bo
      - $(SYMBOL).fbPF1L0.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbPF1L0.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:SET
      - mbbo
      - $(SYMBOL).fbPF1L0.eEnumSet
      - | io: output


    * - $(PREFIX):PF1L0:WFS:MMS:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbPF1L0.eEnumSet
      - | io: output


    * - $(PREFIX):PF1L0:WFS:STC:01:CONN_RBV
      - bi
      - $(SYMBOL).fbPF1L0.fbThermoCouple1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):PF1L0:WFS:STC:01:ERR_RBV
      - bi
      - $(SYMBOL).fbPF1L0.fbThermoCouple1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):PF1L0:WFS:STC:01:FAULT_SP_HYS_RBV
      - ai
      - $(SYMBOL).fbPF1L0.fbThermoCouple1.fHysteresis
      - | field: EGU %
        | field: PREC 2
        | io: input


    * - $(PREFIX):PF1L0:WFS:STC:01:FAULT_SP_RBV
      - ai
      - $(SYMBOL).fbPF1L0.fbThermoCouple1.fFaultThreshold
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):PF1L0:WFS:STC:01:TEMP_RBV
      - ai
      - $(SYMBOL).fbPF1L0.fbThermoCouple1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):PF1L0:WFS:STC:02:CONN_RBV
      - bi
      - $(SYMBOL).fbPF1L0.fbThermoCouple2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):PF1L0:WFS:STC:02:ERR_RBV
      - bi
      - $(SYMBOL).fbPF1L0.fbThermoCouple2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):PF1L0:WFS:STC:02:FAULT_SP_HYS_RBV
      - ai
      - $(SYMBOL).fbPF1L0.fbThermoCouple2.fHysteresis
      - | field: EGU %
        | field: PREC 2
        | io: input


    * - $(PREFIX):PF1L0:WFS:STC:02:FAULT_SP_RBV
      - ai
      - $(SYMBOL).fbPF1L0.fbThermoCouple2.fFaultThreshold
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):PF1L0:WFS:STC:02:TEMP_RBV
      - ai
      - $(SYMBOL).fbPF1L0.fbThermoCouple2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


  
PRG_SL1L0_POWER
^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):SL1L0:POWER:ACTUAL_XCENTER
      - ao
      - $(SYMBOL).fbSL1L0.rActCenterX
      - | io: output


    * - $(PREFIX):SL1L0:POWER:ACTUAL_XCENTER_RBV
      - ai
      - $(SYMBOL).fbSL1L0.rActCenterX
      - | io: output


    * - $(PREFIX):SL1L0:POWER:ACTUAL_XWIDTH
      - ao
      - $(SYMBOL).fbSL1L0.rActApertureSizeX
      - | io: output


    * - $(PREFIX):SL1L0:POWER:ACTUAL_XWIDTH_RBV
      - ai
      - $(SYMBOL).fbSL1L0.rActApertureSizeX
      - | io: output


    * - $(PREFIX):SL1L0:POWER:ACTUAL_YCENTER
      - ao
      - $(SYMBOL).fbSL1L0.rActCenterY
      - | io: output


    * - $(PREFIX):SL1L0:POWER:ACTUAL_YCENTER_RBV
      - ai
      - $(SYMBOL).fbSL1L0.rActCenterY
      - | io: output


    * - $(PREFIX):SL1L0:POWER:ACTUAL_YWIDTH
      - ao
      - $(SYMBOL).fbSL1L0.rActApertureSizeY
      - | io: output


    * - $(PREFIX):SL1L0:POWER:ACTUAL_YWIDTH_RBV
      - ai
      - $(SYMBOL).fbSL1L0.rActApertureSizeY
      - | io: output


    * - $(PREFIX):SL1L0:POWER:BLOCK
      - bo
      - $(SYMBOL).fbSL1L0.bBlock
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL1L0:POWER:BLOCK_RBV
      - bi
      - $(SYMBOL).fbSL1L0.bBlock
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL1L0:POWER:BOTTOM:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbSL1L0.fbBottom.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:BOTTOM:BUSY_RBV
      - bi
      - $(SYMBOL).fbSL1L0.fbBottom.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:BOTTOM:DMOV_RBV
      - bi
      - $(SYMBOL).fbSL1L0.fbBottom.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:BOTTOM:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):SL1L0:POWER:BOTTOM:ERR_RBV
      - bi
      - $(SYMBOL).fbSL1L0.fbBottom.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:BOTTOM:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbSL1L0.fbBottom.sError
      - | io: input


    * - $(PREFIX):SL1L0:POWER:BOTTOM:GO
      - bo
      - $(SYMBOL).fbSL1L0.fbBottom.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL1L0:POWER:BOTTOM:GO_RBV
      - bi
      - $(SYMBOL).fbSL1L0.fbBottom.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL1L0:POWER:BOTTOM:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SL1L0:POWER:BOTTOM:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):SL1L0:POWER:BOTTOM:RTD:01:CONN_RBV
      - bi
      - $(SYMBOL).fbSL1L0.RTD_Bottom_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SL1L0:POWER:BOTTOM:RTD:01:ERR_RBV
      - bi
      - $(SYMBOL).fbSL1L0.RTD_Bottom_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:BOTTOM:RTD:01:TEMP_RBV
      - ai
      - $(SYMBOL).fbSL1L0.RTD_Bottom_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SL1L0:POWER:BOTTOM:RTD:02:CONN_RBV
      - bi
      - $(SYMBOL).fbSL1L0.RTD_Bottom_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SL1L0:POWER:BOTTOM:RTD:02:ERR_RBV
      - bi
      - $(SYMBOL).fbSL1L0.RTD_Bottom_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:BOTTOM:RTD:02:TEMP_RBV
      - ai
      - $(SYMBOL).fbSL1L0.RTD_Bottom_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SL1L0:POWER:BOTTOM:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SL1L0:POWER:BOTTOM:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SL1L0:POWER:BOTTOM:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):SL1L0:POWER:BOTTOM:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):SL1L0:POWER:CLOSE
      - bo
      - $(SYMBOL).fbSL1L0.bClose
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL1L0:POWER:CLOSE_RBV
      - bi
      - $(SYMBOL).fbSL1L0.bClose
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL1L0:POWER:FSW:FLOW_OK
      - bo
      - $(SYMBOL).fbSL1L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):SL1L0:POWER:FSW:FLOW_OK_RBV
      - bi
      - $(SYMBOL).fbSL1L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):SL1L0:POWER:GO
      - bo
      - $(SYMBOL).bExecuteMotion
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL1L0:POWER:GO_RBV
      - bi
      - $(SYMBOL).bExecuteMotion
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL1L0:POWER:NORTH:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbSL1L0.fbNorth.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:NORTH:BUSY_RBV
      - bi
      - $(SYMBOL).fbSL1L0.fbNorth.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:NORTH:DMOV_RBV
      - bi
      - $(SYMBOL).fbSL1L0.fbNorth.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:NORTH:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):SL1L0:POWER:NORTH:ERR_RBV
      - bi
      - $(SYMBOL).fbSL1L0.fbNorth.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:NORTH:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbSL1L0.fbNorth.sError
      - | io: input


    * - $(PREFIX):SL1L0:POWER:NORTH:GO
      - bo
      - $(SYMBOL).fbSL1L0.fbNorth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL1L0:POWER:NORTH:GO_RBV
      - bi
      - $(SYMBOL).fbSL1L0.fbNorth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL1L0:POWER:NORTH:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SL1L0:POWER:NORTH:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):SL1L0:POWER:NORTH:RTD:01:CONN_RBV
      - bi
      - $(SYMBOL).fbSL1L0.RTD_North_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SL1L0:POWER:NORTH:RTD:01:ERR_RBV
      - bi
      - $(SYMBOL).fbSL1L0.RTD_North_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:NORTH:RTD:01:TEMP_RBV
      - ai
      - $(SYMBOL).fbSL1L0.RTD_North_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SL1L0:POWER:NORTH:RTD:02:CONN_RBV
      - bi
      - $(SYMBOL).fbSL1L0.RTD_North_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SL1L0:POWER:NORTH:RTD:02:ERR_RBV
      - bi
      - $(SYMBOL).fbSL1L0.RTD_North_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:NORTH:RTD:02:TEMP_RBV
      - ai
      - $(SYMBOL).fbSL1L0.RTD_North_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SL1L0:POWER:NORTH:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SL1L0:POWER:NORTH:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SL1L0:POWER:NORTH:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):SL1L0:POWER:NORTH:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):SL1L0:POWER:Offset_Top
      - ao
      - $(SYMBOL).fbSL1L0.rEncoderOffsetTop
      - | io: output


    * - $(PREFIX):SL1L0:POWER:Offset_Top_RBV
      - ai
      - $(SYMBOL).fbSL1L0.rEncoderOffsetTop
      - | io: output


    * - $(PREFIX):SL1L0:POWER:OPEN
      - bo
      - $(SYMBOL).fbSL1L0.bOpen
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL1L0:POWER:OPEN_RBV
      - bi
      - $(SYMBOL).fbSL1L0.bOpen
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL1L0:POWER:PMPS_OK_RBV
      - bi
      - $(SYMBOL).fbSL1L0.bMoveOk
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:SOUTH:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbSL1L0.fbSouth.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:SOUTH:BUSY_RBV
      - bi
      - $(SYMBOL).fbSL1L0.fbSouth.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:SOUTH:DMOV_RBV
      - bi
      - $(SYMBOL).fbSL1L0.fbSouth.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:SOUTH:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):SL1L0:POWER:SOUTH:ERR_RBV
      - bi
      - $(SYMBOL).fbSL1L0.fbSouth.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:SOUTH:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbSL1L0.fbSouth.sError
      - | io: input


    * - $(PREFIX):SL1L0:POWER:SOUTH:GO
      - bo
      - $(SYMBOL).fbSL1L0.fbSouth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL1L0:POWER:SOUTH:GO_RBV
      - bi
      - $(SYMBOL).fbSL1L0.fbSouth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL1L0:POWER:SOUTH:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SL1L0:POWER:SOUTH:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):SL1L0:POWER:SOUTH:RTD:01:CONN_RBV
      - bi
      - $(SYMBOL).fbSL1L0.RTD_South_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SL1L0:POWER:SOUTH:RTD:01:ERR_RBV
      - bi
      - $(SYMBOL).fbSL1L0.RTD_South_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:SOUTH:RTD:01:TEMP_RBV
      - ai
      - $(SYMBOL).fbSL1L0.RTD_South_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SL1L0:POWER:SOUTH:RTD:02:CONN_RBV
      - bi
      - $(SYMBOL).fbSL1L0.RTD_South_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SL1L0:POWER:SOUTH:RTD:02:ERR_RBV
      - bi
      - $(SYMBOL).fbSL1L0.RTD_South_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:SOUTH:RTD:02:TEMP_RBV
      - ai
      - $(SYMBOL).fbSL1L0.RTD_South_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SL1L0:POWER:SOUTH:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SL1L0:POWER:SOUTH:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SL1L0:POWER:SOUTH:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):SL1L0:POWER:SOUTH:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):SL1L0:POWER:TOP:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbSL1L0.fbTop.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:TOP:BUSY_RBV
      - bi
      - $(SYMBOL).fbSL1L0.fbTop.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:TOP:DMOV_RBV
      - bi
      - $(SYMBOL).fbSL1L0.fbTop.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:TOP:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):SL1L0:POWER:TOP:ERR_RBV
      - bi
      - $(SYMBOL).fbSL1L0.fbTop.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:TOP:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbSL1L0.fbTop.sError
      - | io: input


    * - $(PREFIX):SL1L0:POWER:TOP:GO
      - bo
      - $(SYMBOL).fbSL1L0.fbTop.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL1L0:POWER:TOP:GO_RBV
      - bi
      - $(SYMBOL).fbSL1L0.fbTop.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL1L0:POWER:TOP:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SL1L0:POWER:TOP:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):SL1L0:POWER:TOP:RTD:01:CONN_RBV
      - bi
      - $(SYMBOL).fbSL1L0.RTD_TOP_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SL1L0:POWER:TOP:RTD:01:ERR_RBV
      - bi
      - $(SYMBOL).fbSL1L0.RTD_TOP_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:TOP:RTD:01:TEMP_RBV
      - ai
      - $(SYMBOL).fbSL1L0.RTD_TOP_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SL1L0:POWER:TOP:RTD:02:CONN_RBV
      - bi
      - $(SYMBOL).fbSL1L0.RTD_TOP_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SL1L0:POWER:TOP:RTD:02:ERR_RBV
      - bi
      - $(SYMBOL).fbSL1L0.RTD_TOP_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL1L0:POWER:TOP:RTD:02:TEMP_RBV
      - ai
      - $(SYMBOL).fbSL1L0.RTD_TOP_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SL1L0:POWER:TOP:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SL1L0:POWER:TOP:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SL1L0:POWER:TOP:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):SL1L0:POWER:TOP:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):SL1L0:POWER:XCEN_REQ
      - ao
      - $(SYMBOL).fbSL1L0.rReqCenterX
      - | io: output


    * - $(PREFIX):SL1L0:POWER:XCEN_REQ_RBV
      - ai
      - $(SYMBOL).fbSL1L0.rReqCenterX
      - | io: output


    * - $(PREFIX):SL1L0:POWER:XCEN_SETZERO
      - bo
      - $(SYMBOL).fbSL1L0.rSetCenterX
      - | io: output


    * - $(PREFIX):SL1L0:POWER:XCEN_SETZERO_RBV
      - bi
      - $(SYMBOL).fbSL1L0.rSetCenterX
      - | io: output


    * - $(PREFIX):SL1L0:POWER:XWID_REQ
      - ao
      - $(SYMBOL).fbSL1L0.rReqApertureSizeX
      - | io: output


    * - $(PREFIX):SL1L0:POWER:XWID_REQ_RBV
      - ai
      - $(SYMBOL).fbSL1L0.rReqApertureSizeX
      - | io: output


    * - $(PREFIX):SL1L0:POWER:YCEN_REQ
      - ao
      - $(SYMBOL).fbSL1L0.rReqCenterY
      - | io: output


    * - $(PREFIX):SL1L0:POWER:YCEN_REQ_RBV
      - ai
      - $(SYMBOL).fbSL1L0.rReqCenterY
      - | io: output


    * - $(PREFIX):SL1L0:POWER:YCEN_SETZERO
      - bo
      - $(SYMBOL).fbSL1L0.rSetCenterY
      - | io: output


    * - $(PREFIX):SL1L0:POWER:YCEN_SETZERO_RBV
      - bi
      - $(SYMBOL).fbSL1L0.rSetCenterY
      - | io: output


    * - $(PREFIX):SL1L0:POWER:YWID_REQ
      - ao
      - $(SYMBOL).fbSL1L0.rReqApertureSizeY
      - | io: output


    * - $(PREFIX):SL1L0:POWER:YWID_REQ_RBV
      - ai
      - $(SYMBOL).fbSL1L0.rReqApertureSizeY
      - | io: output


    * - $(PREFIX):SL1L0:POWER:ZeroOffset_Bottom
      - ao
      - $(SYMBOL).fbSL1L0.rEncoderOffsetBottom
      - | io: output


    * - $(PREFIX):SL1L0:POWER:ZeroOffset_Bottom_RBV
      - ai
      - $(SYMBOL).fbSL1L0.rEncoderOffsetBottom
      - | io: output


    * - $(PREFIX):SL1L0:POWER:ZeroOffset_North
      - ao
      - $(SYMBOL).fbSL1L0.rEncoderOffsetNorth
      - | io: output


    * - $(PREFIX):SL1L0:POWER:ZeroOffset_North_RBV
      - ai
      - $(SYMBOL).fbSL1L0.rEncoderOffsetNorth
      - | io: output


    * - $(PREFIX):SL1L0:POWER:ZeroOffset_South
      - ao
      - $(SYMBOL).fbSL1L0.rEncoderOffsetSouth
      - | io: output


    * - $(PREFIX):SL1L0:POWER:ZeroOffset_South_RBV
      - ai
      - $(SYMBOL).fbSL1L0.rEncoderOffsetSouth
      - | io: output


 
PRG_SL2L0_POWER
^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):SL2L0:POWER:ACTUAL_XCENTER
      - ao
      - $(SYMBOL).fbSL2L0.rActCenterX
      - | io: output


    * - $(PREFIX):SL2L0:POWER:ACTUAL_XCENTER_RBV
      - ai
      - $(SYMBOL).fbSL2L0.rActCenterX
      - | io: output


    * - $(PREFIX):SL2L0:POWER:ACTUAL_XWIDTH
      - ao
      - $(SYMBOL).fbSL2L0.rActApertureSizeX
      - | io: output


    * - $(PREFIX):SL2L0:POWER:ACTUAL_XWIDTH_RBV
      - ai
      - $(SYMBOL).fbSL2L0.rActApertureSizeX
      - | io: output


    * - $(PREFIX):SL2L0:POWER:ACTUAL_YCENTER
      - ao
      - $(SYMBOL).fbSL2L0.rActCenterY
      - | io: output


    * - $(PREFIX):SL2L0:POWER:ACTUAL_YCENTER_RBV
      - ai
      - $(SYMBOL).fbSL2L0.rActCenterY
      - | io: output


    * - $(PREFIX):SL2L0:POWER:ACTUAL_YWIDTH
      - ao
      - $(SYMBOL).fbSL2L0.rActApertureSizeY
      - | io: output


    * - $(PREFIX):SL2L0:POWER:ACTUAL_YWIDTH_RBV
      - ai
      - $(SYMBOL).fbSL2L0.rActApertureSizeY
      - | io: output


    * - $(PREFIX):SL2L0:POWER:BLOCK
      - bo
      - $(SYMBOL).fbSL2L0.bBlock
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL2L0:POWER:BLOCK_RBV
      - bi
      - $(SYMBOL).fbSL2L0.bBlock
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL2L0:POWER:BOTTOM:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbSL2L0.fbBottom.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:BOTTOM:BUSY_RBV
      - bi
      - $(SYMBOL).fbSL2L0.fbBottom.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:BOTTOM:DMOV_RBV
      - bi
      - $(SYMBOL).fbSL2L0.fbBottom.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:BOTTOM:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):SL2L0:POWER:BOTTOM:ERR_RBV
      - bi
      - $(SYMBOL).fbSL2L0.fbBottom.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:BOTTOM:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbSL2L0.fbBottom.sError
      - | io: input


    * - $(PREFIX):SL2L0:POWER:BOTTOM:GO
      - bo
      - $(SYMBOL).fbSL2L0.fbBottom.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL2L0:POWER:BOTTOM:GO_RBV
      - bi
      - $(SYMBOL).fbSL2L0.fbBottom.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL2L0:POWER:BOTTOM:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SL2L0:POWER:BOTTOM:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):SL2L0:POWER:BOTTOM:RTD:01:CONN_RBV
      - bi
      - $(SYMBOL).fbSL2L0.RTD_Bottom_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SL2L0:POWER:BOTTOM:RTD:01:ERR_RBV
      - bi
      - $(SYMBOL).fbSL2L0.RTD_Bottom_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:BOTTOM:RTD:01:TEMP_RBV
      - ai
      - $(SYMBOL).fbSL2L0.RTD_Bottom_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SL2L0:POWER:BOTTOM:RTD:02:CONN_RBV
      - bi
      - $(SYMBOL).fbSL2L0.RTD_Bottom_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SL2L0:POWER:BOTTOM:RTD:02:ERR_RBV
      - bi
      - $(SYMBOL).fbSL2L0.RTD_Bottom_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:BOTTOM:RTD:02:TEMP_RBV
      - ai
      - $(SYMBOL).fbSL2L0.RTD_Bottom_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SL2L0:POWER:BOTTOM:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SL2L0:POWER:BOTTOM:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SL2L0:POWER:BOTTOM:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):SL2L0:POWER:BOTTOM:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):SL2L0:POWER:CLOSE
      - bo
      - $(SYMBOL).fbSL2L0.bClose
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL2L0:POWER:CLOSE_RBV
      - bi
      - $(SYMBOL).fbSL2L0.bClose
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL2L0:POWER:FSW:FLOW_OK
      - bo
      - $(SYMBOL).fbSL2L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):SL2L0:POWER:FSW:FLOW_OK_RBV
      - bi
      - $(SYMBOL).fbSL2L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):SL2L0:POWER:GO
      - bo
      - $(SYMBOL).bExecuteMotion
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL2L0:POWER:GO_RBV
      - bi
      - $(SYMBOL).bExecuteMotion
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL2L0:POWER:NORTH:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbSL2L0.fbNorth.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:NORTH:BUSY_RBV
      - bi
      - $(SYMBOL).fbSL2L0.fbNorth.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:NORTH:DMOV_RBV
      - bi
      - $(SYMBOL).fbSL2L0.fbNorth.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:NORTH:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):SL2L0:POWER:NORTH:ERR_RBV
      - bi
      - $(SYMBOL).fbSL2L0.fbNorth.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:NORTH:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbSL2L0.fbNorth.sError
      - | io: input


    * - $(PREFIX):SL2L0:POWER:NORTH:GO
      - bo
      - $(SYMBOL).fbSL2L0.fbNorth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL2L0:POWER:NORTH:GO_RBV
      - bi
      - $(SYMBOL).fbSL2L0.fbNorth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL2L0:POWER:NORTH:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SL2L0:POWER:NORTH:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):SL2L0:POWER:NORTH:RTD:01:CONN_RBV
      - bi
      - $(SYMBOL).fbSL2L0.RTD_North_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SL2L0:POWER:NORTH:RTD:01:ERR_RBV
      - bi
      - $(SYMBOL).fbSL2L0.RTD_North_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:NORTH:RTD:01:TEMP_RBV
      - ai
      - $(SYMBOL).fbSL2L0.RTD_North_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SL2L0:POWER:NORTH:RTD:02:CONN_RBV
      - bi
      - $(SYMBOL).fbSL2L0.RTD_North_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SL2L0:POWER:NORTH:RTD:02:ERR_RBV
      - bi
      - $(SYMBOL).fbSL2L0.RTD_North_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:NORTH:RTD:02:TEMP_RBV
      - ai
      - $(SYMBOL).fbSL2L0.RTD_North_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SL2L0:POWER:NORTH:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SL2L0:POWER:NORTH:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SL2L0:POWER:NORTH:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):SL2L0:POWER:NORTH:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):SL2L0:POWER:Offset_Top
      - ao
      - $(SYMBOL).fbSL2L0.rEncoderOffsetTop
      - | io: output


    * - $(PREFIX):SL2L0:POWER:Offset_Top_RBV
      - ai
      - $(SYMBOL).fbSL2L0.rEncoderOffsetTop
      - | io: output


    * - $(PREFIX):SL2L0:POWER:OPEN
      - bo
      - $(SYMBOL).fbSL2L0.bOpen
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL2L0:POWER:OPEN_RBV
      - bi
      - $(SYMBOL).fbSL2L0.bOpen
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL2L0:POWER:PMPS_OK_RBV
      - bi
      - $(SYMBOL).fbSL2L0.bMoveOk
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:SOUTH:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbSL2L0.fbSouth.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:SOUTH:BUSY_RBV
      - bi
      - $(SYMBOL).fbSL2L0.fbSouth.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:SOUTH:DMOV_RBV
      - bi
      - $(SYMBOL).fbSL2L0.fbSouth.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:SOUTH:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):SL2L0:POWER:SOUTH:ERR_RBV
      - bi
      - $(SYMBOL).fbSL2L0.fbSouth.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:SOUTH:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbSL2L0.fbSouth.sError
      - | io: input


    * - $(PREFIX):SL2L0:POWER:SOUTH:GO
      - bo
      - $(SYMBOL).fbSL2L0.fbSouth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL2L0:POWER:SOUTH:GO_RBV
      - bi
      - $(SYMBOL).fbSL2L0.fbSouth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL2L0:POWER:SOUTH:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SL2L0:POWER:SOUTH:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):SL2L0:POWER:SOUTH:RTD:01:CONN_RBV
      - bi
      - $(SYMBOL).fbSL2L0.RTD_South_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SL2L0:POWER:SOUTH:RTD:01:ERR_RBV
      - bi
      - $(SYMBOL).fbSL2L0.RTD_South_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:SOUTH:RTD:01:TEMP_RBV
      - ai
      - $(SYMBOL).fbSL2L0.RTD_South_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SL2L0:POWER:SOUTH:RTD:02:CONN_RBV
      - bi
      - $(SYMBOL).fbSL2L0.RTD_South_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SL2L0:POWER:SOUTH:RTD:02:ERR_RBV
      - bi
      - $(SYMBOL).fbSL2L0.RTD_South_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:SOUTH:RTD:02:TEMP_RBV
      - ai
      - $(SYMBOL).fbSL2L0.RTD_South_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SL2L0:POWER:SOUTH:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SL2L0:POWER:SOUTH:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SL2L0:POWER:SOUTH:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):SL2L0:POWER:SOUTH:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):SL2L0:POWER:TOP:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbSL2L0.fbTop.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:TOP:BUSY_RBV
      - bi
      - $(SYMBOL).fbSL2L0.fbTop.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:TOP:DMOV_RBV
      - bi
      - $(SYMBOL).fbSL2L0.fbTop.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:TOP:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):SL2L0:POWER:TOP:ERR_RBV
      - bi
      - $(SYMBOL).fbSL2L0.fbTop.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:TOP:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbSL2L0.fbTop.sError
      - | io: input


    * - $(PREFIX):SL2L0:POWER:TOP:GO
      - bo
      - $(SYMBOL).fbSL2L0.fbTop.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL2L0:POWER:TOP:GO_RBV
      - bi
      - $(SYMBOL).fbSL2L0.fbTop.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SL2L0:POWER:TOP:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SL2L0:POWER:TOP:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):SL2L0:POWER:TOP:RTD:01:CONN_RBV
      - bi
      - $(SYMBOL).fbSL2L0.RTD_TOP_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SL2L0:POWER:TOP:RTD:01:ERR_RBV
      - bi
      - $(SYMBOL).fbSL2L0.RTD_TOP_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:TOP:RTD:01:TEMP_RBV
      - ai
      - $(SYMBOL).fbSL2L0.RTD_TOP_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SL2L0:POWER:TOP:RTD:02:CONN_RBV
      - bi
      - $(SYMBOL).fbSL2L0.RTD_TOP_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SL2L0:POWER:TOP:RTD:02:ERR_RBV
      - bi
      - $(SYMBOL).fbSL2L0.RTD_TOP_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SL2L0:POWER:TOP:RTD:02:TEMP_RBV
      - ai
      - $(SYMBOL).fbSL2L0.RTD_TOP_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SL2L0:POWER:TOP:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SL2L0:POWER:TOP:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SL2L0:POWER:TOP:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):SL2L0:POWER:TOP:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):SL2L0:POWER:XCEN_REQ
      - ao
      - $(SYMBOL).fbSL2L0.rReqCenterX
      - | io: output


    * - $(PREFIX):SL2L0:POWER:XCEN_REQ_RBV
      - ai
      - $(SYMBOL).fbSL2L0.rReqCenterX
      - | io: output


    * - $(PREFIX):SL2L0:POWER:XCEN_SETZERO
      - bo
      - $(SYMBOL).fbSL2L0.rSetCenterX
      - | io: output


    * - $(PREFIX):SL2L0:POWER:XCEN_SETZERO_RBV
      - bi
      - $(SYMBOL).fbSL2L0.rSetCenterX
      - | io: output


    * - $(PREFIX):SL2L0:POWER:XWID_REQ
      - ao
      - $(SYMBOL).fbSL2L0.rReqApertureSizeX
      - | io: output


    * - $(PREFIX):SL2L0:POWER:XWID_REQ_RBV
      - ai
      - $(SYMBOL).fbSL2L0.rReqApertureSizeX
      - | io: output


    * - $(PREFIX):SL2L0:POWER:YCEN_REQ
      - ao
      - $(SYMBOL).fbSL2L0.rReqCenterY
      - | io: output


    * - $(PREFIX):SL2L0:POWER:YCEN_REQ_RBV
      - ai
      - $(SYMBOL).fbSL2L0.rReqCenterY
      - | io: output


    * - $(PREFIX):SL2L0:POWER:YCEN_SETZERO
      - bo
      - $(SYMBOL).fbSL2L0.rSetCenterY
      - | io: output


    * - $(PREFIX):SL2L0:POWER:YCEN_SETZERO_RBV
      - bi
      - $(SYMBOL).fbSL2L0.rSetCenterY
      - | io: output


    * - $(PREFIX):SL2L0:POWER:YWID_REQ
      - ao
      - $(SYMBOL).fbSL2L0.rReqApertureSizeY
      - | io: output


    * - $(PREFIX):SL2L0:POWER:YWID_REQ_RBV
      - ai
      - $(SYMBOL).fbSL2L0.rReqApertureSizeY
      - | io: output


    * - $(PREFIX):SL2L0:POWER:ZeroOffset_Bottom
      - ao
      - $(SYMBOL).fbSL2L0.rEncoderOffsetBottom
      - | io: output


    * - $(PREFIX):SL2L0:POWER:ZeroOffset_Bottom_RBV
      - ai
      - $(SYMBOL).fbSL2L0.rEncoderOffsetBottom
      - | io: output


    * - $(PREFIX):SL2L0:POWER:ZeroOffset_North
      - ao
      - $(SYMBOL).fbSL2L0.rEncoderOffsetNorth
      - | io: output


    * - $(PREFIX):SL2L0:POWER:ZeroOffset_North_RBV
      - ai
      - $(SYMBOL).fbSL2L0.rEncoderOffsetNorth
      - | io: output


    * - $(PREFIX):SL2L0:POWER:ZeroOffset_South
      - ao
      - $(SYMBOL).fbSL2L0.rEncoderOffsetSouth
      - | io: output


    * - $(PREFIX):SL2L0:POWER:ZeroOffset_South_RBV
      - ai
      - $(SYMBOL).fbSL2L0.rEncoderOffsetSouth
      - | io: output


 
RTDSL0
^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):RTDSL0:MPA:01:ERROR
      - bo
      - $(SYMBOL).RTDSL0_MPA_01.q_stAct.bErrorPresent
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:01:ERROR_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_01.q_stAct.bErrorPresent
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:01:FF_Reset
      - bo
      - $(SYMBOL).RTDSL0_MPA_01.i_xReset
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:01:FF_Reset_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_01.i_xReset
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:01:ILKOK_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_01.q_stAct.bILK_OK
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:01:IN_CMD
      - bo
      - $(SYMBOL).RTDSL0_MPA_01.q_stAct.bInsert_SW
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:01:IN_CMD_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_01.q_stAct.bInsert_SW
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:01:IN_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_01.q_stAct.i_bInLS
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:01:INSERT_DO_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_01.q_stAct.q_bRetract
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:01:INSERT_OK_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_01.q_stAct.bInsertOK
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:01:MOT_DONE
      - bo
      - $(SYMBOL).RTDSL0_MPA_01.xDone
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:01:MOT_DONE_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_01.xDone
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:01:MPS_FAULT
      - bo
      - $(SYMBOL).RTDSL0_MPA_01.xMPS_OK
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:01:MPS_FAULT_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_01.xMPS_OK
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:01:OUT_CMD
      - bo
      - $(SYMBOL).RTDSL0_MPA_01.q_stAct.bRetract_SW
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:01:OUT_CMD_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_01.q_stAct.bRetract_SW
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:01:OUT_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_01.q_stAct.i_bOutLS
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:01:POS_STATE_RBV
      - mbbi
      - $(SYMBOL).RTDSL0_MPA_01.q_stAct.eState
      - | field: ONST INSERTED
        | field: THST INVALID
        | field: TWST MOVING
        | field: ZRST RETRACTED
        | io: input
        | type: mbbi


    * - $(PREFIX):RTDSL0:MPA:01:RETRACT_DO_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_01.q_stAct.q_bInsert
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:01:RETRACT_OK_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_01.q_stAct.bRetractOK
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:02:ERROR
      - bo
      - $(SYMBOL).RTDSL0_MPA_02.q_stAct.bErrorPresent
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:02:ERROR_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_02.q_stAct.bErrorPresent
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:02:FF_Reset
      - bo
      - $(SYMBOL).RTDSL0_MPA_02.i_xReset
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:02:FF_Reset_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_02.i_xReset
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:02:ILKOK_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_02.q_stAct.bILK_OK
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:02:IN_CMD
      - bo
      - $(SYMBOL).RTDSL0_MPA_02.q_stAct.bInsert_SW
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:02:IN_CMD_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_02.q_stAct.bInsert_SW
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:02:IN_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_02.q_stAct.i_bInLS
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:02:INSERT_DO_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_02.q_stAct.q_bRetract
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:02:INSERT_OK_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_02.q_stAct.bInsertOK
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:02:MOT_DONE
      - bo
      - $(SYMBOL).RTDSL0_MPA_02.xDone
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:02:MOT_DONE_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_02.xDone
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:02:MPS_FAULT
      - bo
      - $(SYMBOL).RTDSL0_MPA_02.xMPS_OK
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:02:MPS_FAULT_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_02.xMPS_OK
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:02:OUT_CMD
      - bo
      - $(SYMBOL).RTDSL0_MPA_02.q_stAct.bRetract_SW
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:02:OUT_CMD_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_02.q_stAct.bRetract_SW
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:02:OUT_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_02.q_stAct.i_bOutLS
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:02:POS_STATE_RBV
      - mbbi
      - $(SYMBOL).RTDSL0_MPA_02.q_stAct.eState
      - | field: ONST INSERTED
        | field: THST INVALID
        | field: TWST MOVING
        | field: ZRST RETRACTED
        | io: input
        | type: mbbi


    * - $(PREFIX):RTDSL0:MPA:02:RETRACT_DO_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_02.q_stAct.q_bInsert
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:02:RETRACT_OK_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_02.q_stAct.bRetractOK
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:03:ERROR
      - bo
      - $(SYMBOL).RTDSL0_MPA_03.q_stAct.bErrorPresent
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:03:ERROR_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_03.q_stAct.bErrorPresent
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:03:FF_Reset
      - bo
      - $(SYMBOL).RTDSL0_MPA_03.i_xReset
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:03:FF_Reset_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_03.i_xReset
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:03:ILKOK_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_03.q_stAct.bILK_OK
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:03:IN_CMD
      - bo
      - $(SYMBOL).RTDSL0_MPA_03.q_stAct.bInsert_SW
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:03:IN_CMD_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_03.q_stAct.bInsert_SW
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:03:IN_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_03.q_stAct.i_bInLS
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:03:INSERT_DO_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_03.q_stAct.q_bRetract
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:03:INSERT_OK_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_03.q_stAct.bInsertOK
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:03:MOT_DONE
      - bo
      - $(SYMBOL).RTDSL0_MPA_03.xDone
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:03:MOT_DONE_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_03.xDone
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:03:MPS_FAULT
      - bo
      - $(SYMBOL).RTDSL0_MPA_03.xMPS_OK
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:03:MPS_FAULT_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_03.xMPS_OK
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:03:OUT_CMD
      - bo
      - $(SYMBOL).RTDSL0_MPA_03.q_stAct.bRetract_SW
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:03:OUT_CMD_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_03.q_stAct.bRetract_SW
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:03:OUT_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_03.q_stAct.i_bOutLS
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:03:POS_STATE_RBV
      - mbbi
      - $(SYMBOL).RTDSL0_MPA_03.q_stAct.eState
      - | field: ONST INSERTED
        | field: THST INVALID
        | field: TWST MOVING
        | field: ZRST RETRACTED
        | io: input
        | type: mbbi


    * - $(PREFIX):RTDSL0:MPA:03:RETRACT_DO_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_03.q_stAct.q_bInsert
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:03:RETRACT_OK_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_03.q_stAct.bRetractOK
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:04:ERROR
      - bo
      - $(SYMBOL).RTDSL0_MPA_04.q_stAct.bErrorPresent
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:04:ERROR_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_04.q_stAct.bErrorPresent
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:04:FF_Reset
      - bo
      - $(SYMBOL).RTDSL0_MPA_04.i_xReset
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:04:FF_Reset_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_04.i_xReset
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:04:ILKOK_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_04.q_stAct.bILK_OK
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:04:IN_CMD
      - bo
      - $(SYMBOL).RTDSL0_MPA_04.q_stAct.bInsert_SW
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:04:IN_CMD_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_04.q_stAct.bInsert_SW
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:04:IN_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_04.q_stAct.i_bInLS
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:04:INSERT_DO_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_04.q_stAct.q_bRetract
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:04:INSERT_OK_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_04.q_stAct.bInsertOK
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:04:MOT_DONE
      - bo
      - $(SYMBOL).RTDSL0_MPA_04.xDone
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:04:MOT_DONE_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_04.xDone
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:04:MPS_FAULT
      - bo
      - $(SYMBOL).RTDSL0_MPA_04.xMPS_OK
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:04:MPS_FAULT_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_04.xMPS_OK
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:04:OUT_CMD
      - bo
      - $(SYMBOL).RTDSL0_MPA_04.q_stAct.bRetract_SW
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:04:OUT_CMD_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_04.q_stAct.bRetract_SW
      - | io: output


    * - $(PREFIX):RTDSL0:MPA:04:OUT_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_04.q_stAct.i_bOutLS
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:04:POS_STATE_RBV
      - mbbi
      - $(SYMBOL).RTDSL0_MPA_04.q_stAct.eState
      - | field: ONST INSERTED
        | field: THST INVALID
        | field: TWST MOVING
        | field: ZRST RETRACTED
        | io: input
        | type: mbbi


    * - $(PREFIX):RTDSL0:MPA:04:RETRACT_DO_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_04.q_stAct.q_bInsert
      - | io: input


    * - $(PREFIX):RTDSL0:MPA:04:RETRACT_OK_RBV
      - bi
      - $(SYMBOL).RTDSL0_MPA_04.q_stAct.bRetractOK
      - | io: input


 
ST_BeamParams_IO
^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Attenuation_RBV
      - ai
      - $(SYMBOL).nTran
      - | io: input


    * - $(PREFIX):Attenuation_RBV
      - longin
      - $(SYMBOL).nCohortInt
      - | io: input


    * - $(PREFIX):AuxAttenuator_RBV
      - waveform
      - $(SYMBOL).aVetoDevices
      - | io: input


    * - $(PREFIX):PhotonEnergy_RBV
      - longin
      - $(SYMBOL).neVRange
      - | io: input


    * - $(PREFIX):Rate_RBV
      - longin
      - $(SYMBOL).nRate
      - | io: input


    * - $(PREFIX):Valid_RBV
      - bi
      - $(SYMBOL).xValid
      - | io: input


   
ST_LoggingEventInfo
^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):Message_RBV
      - waveform
      - $(SYMBOL).msg
      - | io: input


    * - $(PREFIX):MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):Source_RBV
      - waveform
      - $(SYMBOL).source
      - | io: input


    * - $(PREFIX):Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


 
ST_MPA
^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ERROR
      - bo
      - $(SYMBOL).bErrorPresent
      - | io: output


    * - $(PREFIX):ERROR_RBV
      - bi
      - $(SYMBOL).bErrorPresent
      - | io: output


    * - $(PREFIX):ILKOK_RBV
      - bi
      - $(SYMBOL).bILK_OK
      - | io: input


    * - $(PREFIX):IN_CMD
      - bo
      - $(SYMBOL).bInsert_SW
      - | io: output


    * - $(PREFIX):IN_CMD_RBV
      - bi
      - $(SYMBOL).bInsert_SW
      - | io: output


    * - $(PREFIX):IN_RBV
      - bi
      - $(SYMBOL).i_bInLS
      - | io: input


    * - $(PREFIX):INSERT_DO_RBV
      - bi
      - $(SYMBOL).q_bRetract
      - | io: input


    * - $(PREFIX):INSERT_OK_RBV
      - bi
      - $(SYMBOL).bInsertOK
      - | io: input


    * - $(PREFIX):OUT_CMD
      - bo
      - $(SYMBOL).bRetract_SW
      - | io: output


    * - $(PREFIX):OUT_CMD_RBV
      - bi
      - $(SYMBOL).bRetract_SW
      - | io: output


    * - $(PREFIX):OUT_RBV
      - bi
      - $(SYMBOL).i_bOutLS
      - | io: input


    * - $(PREFIX):POS_STATE_RBV
      - mbbi
      - $(SYMBOL).eState
      - | field: ONST INSERTED
        | field: THST INVALID
        | field: TWST MOVING
        | field: ZRST RETRACTED
        | io: input
        | type: mbbi


    * - $(PREFIX):RETRACT_DO_RBV
      - bi
      - $(SYMBOL).q_bInsert
      - | io: input


    * - $(PREFIX):RETRACT_OK_RBV
      - bi
      - $(SYMBOL).bRetractOK
      - | io: input


 
ST_PMPS_Aperture_IO
^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Height_RBV
      - ai
      - $(SYMBOL).Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):OK_RBV
      - bi
      - $(SYMBOL).xOK
      - | io: input


    * - $(PREFIX):Width_RBV
      - ai
      - $(SYMBOL).Width
      - | field: EGU mm
        | io: input


                                                                                                         
Database Records
----------------

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:010:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:011:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:012:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:013:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:014:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:015:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:016:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:017:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:018:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:019:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:001:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:020:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:002:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:003:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:004:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:005:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:006:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:007:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:008:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:AP:Entry:009:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:CohortCounter_RBV
      - longin
      - Intrnl cohort counter
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbiterID_RBV
      - longin
      - Arbiter ID for elev. req.
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:Veto_RBV
      - waveform
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:01:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:01:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:01:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:02:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:02:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:02:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:03:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:03:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:03:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:04:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:04:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:Apt:04:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:BeamClassRanges_RBV
      - longin
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:BeamClass_RBV
      - longin
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:MachineMode_RBV
      - longin
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:Rate_RBV
      - longin
      - Arbitrated BP
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:Transmission_RBV
      - ai
      - Arbitrated BP
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:PhotonEnergy_RBV
      - ai
      - Arbitrated BP
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:eVRanges_RBV
      - longin
      - Arbitrated BP
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:01:ArbitratedBP:Valid_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:010:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:011:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:012:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:013:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:014:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:015:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:016:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:017:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:018:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:019:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:001:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:020:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:002:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:003:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:004:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:005:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:006:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:007:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:008:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:AP:Entry:009:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:CohortCounter_RBV
      - longin
      - Intrnl cohort counter
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbiterID_RBV
      - longin
      - Arbiter ID for elev. req.
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:Veto_RBV
      - waveform
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:01:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:01:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:01:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:02:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:02:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:02:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:03:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:03:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:03:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:04:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:04:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:Apt:04:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:BeamClassRanges_RBV
      - longin
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:BeamClass_RBV
      - longin
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:MachineMode_RBV
      - longin
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:Rate_RBV
      - longin
      - Arbitrated BP
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:Transmission_RBV
      - ai
      - Arbitrated BP
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:PhotonEnergy_RBV
      - ai
      - Arbitrated BP
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:eVRanges_RBV
      - longin
      - Arbitrated BP
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:02:ArbitratedBP:Valid_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0100:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[100].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0100:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[100].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0100:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[100].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0100:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[100].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0100:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[100].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0100:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[100].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0100:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[100].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0100:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[100].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0100:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[100].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0100:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[100].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0100:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[100].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0010:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[10].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0010:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[10].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0010:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[10].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0010:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[10].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0010:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[10].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0010:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[10].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0010:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[10].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0010:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[10].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0010:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0010:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[10].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0010:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[10].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0011:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[11].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0011:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[11].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0011:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[11].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0011:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[11].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0011:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[11].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0011:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[11].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0011:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[11].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0011:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[11].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0011:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0011:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[11].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0011:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[11].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0012:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[12].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0012:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[12].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0012:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[12].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0012:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[12].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0012:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[12].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0012:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[12].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0012:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[12].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0012:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[12].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0012:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0012:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[12].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0012:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[12].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0013:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[13].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0013:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[13].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0013:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[13].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0013:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[13].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0013:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[13].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0013:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[13].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0013:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[13].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0013:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[13].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0013:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0013:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[13].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0013:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[13].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0014:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[14].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0014:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[14].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0014:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[14].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0014:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[14].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0014:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[14].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0014:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[14].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0014:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[14].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0014:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[14].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0014:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0014:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[14].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0014:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[14].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0015:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[15].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0015:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[15].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0015:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[15].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0015:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[15].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0015:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[15].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0015:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[15].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0015:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[15].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0015:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[15].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0015:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0015:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[15].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0015:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[15].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0016:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[16].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0016:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[16].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0016:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[16].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0016:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[16].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0016:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[16].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0016:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[16].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0016:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[16].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0016:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[16].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0016:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0016:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[16].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0016:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[16].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0017:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[17].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0017:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[17].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0017:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[17].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0017:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[17].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0017:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[17].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0017:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[17].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0017:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[17].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0017:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[17].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0017:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0017:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[17].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0017:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[17].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0018:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[18].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0018:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[18].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0018:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[18].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0018:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[18].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0018:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[18].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0018:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[18].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0018:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[18].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0018:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[18].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0018:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0018:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[18].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0018:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[18].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0019:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[19].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0019:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[19].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0019:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[19].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0019:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[19].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0019:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[19].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0019:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[19].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0019:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[19].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0019:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[19].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0019:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0019:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[19].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0019:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[19].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0001:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[1].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0001:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[1].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0001:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[1].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0001:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[1].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0001:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[1].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0001:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[1].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0001:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[1].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0001:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[1].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0001:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0001:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[1].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0001:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[1].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0020:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[20].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0020:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[20].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0020:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[20].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0020:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[20].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0020:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[20].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0020:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[20].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0020:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[20].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0020:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[20].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0020:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0020:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[20].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0020:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[20].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0021:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[21].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0021:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[21].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0021:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[21].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0021:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[21].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0021:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[21].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0021:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[21].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0021:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[21].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0021:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[21].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0021:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0021:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[21].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0021:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[21].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0022:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[22].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0022:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[22].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0022:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[22].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0022:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[22].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0022:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[22].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0022:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[22].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0022:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[22].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0022:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[22].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0022:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0022:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[22].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0022:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[22].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0023:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[23].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0023:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[23].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0023:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[23].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0023:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[23].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0023:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[23].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0023:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[23].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0023:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[23].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0023:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[23].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0023:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0023:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[23].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0023:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[23].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0024:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[24].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0024:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[24].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0024:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[24].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0024:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[24].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0024:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[24].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0024:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[24].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0024:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[24].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0024:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[24].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0024:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0024:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[24].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0024:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[24].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0025:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[25].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0025:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[25].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0025:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[25].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0025:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[25].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0025:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[25].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0025:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[25].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0025:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[25].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0025:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[25].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0025:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0025:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[25].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0025:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[25].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0026:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[26].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0026:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[26].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0026:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[26].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0026:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[26].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0026:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[26].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0026:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[26].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0026:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[26].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0026:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[26].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0026:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0026:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[26].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0026:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[26].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0027:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[27].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0027:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[27].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0027:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[27].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0027:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[27].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0027:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[27].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0027:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[27].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0027:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[27].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0027:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[27].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0027:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0027:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[27].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0027:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[27].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0028:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[28].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0028:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[28].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0028:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[28].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0028:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[28].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0028:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[28].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0028:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[28].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0028:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[28].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0028:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[28].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0028:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0028:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[28].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0028:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[28].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0029:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[29].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0029:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[29].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0029:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[29].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0029:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[29].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0029:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[29].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0029:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[29].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0029:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[29].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0029:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[29].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0029:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0029:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[29].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0029:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[29].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0002:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[2].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0002:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[2].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0002:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[2].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0002:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[2].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0002:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[2].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0002:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[2].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0002:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[2].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0002:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[2].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0002:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0002:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[2].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0002:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[2].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0030:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[30].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0030:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[30].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0030:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[30].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0030:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[30].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0030:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[30].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0030:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[30].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0030:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[30].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0030:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[30].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0030:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0030:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[30].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0030:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[30].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0031:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[31].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0031:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[31].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0031:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[31].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0031:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[31].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0031:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[31].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0031:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[31].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0031:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[31].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0031:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[31].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0031:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0031:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[31].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0031:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[31].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0032:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[32].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0032:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[32].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0032:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[32].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0032:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[32].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0032:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[32].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0032:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[32].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0032:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[32].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0032:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[32].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0032:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0032:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[32].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0032:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[32].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0033:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[33].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0033:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[33].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0033:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[33].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0033:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[33].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0033:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[33].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0033:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[33].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0033:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[33].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0033:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[33].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0033:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0033:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[33].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0033:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[33].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0034:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[34].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0034:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[34].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0034:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[34].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0034:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[34].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0034:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[34].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0034:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[34].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0034:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[34].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0034:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[34].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0034:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0034:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[34].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0034:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[34].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0035:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[35].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0035:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[35].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0035:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[35].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0035:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[35].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0035:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[35].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0035:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[35].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0035:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[35].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0035:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[35].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0035:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0035:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[35].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0035:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[35].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0036:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[36].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0036:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[36].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0036:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[36].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0036:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[36].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0036:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[36].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0036:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[36].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0036:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[36].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0036:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[36].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0036:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0036:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[36].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0036:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[36].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0037:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[37].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0037:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[37].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0037:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[37].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0037:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[37].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0037:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[37].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0037:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[37].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0037:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[37].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0037:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[37].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0037:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0037:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[37].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0037:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[37].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0038:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[38].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0038:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[38].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0038:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[38].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0038:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[38].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0038:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[38].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0038:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[38].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0038:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[38].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0038:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[38].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0038:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0038:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[38].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0038:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[38].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0039:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[39].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0039:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[39].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0039:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[39].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0039:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[39].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0039:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[39].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0039:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[39].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0039:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[39].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0039:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[39].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0039:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0039:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[39].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0039:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[39].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0003:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[3].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0003:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[3].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0003:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[3].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0003:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[3].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0003:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[3].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0003:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[3].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0003:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[3].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0003:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[3].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0003:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0003:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[3].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0003:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[3].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0040:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[40].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0040:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[40].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0040:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[40].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0040:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[40].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0040:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[40].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0040:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[40].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0040:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[40].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0040:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[40].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0040:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0040:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[40].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0040:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[40].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0041:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[41].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0041:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[41].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0041:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[41].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0041:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[41].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0041:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[41].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0041:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[41].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0041:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[41].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0041:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[41].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0041:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0041:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[41].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0041:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[41].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0042:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[42].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0042:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[42].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0042:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[42].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0042:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[42].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0042:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[42].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0042:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[42].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0042:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[42].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0042:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[42].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0042:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0042:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[42].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0042:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[42].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0043:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[43].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0043:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[43].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0043:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[43].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0043:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[43].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0043:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[43].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0043:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[43].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0043:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[43].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0043:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[43].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0043:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0043:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[43].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0043:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[43].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0044:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[44].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0044:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[44].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0044:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[44].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0044:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[44].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0044:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[44].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0044:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[44].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0044:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[44].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0044:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[44].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0044:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0044:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[44].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0044:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[44].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0045:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[45].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0045:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[45].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0045:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[45].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0045:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[45].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0045:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[45].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0045:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[45].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0045:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[45].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0045:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[45].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0045:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0045:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[45].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0045:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[45].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0046:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[46].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0046:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[46].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0046:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[46].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0046:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[46].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0046:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[46].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0046:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[46].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0046:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[46].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0046:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[46].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0046:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0046:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[46].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0046:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[46].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0047:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[47].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0047:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[47].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0047:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[47].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0047:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[47].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0047:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[47].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0047:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[47].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0047:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[47].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0047:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[47].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0047:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0047:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[47].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0047:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[47].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0048:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[48].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0048:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[48].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0048:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[48].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0048:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[48].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0048:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[48].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0048:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[48].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0048:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[48].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0048:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[48].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0048:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0048:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[48].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0048:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[48].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0049:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[49].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0049:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[49].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0049:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[49].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0049:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[49].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0049:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[49].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0049:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[49].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0049:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[49].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0049:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[49].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0049:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0049:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[49].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0049:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[49].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0004:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[4].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0004:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[4].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0004:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[4].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0004:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[4].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0004:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[4].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0004:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[4].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0004:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[4].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0004:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[4].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0004:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0004:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[4].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0004:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[4].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0050:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[50].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0050:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[50].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0050:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[50].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0050:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[50].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0050:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[50].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0050:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[50].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0050:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[50].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0050:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[50].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0050:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0050:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[50].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0050:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[50].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0051:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[51].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0051:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[51].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0051:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[51].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0051:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[51].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0051:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[51].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0051:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[51].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0051:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[51].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0051:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[51].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0051:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[51].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0051:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[51].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0051:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[51].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0052:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[52].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0052:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[52].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0052:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[52].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0052:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[52].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0052:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[52].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0052:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[52].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0052:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[52].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0052:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[52].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0052:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[52].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0052:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[52].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0052:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[52].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0053:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[53].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0053:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[53].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0053:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[53].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0053:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[53].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0053:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[53].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0053:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[53].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0053:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[53].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0053:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[53].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0053:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[53].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0053:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[53].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0053:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[53].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0054:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[54].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0054:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[54].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0054:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[54].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0054:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[54].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0054:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[54].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0054:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[54].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0054:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[54].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0054:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[54].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0054:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[54].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0054:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[54].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0054:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[54].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0055:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[55].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0055:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[55].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0055:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[55].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0055:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[55].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0055:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[55].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0055:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[55].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0055:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[55].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0055:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[55].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0055:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[55].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0055:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[55].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0055:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[55].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0056:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[56].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0056:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[56].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0056:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[56].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0056:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[56].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0056:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[56].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0056:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[56].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0056:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[56].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0056:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[56].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0056:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[56].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0056:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[56].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0056:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[56].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0057:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[57].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0057:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[57].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0057:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[57].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0057:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[57].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0057:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[57].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0057:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[57].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0057:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[57].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0057:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[57].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0057:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[57].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0057:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[57].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0057:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[57].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0058:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[58].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0058:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[58].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0058:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[58].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0058:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[58].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0058:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[58].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0058:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[58].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0058:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[58].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0058:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[58].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0058:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[58].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0058:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[58].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0058:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[58].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0059:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[59].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0059:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[59].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0059:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[59].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0059:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[59].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0059:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[59].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0059:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[59].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0059:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[59].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0059:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[59].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0059:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[59].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0059:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[59].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0059:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[59].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0005:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[5].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0005:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[5].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0005:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[5].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0005:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[5].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0005:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[5].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0005:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[5].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0005:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[5].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0005:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[5].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0005:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0005:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[5].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0005:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[5].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0060:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[60].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0060:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[60].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0060:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[60].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0060:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[60].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0060:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[60].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0060:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[60].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0060:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[60].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0060:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[60].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0060:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[60].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0060:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[60].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0060:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[60].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0061:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[61].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0061:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[61].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0061:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[61].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0061:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[61].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0061:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[61].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0061:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[61].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0061:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[61].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0061:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[61].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0061:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[61].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0061:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[61].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0061:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[61].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0062:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[62].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0062:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[62].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0062:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[62].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0062:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[62].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0062:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[62].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0062:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[62].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0062:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[62].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0062:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[62].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0062:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[62].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0062:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[62].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0062:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[62].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0063:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[63].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0063:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[63].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0063:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[63].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0063:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[63].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0063:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[63].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0063:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[63].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0063:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[63].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0063:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[63].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0063:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[63].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0063:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[63].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0063:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[63].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0064:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[64].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0064:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[64].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0064:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[64].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0064:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[64].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0064:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[64].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0064:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[64].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0064:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[64].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0064:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[64].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0064:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[64].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0064:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[64].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0064:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[64].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0065:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[65].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0065:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[65].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0065:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[65].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0065:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[65].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0065:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[65].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0065:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[65].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0065:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[65].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0065:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[65].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0065:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[65].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0065:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[65].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0065:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[65].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0066:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[66].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0066:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[66].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0066:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[66].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0066:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[66].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0066:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[66].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0066:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[66].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0066:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[66].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0066:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[66].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0066:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[66].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0066:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[66].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0066:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[66].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0067:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[67].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0067:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[67].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0067:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[67].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0067:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[67].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0067:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[67].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0067:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[67].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0067:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[67].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0067:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[67].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0067:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[67].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0067:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[67].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0067:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[67].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0068:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[68].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0068:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[68].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0068:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[68].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0068:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[68].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0068:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[68].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0068:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[68].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0068:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[68].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0068:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[68].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0068:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[68].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0068:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[68].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0068:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[68].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0069:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[69].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0069:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[69].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0069:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[69].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0069:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[69].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0069:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[69].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0069:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[69].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0069:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[69].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0069:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[69].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0069:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[69].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0069:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[69].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0069:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[69].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0006:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[6].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0006:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[6].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0006:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[6].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0006:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[6].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0006:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[6].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0006:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[6].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0006:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[6].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0006:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[6].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0006:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0006:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[6].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0006:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[6].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0070:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[70].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0070:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[70].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0070:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[70].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0070:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[70].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0070:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[70].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0070:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[70].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0070:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[70].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0070:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[70].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0070:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[70].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0070:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[70].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0070:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[70].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0071:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[71].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0071:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[71].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0071:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[71].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0071:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[71].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0071:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[71].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0071:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[71].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0071:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[71].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0071:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[71].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0071:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[71].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0071:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[71].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0071:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[71].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0072:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[72].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0072:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[72].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0072:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[72].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0072:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[72].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0072:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[72].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0072:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[72].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0072:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[72].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0072:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[72].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0072:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[72].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0072:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[72].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0072:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[72].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0073:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[73].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0073:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[73].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0073:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[73].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0073:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[73].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0073:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[73].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0073:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[73].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0073:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[73].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0073:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[73].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0073:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[73].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0073:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[73].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0073:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[73].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0074:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[74].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0074:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[74].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0074:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[74].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0074:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[74].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0074:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[74].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0074:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[74].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0074:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[74].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0074:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[74].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0074:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[74].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0074:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[74].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0074:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[74].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0075:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[75].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0075:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[75].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0075:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[75].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0075:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[75].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0075:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[75].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0075:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[75].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0075:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[75].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0075:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[75].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0075:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[75].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0075:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[75].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0075:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[75].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0076:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[76].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0076:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[76].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0076:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[76].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0076:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[76].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0076:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[76].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0076:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[76].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0076:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[76].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0076:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[76].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0076:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[76].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0076:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[76].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0076:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[76].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0077:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[77].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0077:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[77].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0077:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[77].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0077:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[77].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0077:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[77].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0077:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[77].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0077:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[77].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0077:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[77].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0077:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[77].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0077:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[77].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0077:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[77].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0078:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[78].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0078:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[78].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0078:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[78].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0078:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[78].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0078:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[78].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0078:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[78].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0078:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[78].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0078:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[78].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0078:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[78].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0078:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[78].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0078:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[78].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0079:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[79].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0079:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[79].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0079:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[79].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0079:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[79].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0079:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[79].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0079:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[79].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0079:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[79].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0079:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[79].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0079:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[79].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0079:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[79].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0079:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[79].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0007:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[7].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0007:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[7].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0007:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[7].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0007:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[7].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0007:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[7].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0007:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[7].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0007:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[7].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0007:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[7].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0007:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0007:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[7].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0007:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[7].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0080:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[80].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0080:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[80].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0080:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[80].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0080:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[80].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0080:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[80].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0080:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[80].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0080:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[80].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0080:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[80].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0080:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[80].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0080:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[80].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0080:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[80].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0081:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[81].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0081:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[81].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0081:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[81].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0081:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[81].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0081:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[81].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0081:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[81].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0081:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[81].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0081:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[81].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0081:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[81].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0081:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[81].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0081:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[81].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0082:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[82].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0082:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[82].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0082:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[82].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0082:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[82].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0082:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[82].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0082:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[82].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0082:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[82].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0082:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[82].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0082:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[82].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0082:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[82].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0082:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[82].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0083:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[83].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0083:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[83].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0083:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[83].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0083:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[83].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0083:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[83].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0083:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[83].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0083:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[83].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0083:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[83].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0083:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[83].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0083:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[83].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0083:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[83].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0084:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[84].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0084:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[84].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0084:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[84].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0084:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[84].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0084:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[84].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0084:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[84].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0084:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[84].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0084:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[84].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0084:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[84].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0084:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[84].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0084:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[84].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0085:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[85].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0085:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[85].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0085:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[85].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0085:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[85].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0085:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[85].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0085:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[85].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0085:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[85].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0085:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[85].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0085:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[85].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0085:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[85].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0085:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[85].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0086:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[86].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0086:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[86].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0086:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[86].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0086:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[86].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0086:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[86].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0086:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[86].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0086:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[86].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0086:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[86].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0086:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[86].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0086:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[86].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0086:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[86].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0087:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[87].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0087:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[87].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0087:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[87].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0087:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[87].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0087:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[87].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0087:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[87].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0087:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[87].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0087:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[87].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0087:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[87].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0087:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[87].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0087:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[87].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0088:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[88].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0088:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[88].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0088:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[88].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0088:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[88].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0088:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[88].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0088:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[88].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0088:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[88].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0088:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[88].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0088:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[88].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0088:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[88].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0088:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[88].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0089:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[89].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0089:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[89].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0089:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[89].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0089:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[89].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0089:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[89].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0089:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[89].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0089:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[89].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0089:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[89].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0089:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[89].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0089:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[89].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0089:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[89].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0008:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[8].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0008:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[8].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0008:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[8].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0008:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[8].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0008:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[8].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0008:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[8].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0008:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[8].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0008:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[8].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0008:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0008:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[8].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0008:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[8].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0090:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[90].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0090:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[90].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0090:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[90].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0090:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[90].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0090:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[90].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0090:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[90].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0090:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[90].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0090:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[90].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0090:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[90].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0090:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[90].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0090:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[90].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0091:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[91].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0091:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[91].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0091:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[91].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0091:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[91].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0091:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[91].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0091:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[91].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0091:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[91].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0091:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[91].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0091:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[91].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0091:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[91].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0091:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[91].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0092:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[92].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0092:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[92].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0092:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[92].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0092:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[92].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0092:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[92].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0092:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[92].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0092:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[92].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0092:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[92].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0092:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[92].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0092:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[92].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0092:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[92].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0093:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[93].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0093:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[93].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0093:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[93].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0093:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[93].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0093:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[93].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0093:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[93].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0093:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[93].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0093:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[93].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0093:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[93].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0093:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[93].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0093:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[93].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0094:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[94].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0094:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[94].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0094:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[94].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0094:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[94].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0094:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[94].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0094:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[94].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0094:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[94].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0094:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[94].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0094:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[94].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0094:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[94].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0094:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[94].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0095:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[95].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0095:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[95].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0095:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[95].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0095:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[95].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0095:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[95].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0095:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[95].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0095:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[95].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0095:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[95].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0095:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[95].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0095:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[95].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0095:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[95].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0096:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[96].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0096:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[96].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0096:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[96].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0096:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[96].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0096:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[96].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0096:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[96].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0096:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[96].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0096:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[96].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0096:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[96].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0096:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[96].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0096:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[96].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0097:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[97].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0097:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[97].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0097:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[97].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0097:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[97].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0097:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[97].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0097:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[97].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0097:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[97].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0097:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[97].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0097:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[97].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0097:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[97].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0097:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[97].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0098:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[98].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0098:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[98].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0098:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[98].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0098:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[98].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0098:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[98].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0098:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[98].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0098:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[98].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0098:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[98].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0098:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[98].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0098:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[98].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0098:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[98].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0099:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[99].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0099:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[99].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0099:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[99].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0099:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[99].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0099:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[99].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0099:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[99].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0099:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[99].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0099:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[99].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0099:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[99].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0099:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[99].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0099:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[99].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0009:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[9].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0009:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[9].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0009:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[9].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0009:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[9].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0009:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[9].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0009:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[9].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0009:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[9].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0009:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[9].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0009:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0009:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[9].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:0009:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[9].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:ClearFault_RBV
      - bi
      - Might be overidden by PLC writes
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:ClearFault
      - bo
      - Might be overidden by PLC writes
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:EnableVeto_RBV
      - bi
      - GVL.fbFastFaultOutput1.i_xVeto
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:EnableVeto
      - bo
      - GVL.fbFastFaultOutput1.i_xVeto
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FaultHWO_RBV
      - bi
      - Hardware Output Status
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:RegistrationFailure_RBV
      - bi
      - GVL.fbFastFaultOutput1.xFastFaultRegFail
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:RegistrationFailure
      - bo
      - GVL.fbFastFaultOutput1.xFastFaultRegFail
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.xOK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0100:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[100].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0100:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[100].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0100:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[100].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0100:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[100].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0100:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[100].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0100:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[100].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0100:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[100].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0100:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[100].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0100:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[100].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0100:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[100].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0100:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[100].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0010:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[10].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0010:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[10].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0010:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[10].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0010:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[10].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0010:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[10].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0010:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[10].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0010:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[10].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0010:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[10].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0010:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0010:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[10].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0010:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[10].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0011:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[11].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0011:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[11].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0011:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[11].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0011:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[11].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0011:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[11].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0011:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[11].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0011:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[11].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0011:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[11].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0011:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0011:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[11].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0011:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[11].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0012:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[12].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0012:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[12].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0012:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[12].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0012:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[12].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0012:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[12].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0012:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[12].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0012:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[12].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0012:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[12].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0012:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0012:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[12].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0012:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[12].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0013:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[13].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0013:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[13].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0013:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[13].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0013:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[13].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0013:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[13].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0013:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[13].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0013:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[13].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0013:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[13].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0013:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0013:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[13].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0013:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[13].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0014:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[14].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0014:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[14].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0014:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[14].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0014:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[14].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0014:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[14].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0014:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[14].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0014:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[14].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0014:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[14].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0014:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0014:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[14].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0014:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[14].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0015:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[15].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0015:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[15].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0015:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[15].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0015:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[15].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0015:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[15].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0015:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[15].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0015:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[15].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0015:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[15].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0015:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0015:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[15].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0015:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[15].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0016:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[16].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0016:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[16].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0016:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[16].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0016:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[16].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0016:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[16].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0016:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[16].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0016:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[16].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0016:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[16].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0016:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0016:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[16].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0016:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[16].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0017:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[17].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0017:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[17].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0017:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[17].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0017:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[17].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0017:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[17].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0017:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[17].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0017:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[17].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0017:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[17].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0017:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0017:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[17].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0017:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[17].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0018:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[18].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0018:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[18].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0018:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[18].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0018:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[18].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0018:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[18].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0018:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[18].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0018:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[18].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0018:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[18].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0018:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0018:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[18].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0018:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[18].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0019:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[19].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0019:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[19].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0019:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[19].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0019:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[19].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0019:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[19].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0019:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[19].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0019:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[19].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0019:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[19].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0019:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0019:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[19].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0019:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[19].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0001:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[1].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0001:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[1].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0001:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[1].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0001:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[1].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0001:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[1].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0001:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[1].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0001:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[1].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0001:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[1].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0001:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0001:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[1].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0001:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[1].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0020:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[20].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0020:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[20].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0020:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[20].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0020:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[20].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0020:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[20].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0020:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[20].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0020:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[20].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0020:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[20].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0020:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0020:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[20].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0020:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[20].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0021:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[21].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0021:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[21].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0021:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[21].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0021:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[21].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0021:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[21].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0021:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[21].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0021:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[21].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0021:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[21].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0021:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0021:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[21].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0021:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[21].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0022:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[22].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0022:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[22].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0022:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[22].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0022:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[22].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0022:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[22].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0022:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[22].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0022:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[22].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0022:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[22].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0022:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0022:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[22].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0022:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[22].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0023:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[23].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0023:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[23].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0023:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[23].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0023:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[23].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0023:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[23].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0023:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[23].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0023:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[23].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0023:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[23].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0023:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0023:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[23].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0023:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[23].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0024:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[24].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0024:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[24].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0024:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[24].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0024:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[24].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0024:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[24].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0024:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[24].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0024:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[24].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0024:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[24].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0024:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0024:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[24].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0024:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[24].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0025:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[25].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0025:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[25].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0025:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[25].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0025:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[25].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0025:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[25].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0025:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[25].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0025:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[25].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0025:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[25].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0025:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0025:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[25].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0025:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[25].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0026:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[26].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0026:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[26].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0026:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[26].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0026:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[26].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0026:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[26].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0026:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[26].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0026:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[26].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0026:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[26].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0026:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0026:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[26].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0026:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[26].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0027:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[27].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0027:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[27].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0027:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[27].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0027:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[27].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0027:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[27].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0027:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[27].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0027:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[27].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0027:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[27].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0027:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0027:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[27].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0027:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[27].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0028:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[28].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0028:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[28].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0028:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[28].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0028:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[28].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0028:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[28].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0028:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[28].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0028:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[28].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0028:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[28].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0028:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0028:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[28].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0028:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[28].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0029:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[29].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0029:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[29].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0029:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[29].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0029:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[29].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0029:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[29].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0029:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[29].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0029:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[29].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0029:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[29].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0029:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0029:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[29].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0029:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[29].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0002:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[2].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0002:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[2].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0002:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[2].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0002:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[2].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0002:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[2].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0002:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[2].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0002:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[2].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0002:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[2].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0002:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0002:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[2].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0002:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[2].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0030:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[30].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0030:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[30].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0030:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[30].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0030:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[30].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0030:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[30].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0030:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[30].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0030:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[30].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0030:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[30].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0030:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0030:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[30].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0030:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[30].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0031:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[31].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0031:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[31].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0031:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[31].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0031:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[31].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0031:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[31].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0031:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[31].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0031:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[31].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0031:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[31].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0031:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0031:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[31].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0031:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[31].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0032:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[32].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0032:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[32].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0032:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[32].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0032:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[32].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0032:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[32].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0032:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[32].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0032:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[32].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0032:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[32].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0032:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0032:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[32].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0032:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[32].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0033:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[33].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0033:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[33].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0033:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[33].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0033:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[33].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0033:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[33].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0033:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[33].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0033:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[33].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0033:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[33].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0033:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0033:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[33].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0033:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[33].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0034:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[34].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0034:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[34].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0034:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[34].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0034:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[34].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0034:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[34].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0034:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[34].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0034:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[34].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0034:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[34].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0034:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0034:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[34].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0034:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[34].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0035:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[35].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0035:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[35].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0035:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[35].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0035:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[35].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0035:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[35].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0035:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[35].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0035:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[35].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0035:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[35].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0035:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0035:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[35].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0035:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[35].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0036:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[36].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0036:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[36].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0036:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[36].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0036:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[36].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0036:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[36].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0036:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[36].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0036:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[36].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0036:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[36].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0036:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0036:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[36].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0036:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[36].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0037:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[37].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0037:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[37].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0037:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[37].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0037:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[37].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0037:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[37].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0037:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[37].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0037:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[37].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0037:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[37].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0037:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0037:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[37].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0037:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[37].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0038:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[38].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0038:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[38].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0038:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[38].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0038:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[38].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0038:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[38].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0038:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[38].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0038:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[38].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0038:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[38].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0038:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0038:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[38].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0038:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[38].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0039:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[39].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0039:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[39].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0039:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[39].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0039:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[39].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0039:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[39].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0039:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[39].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0039:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[39].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0039:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[39].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0039:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0039:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[39].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0039:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[39].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0003:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[3].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0003:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[3].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0003:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[3].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0003:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[3].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0003:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[3].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0003:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[3].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0003:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[3].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0003:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[3].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0003:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0003:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[3].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0003:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[3].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0040:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[40].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0040:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[40].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0040:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[40].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0040:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[40].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0040:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[40].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0040:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[40].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0040:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[40].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0040:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[40].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0040:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0040:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[40].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0040:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[40].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0041:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[41].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0041:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[41].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0041:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[41].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0041:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[41].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0041:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[41].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0041:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[41].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0041:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[41].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0041:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[41].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0041:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0041:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[41].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0041:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[41].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0042:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[42].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0042:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[42].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0042:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[42].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0042:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[42].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0042:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[42].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0042:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[42].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0042:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[42].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0042:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[42].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0042:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0042:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[42].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0042:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[42].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0043:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[43].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0043:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[43].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0043:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[43].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0043:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[43].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0043:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[43].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0043:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[43].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0043:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[43].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0043:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[43].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0043:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0043:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[43].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0043:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[43].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0044:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[44].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0044:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[44].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0044:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[44].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0044:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[44].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0044:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[44].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0044:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[44].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0044:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[44].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0044:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[44].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0044:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0044:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[44].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0044:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[44].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0045:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[45].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0045:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[45].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0045:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[45].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0045:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[45].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0045:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[45].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0045:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[45].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0045:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[45].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0045:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[45].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0045:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0045:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[45].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0045:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[45].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0046:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[46].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0046:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[46].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0046:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[46].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0046:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[46].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0046:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[46].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0046:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[46].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0046:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[46].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0046:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[46].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0046:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0046:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[46].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0046:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[46].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0047:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[47].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0047:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[47].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0047:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[47].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0047:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[47].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0047:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[47].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0047:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[47].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0047:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[47].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0047:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[47].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0047:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0047:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[47].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0047:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[47].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0048:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[48].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0048:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[48].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0048:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[48].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0048:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[48].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0048:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[48].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0048:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[48].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0048:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[48].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0048:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[48].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0048:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0048:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[48].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0048:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[48].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0049:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[49].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0049:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[49].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0049:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[49].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0049:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[49].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0049:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[49].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0049:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[49].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0049:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[49].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0049:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[49].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0049:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0049:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[49].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0049:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[49].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0004:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[4].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0004:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[4].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0004:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[4].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0004:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[4].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0004:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[4].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0004:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[4].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0004:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[4].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0004:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[4].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0004:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0004:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[4].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0004:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[4].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0050:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[50].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0050:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[50].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0050:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[50].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0050:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[50].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0050:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[50].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0050:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[50].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0050:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[50].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0050:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[50].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0050:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0050:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[50].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0050:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[50].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0051:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[51].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0051:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[51].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0051:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[51].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0051:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[51].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0051:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[51].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0051:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[51].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0051:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[51].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0051:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[51].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0051:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[51].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0051:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[51].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0051:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[51].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0052:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[52].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0052:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[52].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0052:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[52].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0052:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[52].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0052:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[52].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0052:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[52].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0052:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[52].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0052:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[52].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0052:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[52].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0052:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[52].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0052:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[52].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0053:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[53].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0053:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[53].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0053:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[53].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0053:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[53].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0053:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[53].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0053:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[53].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0053:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[53].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0053:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[53].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0053:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[53].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0053:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[53].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0053:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[53].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0054:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[54].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0054:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[54].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0054:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[54].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0054:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[54].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0054:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[54].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0054:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[54].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0054:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[54].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0054:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[54].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0054:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[54].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0054:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[54].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0054:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[54].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0055:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[55].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0055:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[55].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0055:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[55].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0055:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[55].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0055:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[55].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0055:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[55].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0055:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[55].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0055:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[55].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0055:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[55].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0055:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[55].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0055:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[55].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0056:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[56].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0056:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[56].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0056:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[56].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0056:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[56].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0056:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[56].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0056:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[56].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0056:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[56].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0056:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[56].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0056:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[56].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0056:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[56].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0056:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[56].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0057:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[57].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0057:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[57].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0057:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[57].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0057:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[57].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0057:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[57].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0057:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[57].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0057:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[57].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0057:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[57].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0057:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[57].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0057:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[57].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0057:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[57].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0058:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[58].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0058:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[58].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0058:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[58].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0058:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[58].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0058:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[58].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0058:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[58].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0058:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[58].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0058:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[58].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0058:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[58].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0058:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[58].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0058:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[58].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0059:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[59].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0059:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[59].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0059:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[59].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0059:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[59].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0059:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[59].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0059:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[59].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0059:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[59].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0059:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[59].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0059:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[59].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0059:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[59].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0059:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[59].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0005:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[5].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0005:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[5].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0005:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[5].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0005:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[5].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0005:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[5].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0005:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[5].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0005:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[5].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0005:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[5].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0005:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0005:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[5].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0005:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[5].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0060:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[60].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0060:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[60].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0060:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[60].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0060:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[60].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0060:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[60].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0060:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[60].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0060:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[60].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0060:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[60].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0060:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[60].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0060:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[60].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0060:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[60].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0061:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[61].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0061:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[61].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0061:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[61].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0061:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[61].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0061:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[61].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0061:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[61].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0061:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[61].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0061:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[61].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0061:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[61].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0061:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[61].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0061:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[61].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0062:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[62].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0062:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[62].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0062:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[62].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0062:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[62].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0062:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[62].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0062:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[62].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0062:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[62].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0062:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[62].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0062:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[62].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0062:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[62].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0062:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[62].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0063:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[63].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0063:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[63].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0063:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[63].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0063:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[63].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0063:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[63].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0063:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[63].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0063:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[63].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0063:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[63].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0063:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[63].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0063:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[63].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0063:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[63].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0064:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[64].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0064:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[64].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0064:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[64].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0064:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[64].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0064:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[64].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0064:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[64].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0064:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[64].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0064:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[64].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0064:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[64].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0064:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[64].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0064:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[64].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0065:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[65].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0065:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[65].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0065:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[65].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0065:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[65].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0065:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[65].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0065:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[65].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0065:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[65].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0065:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[65].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0065:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[65].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0065:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[65].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0065:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[65].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0066:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[66].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0066:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[66].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0066:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[66].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0066:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[66].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0066:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[66].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0066:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[66].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0066:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[66].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0066:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[66].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0066:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[66].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0066:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[66].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0066:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[66].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0067:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[67].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0067:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[67].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0067:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[67].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0067:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[67].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0067:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[67].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0067:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[67].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0067:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[67].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0067:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[67].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0067:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[67].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0067:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[67].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0067:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[67].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0068:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[68].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0068:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[68].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0068:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[68].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0068:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[68].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0068:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[68].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0068:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[68].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0068:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[68].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0068:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[68].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0068:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[68].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0068:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[68].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0068:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[68].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0069:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[69].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0069:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[69].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0069:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[69].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0069:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[69].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0069:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[69].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0069:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[69].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0069:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[69].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0069:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[69].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0069:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[69].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0069:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[69].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0069:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[69].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0006:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[6].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0006:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[6].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0006:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[6].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0006:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[6].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0006:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[6].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0006:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[6].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0006:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[6].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0006:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[6].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0006:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0006:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[6].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0006:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[6].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0070:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[70].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0070:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[70].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0070:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[70].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0070:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[70].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0070:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[70].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0070:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[70].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0070:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[70].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0070:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[70].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0070:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[70].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0070:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[70].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0070:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[70].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0071:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[71].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0071:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[71].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0071:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[71].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0071:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[71].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0071:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[71].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0071:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[71].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0071:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[71].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0071:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[71].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0071:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[71].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0071:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[71].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0071:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[71].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0072:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[72].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0072:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[72].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0072:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[72].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0072:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[72].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0072:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[72].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0072:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[72].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0072:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[72].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0072:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[72].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0072:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[72].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0072:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[72].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0072:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[72].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0073:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[73].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0073:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[73].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0073:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[73].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0073:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[73].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0073:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[73].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0073:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[73].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0073:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[73].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0073:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[73].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0073:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[73].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0073:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[73].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0073:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[73].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0074:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[74].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0074:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[74].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0074:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[74].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0074:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[74].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0074:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[74].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0074:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[74].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0074:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[74].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0074:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[74].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0074:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[74].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0074:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[74].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0074:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[74].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0075:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[75].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0075:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[75].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0075:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[75].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0075:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[75].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0075:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[75].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0075:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[75].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0075:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[75].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0075:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[75].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0075:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[75].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0075:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[75].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0075:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[75].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0076:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[76].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0076:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[76].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0076:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[76].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0076:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[76].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0076:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[76].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0076:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[76].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0076:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[76].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0076:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[76].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0076:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[76].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0076:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[76].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0076:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[76].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0077:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[77].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0077:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[77].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0077:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[77].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0077:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[77].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0077:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[77].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0077:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[77].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0077:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[77].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0077:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[77].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0077:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[77].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0077:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[77].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0077:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[77].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0078:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[78].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0078:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[78].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0078:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[78].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0078:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[78].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0078:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[78].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0078:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[78].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0078:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[78].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0078:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[78].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0078:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[78].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0078:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[78].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0078:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[78].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0079:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[79].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0079:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[79].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0079:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[79].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0079:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[79].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0079:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[79].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0079:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[79].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0079:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[79].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0079:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[79].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0079:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[79].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0079:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[79].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0079:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[79].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0007:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[7].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0007:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[7].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0007:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[7].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0007:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[7].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0007:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[7].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0007:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[7].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0007:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[7].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0007:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[7].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0007:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0007:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[7].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0007:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[7].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0080:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[80].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0080:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[80].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0080:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[80].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0080:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[80].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0080:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[80].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0080:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[80].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0080:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[80].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0080:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[80].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0080:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[80].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0080:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[80].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0080:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[80].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0081:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[81].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0081:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[81].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0081:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[81].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0081:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[81].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0081:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[81].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0081:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[81].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0081:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[81].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0081:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[81].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0081:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[81].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0081:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[81].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0081:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[81].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0082:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[82].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0082:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[82].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0082:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[82].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0082:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[82].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0082:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[82].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0082:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[82].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0082:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[82].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0082:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[82].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0082:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[82].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0082:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[82].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0082:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[82].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0083:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[83].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0083:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[83].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0083:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[83].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0083:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[83].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0083:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[83].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0083:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[83].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0083:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[83].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0083:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[83].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0083:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[83].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0083:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[83].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0083:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[83].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0084:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[84].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0084:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[84].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0084:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[84].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0084:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[84].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0084:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[84].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0084:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[84].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0084:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[84].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0084:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[84].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0084:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[84].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0084:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[84].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0084:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[84].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0085:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[85].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0085:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[85].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0085:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[85].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0085:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[85].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0085:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[85].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0085:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[85].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0085:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[85].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0085:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[85].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0085:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[85].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0085:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[85].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0085:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[85].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0086:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[86].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0086:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[86].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0086:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[86].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0086:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[86].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0086:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[86].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0086:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[86].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0086:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[86].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0086:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[86].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0086:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[86].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0086:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[86].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0086:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[86].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0087:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[87].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0087:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[87].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0087:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[87].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0087:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[87].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0087:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[87].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0087:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[87].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0087:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[87].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0087:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[87].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0087:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[87].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0087:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[87].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0087:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[87].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0088:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[88].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0088:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[88].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0088:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[88].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0088:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[88].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0088:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[88].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0088:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[88].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0088:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[88].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0088:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[88].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0088:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[88].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0088:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[88].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0088:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[88].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0089:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[89].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0089:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[89].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0089:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[89].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0089:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[89].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0089:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[89].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0089:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[89].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0089:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[89].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0089:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[89].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0089:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[89].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0089:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[89].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0089:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[89].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0008:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[8].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0008:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[8].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0008:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[8].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0008:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[8].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0008:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[8].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0008:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[8].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0008:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[8].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0008:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[8].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0008:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0008:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[8].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0008:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[8].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0090:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[90].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0090:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[90].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0090:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[90].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0090:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[90].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0090:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[90].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0090:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[90].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0090:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[90].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0090:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[90].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0090:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[90].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0090:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[90].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0090:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[90].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0091:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[91].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0091:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[91].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0091:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[91].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0091:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[91].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0091:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[91].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0091:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[91].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0091:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[91].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0091:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[91].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0091:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[91].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0091:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[91].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0091:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[91].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0092:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[92].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0092:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[92].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0092:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[92].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0092:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[92].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0092:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[92].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0092:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[92].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0092:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[92].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0092:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[92].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0092:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[92].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0092:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[92].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0092:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[92].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0093:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[93].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0093:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[93].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0093:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[93].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0093:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[93].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0093:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[93].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0093:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[93].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0093:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[93].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0093:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[93].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0093:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[93].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0093:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[93].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0093:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[93].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0094:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[94].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0094:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[94].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0094:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[94].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0094:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[94].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0094:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[94].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0094:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[94].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0094:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[94].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0094:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[94].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0094:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[94].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0094:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[94].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0094:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[94].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0095:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[95].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0095:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[95].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0095:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[95].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0095:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[95].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0095:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[95].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0095:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[95].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0095:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[95].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0095:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[95].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0095:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[95].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0095:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[95].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0095:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[95].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0096:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[96].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0096:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[96].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0096:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[96].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0096:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[96].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0096:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[96].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0096:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[96].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0096:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[96].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0096:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[96].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0096:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[96].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0096:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[96].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0096:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[96].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0097:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[97].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0097:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[97].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0097:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[97].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0097:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[97].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0097:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[97].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0097:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[97].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0097:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[97].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0097:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[97].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0097:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[97].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0097:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[97].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0097:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[97].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0098:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[98].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0098:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[98].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0098:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[98].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0098:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[98].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0098:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[98].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0098:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[98].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0098:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[98].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0098:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[98].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0098:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[98].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0098:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[98].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0098:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[98].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0099:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[99].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0099:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[99].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0099:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[99].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0099:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[99].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0099:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[99].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0099:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[99].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0099:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[99].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0099:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[99].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0099:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[99].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0099:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[99].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0099:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[99].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0009:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[9].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0009:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[9].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0009:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[9].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0009:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[9].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0009:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[9].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0009:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[9].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0009:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[9].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0009:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[9].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0009:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0009:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[9].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:0009:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[9].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:ClearFault_RBV
      - bi
      - Might be overidden by PLC writes
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:ClearFault
      - bo
      - Might be overidden by PLC writes
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:EnableVeto_RBV
      - bi
      - GVL.fbFastFaultOutput2.i_xVeto
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:EnableVeto
      - bo
      - GVL.fbFastFaultOutput2.i_xVeto
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FaultHWO_RBV
      - bi
      - Hardware Output Status
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:RegistrationFailure_RBV
      - bi
      - GVL.fbFastFaultOutput2.xFastFaultRegFail
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:RegistrationFailure
      - bo
      - GVL.fbFastFaultOutput2.xFastFaultRegFail
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.xOK
      - | io: input


    * - $(PREFIX)LCLSGeneral:GlobalLogTrickleTrip_RBV
      - bi
      - Tripped by overall log count
      - | io: input


    * - $(PREFIX)LCLSGeneral:LogHost_RBV
      - waveform
      - The log host IP address
      - | io: output


    * - $(PREFIX)LCLSGeneral:LogHost
      - waveform
      - The log host IP address
      - | io: output


    * - $(PREFIX)LCLSGeneral:LogPort_RBV
      - longin
      - The log host UDP port
      - | io: output


    * - $(PREFIX)LCLSGeneral:LogPort
      - longout
      - The log host UDP port
      - | io: output


    * - $(PREFIX)LCLSGeneral:LogMessageCount_RBV
      - longin
      - Total log messages on the last cycle
      - | io: input


    * - $(PREFIX)DB:REFRESH_RBV
      - bi
      - MOTION_GVL.fbStandardPMPSDB.bRefresh
      - | io: output


    * - $(PREFIX)DB:REFRESH
      - bo
      - MOTION_GVL.fbStandardPMPSDB.bRefresh
      - | io: output


    * - $(PREFIX)DB:LAST_REFRESH_RBV
      - longin
      - MOTION_GVL.fbStandardPMPSDB.nLastRefreshTime
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:01:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:01:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:01:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:01:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:01:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:01:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:01:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:10:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:10:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:10:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:10:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:10:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:10:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:10:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:11:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:11:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:11:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:11:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:11:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:11:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:11:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:12:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:12:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:12:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:12:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:12:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:12:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:12:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:13:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:13:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:13:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:13:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:13:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:13:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:13:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:14:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:14:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:14:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:14:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:14:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:14:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:14:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:15:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:15:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:15:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:15:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:15:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:15:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:15:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:16:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:16:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:16:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:16:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:16:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:16:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:16:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:17:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:17:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:17:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:17:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:17:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:17:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:17:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:18:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:18:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:18:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:18:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:18:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:18:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:18:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:19:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:19:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:19:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:19:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:19:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:19:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:19:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:02:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:02:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:02:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:02:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:02:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:02:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:02:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM1L0:XTES:MMS:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM1L0:XTES:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM1L0:XTES:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM1L0:XTES:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM1L0:XTES:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM1L0:XTES:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1L0:XTES:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1L0:XTES:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM1L0:XTES:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM1L0:XTES:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM1L0:XTES:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM1L0:XTES:MMS:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - IM1L0:XTES:MMS:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - IM1L0:XTES:MMS:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - IM1L0:XTES:MMS:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - IM1L0:XTES:MMS:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - IM1L0:XTES:MMS:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - IM1L0:XTES:MMS:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - IM1L0:XTES:MMS:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - IM1L0:XTES:MMS:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - IM1L0:XTES:MMS:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - IM1L0:XTES:MMS:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - IM1L0:XTES:MMS:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - IM1L0:XTES:MMS:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM1L0:XTES:MMS:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM1L0:XTES:MMS:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM1L0:XTES:MMS:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM1L0:XTES:MMS:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM1L0:XTES:MMS:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM1L0:XTES:MMS:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM1L0:XTES:MMS:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM1L0:XTES:MMS:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM1L0:XTES:MMS:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM1L0:XTES:MMS:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM1L0:XTES:MMS:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM1L0:XTES:CLZ:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLZ:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:CLZ:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:CLZ:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM1L0:XTES:CLZ:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM1L0:XTES:CLZ:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM1L0:XTES:CLZ:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM1L0:XTES:CLZ:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM1L0:XTES:CLF:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM1L0:XTES:CLF:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLF:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM1L0:XTES:CLF:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM1L0:XTES:CLF:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:CLF:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:CLF:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM1L0:XTES:CLF:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM1L0:XTES:CLF:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1L0:XTES:CLF:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1L0:XTES:CLF:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM1L0:XTES:CLF:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM1L0:XTES:CLF:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM1L0:XTES:CLF:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM1L0:XTES:CLF:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - IM1L0:XTES:CLF:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - IM1L0:XTES:CLF:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - IM1L0:XTES:CLF:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - IM1L0:XTES:CLF:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - IM1L0:XTES:CLF:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - IM1L0:XTES:CLF:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - IM1L0:XTES:CLF:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - IM1L0:XTES:CLF:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - IM1L0:XTES:CLF:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - IM1L0:XTES:CLF:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - IM1L0:XTES:CLF:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - IM1L0:XTES:CLF:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM1L0:XTES:CLF:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM1L0:XTES:CLF:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM1L0:XTES:CLF:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM1L0:XTES:CLF:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM1L0:XTES:CLF:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM1L0:XTES:CLF:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM1L0:XTES:CLF:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM1L0:XTES:CLF:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM1L0:XTES:CLF:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM1L0:XTES:CLF:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM1L0:XTES:CLF:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM1L1:PPM:MMS:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM1L1:PPM:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM1L1:PPM:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM1L1:PPM:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L1:PPM:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L1:PPM:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM1L1:PPM:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM1L1:PPM:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1L1:PPM:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1L1:PPM:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM1L1:PPM:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM1L1:PPM:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM1L1:PPM:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM1L1:PPM:MMS:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - IM1L1:PPM:MMS:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - IM1L1:PPM:MMS:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - IM1L1:PPM:MMS:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - IM1L1:PPM:MMS:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - IM1L1:PPM:MMS:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - IM1L1:PPM:MMS:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - IM1L1:PPM:MMS:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - IM1L1:PPM:MMS:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - IM1L1:PPM:MMS:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - IM1L1:PPM:MMS:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - IM1L1:PPM:MMS:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - IM1L1:PPM:MMS:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM1L1:PPM:MMS:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM1L1:PPM:MMS:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM1L1:PPM:MMS:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM1L1:PPM:MMS:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM1L1:PPM:MMS:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM1L1:PPM:MMS:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM1L1:PPM:MMS:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM1L1:PPM:MMS:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM1L1:PPM:MMS:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM1L1:PPM:MMS:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM1L1:PPM:MMS:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM2L0:XTES:MMS:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM2L0:XTES:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM2L0:XTES:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM2L0:XTES:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM2L0:XTES:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM2L0:XTES:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM2L0:XTES:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM2L0:XTES:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM2L0:XTES:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM2L0:XTES:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM2L0:XTES:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM2L0:XTES:MMS:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - IM2L0:XTES:MMS:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - IM2L0:XTES:MMS:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - IM2L0:XTES:MMS:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - IM2L0:XTES:MMS:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - IM2L0:XTES:MMS:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - IM2L0:XTES:MMS:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - IM2L0:XTES:MMS:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - IM2L0:XTES:MMS:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - IM2L0:XTES:MMS:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - IM2L0:XTES:MMS:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - IM2L0:XTES:MMS:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - IM2L0:XTES:MMS:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM2L0:XTES:MMS:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM2L0:XTES:MMS:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM2L0:XTES:MMS:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM2L0:XTES:MMS:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM2L0:XTES:MMS:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM2L0:XTES:MMS:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM2L0:XTES:MMS:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM2L0:XTES:MMS:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM2L0:XTES:MMS:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM2L0:XTES:MMS:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM2L0:XTES:MMS:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM2L0:XTES:CLZ:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLZ:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:CLZ:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:CLZ:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM2L0:XTES:CLZ:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM2L0:XTES:CLZ:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM2L0:XTES:CLZ:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM2L0:XTES:CLZ:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM2L0:XTES:CLF:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM2L0:XTES:CLF:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLF:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM2L0:XTES:CLF:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM2L0:XTES:CLF:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:CLF:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:CLF:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM2L0:XTES:CLF:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM2L0:XTES:CLF:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM2L0:XTES:CLF:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM2L0:XTES:CLF:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM2L0:XTES:CLF:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM2L0:XTES:CLF:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM2L0:XTES:CLF:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM2L0:XTES:CLF:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - IM2L0:XTES:CLF:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - IM2L0:XTES:CLF:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - IM2L0:XTES:CLF:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - IM2L0:XTES:CLF:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - IM2L0:XTES:CLF:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - IM2L0:XTES:CLF:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - IM2L0:XTES:CLF:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - IM2L0:XTES:CLF:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - IM2L0:XTES:CLF:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - IM2L0:XTES:CLF:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - IM2L0:XTES:CLF:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - IM2L0:XTES:CLF:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM2L0:XTES:CLF:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM2L0:XTES:CLF:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM2L0:XTES:CLF:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM2L0:XTES:CLF:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM2L0:XTES:CLF:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM2L0:XTES:CLF:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM2L0:XTES:CLF:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM2L0:XTES:CLF:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM2L0:XTES:CLF:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM2L0:XTES:CLF:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM2L0:XTES:CLF:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM3L0:PPM:MMS:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM3L0:PPM:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM3L0:PPM:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM3L0:PPM:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM3L0:PPM:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM3L0:PPM:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM3L0:PPM:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM3L0:PPM:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM3L0:PPM:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM3L0:PPM:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM3L0:PPM:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM3L0:PPM:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM3L0:PPM:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM3L0:PPM:MMS:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - IM3L0:PPM:MMS:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - IM3L0:PPM:MMS:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - IM3L0:PPM:MMS:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - IM3L0:PPM:MMS:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - IM3L0:PPM:MMS:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - IM3L0:PPM:MMS:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - IM3L0:PPM:MMS:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - IM3L0:PPM:MMS:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - IM3L0:PPM:MMS:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - IM3L0:PPM:MMS:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - IM3L0:PPM:MMS:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - IM3L0:PPM:MMS:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM3L0:PPM:MMS:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM3L0:PPM:MMS:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM3L0:PPM:MMS:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM3L0:PPM:MMS:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM3L0:PPM:MMS:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM3L0:PPM:MMS:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM3L0:PPM:MMS:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM3L0:PPM:MMS:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM3L0:PPM:MMS:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM3L0:PPM:MMS:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM3L0:PPM:MMS:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM4L0:XTES:MMS:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM4L0:XTES:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM4L0:XTES:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM4L0:XTES:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM4L0:XTES:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM4L0:XTES:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM4L0:XTES:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM4L0:XTES:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM4L0:XTES:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM4L0:XTES:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM4L0:XTES:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM4L0:XTES:MMS:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - IM4L0:XTES:MMS:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - IM4L0:XTES:MMS:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - IM4L0:XTES:MMS:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - IM4L0:XTES:MMS:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - IM4L0:XTES:MMS:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - IM4L0:XTES:MMS:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - IM4L0:XTES:MMS:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - IM4L0:XTES:MMS:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - IM4L0:XTES:MMS:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - IM4L0:XTES:MMS:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - IM4L0:XTES:MMS:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - IM4L0:XTES:MMS:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM4L0:XTES:MMS:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM4L0:XTES:MMS:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM4L0:XTES:MMS:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM4L0:XTES:MMS:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM4L0:XTES:MMS:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM4L0:XTES:MMS:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM4L0:XTES:MMS:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM4L0:XTES:MMS:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM4L0:XTES:MMS:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM4L0:XTES:MMS:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM4L0:XTES:MMS:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM4L0:XTES:CLZ:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLZ:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:CLZ:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:CLZ:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM4L0:XTES:CLZ:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM4L0:XTES:CLZ:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM4L0:XTES:CLZ:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM4L0:XTES:CLZ:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:03:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:03:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:03:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:03:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:03:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:03:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:03:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM4L0:XTES:CLF:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM4L0:XTES:CLF:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLF:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM4L0:XTES:CLF:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM4L0:XTES:CLF:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:CLF:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:CLF:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM4L0:XTES:CLF:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM4L0:XTES:CLF:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM4L0:XTES:CLF:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM4L0:XTES:CLF:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM4L0:XTES:CLF:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM4L0:XTES:CLF:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM4L0:XTES:CLF:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM4L0:XTES:CLF:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - IM4L0:XTES:CLF:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - IM4L0:XTES:CLF:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - IM4L0:XTES:CLF:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - IM4L0:XTES:CLF:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - IM4L0:XTES:CLF:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - IM4L0:XTES:CLF:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - IM4L0:XTES:CLF:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - IM4L0:XTES:CLF:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - IM4L0:XTES:CLF:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - IM4L0:XTES:CLF:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - IM4L0:XTES:CLF:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - IM4L0:XTES:CLF:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM4L0:XTES:CLF:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM4L0:XTES:CLF:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM4L0:XTES:CLF:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM4L0:XTES:CLF:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM4L0:XTES:CLF:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM4L0:XTES:CLF:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM4L0:XTES:CLF:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - IM4L0:XTES:CLF:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - IM4L0:XTES:CLF:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - IM4L0:XTES:CLF:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - IM4L0:XTES:CLF:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - PF1L0:WFS:MMS:Y:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Y:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1L0:WFS:MMS:Y:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1L0:WFS:MMS:Y:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - PF1L0:WFS:MMS:Y:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - PF1L0:WFS:MMS:Y:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - PF1L0:WFS:MMS:Y:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - PF1L0:WFS:MMS:Y:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - PF1L0:WFS:MMS:Z:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Z:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1L0:WFS:MMS:Z:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1L0:WFS:MMS:Z:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - PF1L0:WFS:MMS:Z:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - PF1L0:WFS:MMS:Z:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - PF1L0:WFS:MMS:Z:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - PF1L0:WFS:MMS:Z:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - RTDSL0:DIODE:MMS:01:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - RTDSL0:DIODE:MMS:01:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - RTDSL0:DIODE:MMS:01:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - RTDSL0:LDM:MMS:01:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:LDM:MMS:01:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - RTDSL0:LDM:MMS:01:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - RTDSL0:LDM:MMS:01:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - RTDSL0:LDM:MMS:01:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - RTDSL0:LDM:MMS:01:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - RTDSL0:LDM:MMS:01:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - RTDSL0:LDM:MMS:01:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:04:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:04:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:04:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:04:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:04:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:04:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:04:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:BOTTOM:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:SOUTH:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:SOUTH:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:TOP:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:TOP:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:TOP:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:NORTH:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:NORTH:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:NORTH:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:BOTTOM:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:SOUTH:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:SOUTH:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:TOP:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:TOP:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:TOP:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:NORTH:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:NORTH:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:NORTH:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:05:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:05:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:05:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:05:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:05:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:05:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:05:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:06:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:06:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:06:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:06:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:06:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:06:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:06:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:07:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:07:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:07:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:07:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:07:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:07:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:07:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:08:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:08:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:08:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:08:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:08:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:08:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:08:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:09:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:09:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:09:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:09:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:09:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:09:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:09:PLC:AxisPar:PosLagEn_RBV
      - longin
      - TRUE if position lag monitor (also known as stall monitor) is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:AxisPar:SLimMaxEn_RBV
      - longin
      - TRUE if controller static maximum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:AxisPar:SLimMinEn_RBV
      - longin
      - TRUE if controller static minimum limit is enabled.
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:AxisPar:MaxAccel_RBV
      - ai
      - Maximum rate of increase in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:AxisPar:PosLagVal_RBV
      - ai
      - Maximum magnitude of position lag in EU.
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:AxisPar:PosLagTime_RBV
      - ai
      - Maximum allowable duration outside of maximum position lag value in seconds.
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:AxisPar:MaxDecel_RBV
      - ai
      - Maximum rate of decrease in speed of the axis in EU/s^2.
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:AxisPar:EncOffset_RBV
      - ai
      - Encoder offset in EU.
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:AxisPar:EncScaling_RBV
      - ai
      - Encoder scaling numerator / denominator in EU/COUNT.
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:AxisPar:SLimMax_RBV
      - ai
      - Maximum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:AxisPar:SLimMin_RBV
      - ai
      - Minimum commandable position of the axis in EU.
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:AxisPar:MaxVel_RBV
      - ai
      - Maximum commandable speed of the axis in EU/s.
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:stEPSB:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:stEPSB:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:stEPSB:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:stEPSB:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:stEPSF:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:stEPSF:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:stEPSF:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:stEPSF:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:stEPSP:bEPS_OK_RBV
      - bi
      - check if nFlags are all true
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:stEPSP:nFlags_RBV
      - longin
      - Contains EPS flags
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:stEPSP:sFlagDesc_RBV
      - waveform
      - semicolon-delimited nFlag variable
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:stEPSP:sMessage_RBV
      - waveform
      - Message from EPS to usr
      - | io: input


    * - $(PREFIX)AccumulatedFastFaults_RBV
      - longin
      - PMPS_GVL.AccumulatedFF
      - | io: input


    * - $(PREFIX)SuccessfulPreemptions_RBV
      - longin
      - PMPS_GVL.SuccessfulPreemption
      - | io: input


    * - $(PREFIX)0RateBeamCnst:Veto_RBV
      - waveform
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:01:Height_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:01:Width_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:01:OK_RBV
      - bi
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:02:Height_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:02:Width_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:02:OK_RBV
      - bi
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:03:Height_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:03:Width_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:03:OK_RBV
      - bi
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:04:Height_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:04:Width_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:04:OK_RBV
      - bi
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)0RateBeamCnst:BeamClassRanges_RBV
      - longin
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)0RateBeamCnst:BeamClass_RBV
      - longin
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)0RateBeamCnst:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)0RateBeamCnst:MachineMode_RBV
      - longin
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)0RateBeamCnst:Rate_RBV
      - longin
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU Hz
        | io: input


    * - $(PREFIX)0RateBeamCnst:Transmission_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX)0RateBeamCnst:PhotonEnergy_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)0RateBeamCnst:eVRanges_RBV
      - longin
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)0RateBeamCnst:Valid_RBV
      - bi
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:Veto_RBV
      - waveform
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:01:Height_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:01:Width_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:01:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:02:Height_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:02:Width_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:02:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:03:Height_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:03:Width_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:03:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:04:Height_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:04:Width_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:04:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:BeamClassRanges_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:BeamClass_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:MachineMode_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:Rate_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU Hz
        | io: input


    * - $(PREFIX)FullBeamCnst:Transmission_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX)FullBeamCnst:PhotonEnergy_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)FullBeamCnst:eVRanges_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)FullBeamCnst:Valid_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)eVRangeCnst_RBV
      - waveform
      - Active eV Range constants
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)K:eVRangeCnst_RBV
      - waveform
      - eV Range constants
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)L:eVRangeCnst_RBV
      - waveform
      - eV Range constants
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)eVRangeHyst_RBV
      - ai
      - eV Range hystersis
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)CurrentBP:Veto_RBV
      - waveform
      - PMPS_GVL.stCurrentBeamParameters.aVetoDevices
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:Apt:01:Height_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.astApertures[1].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)CurrentBP:Apt:01:Width_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.astApertures[1].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)CurrentBP:Apt:01:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astApertures[1].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:Apt:02:Height_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.astApertures[2].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)CurrentBP:Apt:02:Width_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.astApertures[2].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)CurrentBP:Apt:02:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astApertures[2].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:Apt:03:Height_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.astApertures[3].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)CurrentBP:Apt:03:Width_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.astApertures[3].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)CurrentBP:Apt:03:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astApertures[3].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:Apt:04:Height_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.astApertures[4].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)CurrentBP:Apt:04:Width_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.astApertures[4].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)CurrentBP:Apt:04:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astApertures[4].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:BeamClassRanges_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.nBCRange
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:BeamClass_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.nBeamClass
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:MachineMode_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.nMachineMode
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:Rate_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.nRate
      - | archive: 1s monitor
        | field: EGU Hz
        | io: input


    * - $(PREFIX)CurrentBP:Transmission_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.nTran
      - | archive: 1s monitor
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX)CurrentBP:PhotonEnergy_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.neV
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)CurrentBP:eVRanges_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.neVRange
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)CurrentBP:Valid_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.xValid
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:Veto_RBV
      - waveform
      - PMPS_GVL.stRequestedBeamParameters.aVetoDevices
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:Apt:01:Height_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.astApertures[1].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)RequestedBP:Apt:01:Width_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.astApertures[1].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)RequestedBP:Apt:01:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astApertures[1].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:Apt:02:Height_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.astApertures[2].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)RequestedBP:Apt:02:Width_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.astApertures[2].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)RequestedBP:Apt:02:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astApertures[2].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:Apt:03:Height_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.astApertures[3].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)RequestedBP:Apt:03:Width_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.astApertures[3].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)RequestedBP:Apt:03:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astApertures[3].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:Apt:04:Height_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.astApertures[4].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)RequestedBP:Apt:04:Width_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.astApertures[4].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)RequestedBP:Apt:04:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astApertures[4].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:BeamClassRanges_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.nBCRange
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:BeamClass_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.nBeamClass
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:MachineMode_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.nMachineMode
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:Rate_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.nRate
      - | archive: 1s monitor
        | field: EGU Hz
        | io: input


    * - $(PREFIX)RequestedBP:Transmission_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.nTran
      - | archive: 1s monitor
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX)RequestedBP:PhotonEnergy_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.neV
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)RequestedBP:eVRanges_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.neVRange
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)RequestedBP:Valid_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.xValid
      - | archive: 1s monitor
        | io: input


    * - AT2L0:XTES:TRANSMISSION_RBV
      - ai
      - Overall transmission of AT2L0
      - | io: output


    * - AT2L0:XTES:TRANSMISSION
      - ao
      - Overall transmission of AT2L0
      - | io: output


    * - AT2L0:XTES:MMS:10:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:10:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:10:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:11:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:11:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:11:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:12:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:12:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:12:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:13:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:13:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:13:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:14:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:14:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:14:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:15:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:15:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:15:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:16:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:16:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:16:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:17:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:17:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:17:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:18:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:18:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:18:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:19:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:19:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:19:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:01:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:01:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:01:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:02:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:02:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:02:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:03:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:03:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:03:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:04:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:04:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:04:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:05:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:05:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:05:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:06:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:06:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:06:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:07:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:07:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:07:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:08:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:08:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:08:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:09:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:09:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:09:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[10].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[10].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[10].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[10].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[10].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[10].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[10].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[10].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[10].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[10].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[11].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[11].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[11].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[11].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[11].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[11].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[11].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[11].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[11].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[11].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[12].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[12].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[12].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[12].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[12].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[12].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[12].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[12].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[12].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[12].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[13].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[13].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[13].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[13].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[13].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[13].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[13].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[13].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[13].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[13].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[14].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[14].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[14].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[14].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[14].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[14].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[14].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[14].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[14].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[14].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[15].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[15].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[15].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[15].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[15].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[15].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[15].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[15].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[15].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[15].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[16].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[16].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[16].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[16].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[16].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[16].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[16].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[16].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[16].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[16].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[17].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[17].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[17].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[17].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[17].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[17].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[17].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[17].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[17].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[17].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[18].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[18].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[18].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[18].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[18].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[18].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[18].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[18].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[18].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[18].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[19].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[19].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[19].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[19].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[19].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[19].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[19].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[19].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[19].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[19].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[1].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[1].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[1].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[1].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[1].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[1].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[1].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[1].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[1].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[1].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[2].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[2].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[2].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[2].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[2].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[2].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[2].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[2].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[2].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[2].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[3].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[3].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[3].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[3].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[3].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[3].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[3].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[3].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[3].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[3].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[4].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[4].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[4].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[4].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[4].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[4].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[4].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[4].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[4].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[4].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[5].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[5].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[5].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[5].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[5].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[5].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[5].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[5].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[5].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[5].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[6].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[6].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[6].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[6].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[6].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[6].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[6].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[6].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[6].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[6].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[7].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[7].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[7].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[7].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[7].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[7].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[7].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[7].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[7].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[7].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[8].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[8].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[8].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[8].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[8].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[8].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[8].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[8].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[8].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[8].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[9].eStateGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[9].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[9].eStateReq
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:10:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:10:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:10:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:10:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:10:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:10:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:10:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:11:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:11:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:11:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:11:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:11:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:11:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:11:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:12:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:12:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:12:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:12:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:12:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:12:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:12:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:13:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:13:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:13:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:13:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:13:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:13:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:13:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:14:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:14:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:14:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:14:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:14:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:14:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:14:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:15:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:15:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:15:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:15:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:15:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:15:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:15:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: :%.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: :%.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[9].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[9].fbPositionState1D.stEpicsToPlc.bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[9].fbPositionState1D.stPlcToEpics.bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[9].fbPositionState1D.stPlcToEpics.bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[9].fbPositionState1D.stPlcToEpics.bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[9].fbPositionState1D.stPlcToEpics.nErrorID
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[9].fbPositionState1D.stPlcToEpics.sErrorMsg
      - | expand: :%.2d:STATE
        | io: input


    * - IM1L0:XTES:FLOW_OK_RBV
      - bi
      - PRG_IM1L0_XTES.bIM1L0FlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - IM1L0:XTES:FLOW_OK
      - bo
      - PRG_IM1L0_XTES.bIM1L0FlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - IM1L0:XTES:CLF:LOCK_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM1L0:XTES:CLF:LOCK
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM1L0:XTES:CLZ:LOCK_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM1L0:XTES:CLZ:LOCK
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM1L0:XTES:MMS:STATE:GET_RBV
      - mbbi
      - PRG_IM1L0_XTES.fbIM1L0.eEnumGet
      - | io: input


    * - IM1L0:XTES:MMS:STATE:SET_RBV
      - mbbi
      - PRG_IM1L0_XTES.fbIM1L0.eEnumSet
      - | io: output


    * - IM1L0:XTES:MMS:STATE:SET
      - mbbo
      - PRG_IM1L0_XTES.fbIM1L0.eEnumSet
      - | io: output


    * - IM1L0:XTES:MFW:ERR:RESET_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.bResetError
      - | io: output


    * - IM1L0:XTES:MFW:ERR:RESET
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.bResetError
      - | io: output


    * - IM1L0:XTES:MFW:RAW:DONE_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.bDone
      - | io: input


    * - IM1L0:XTES:MFW:RAW:SEND_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.bSend
      - | io: output


    * - IM1L0:XTES:MFW:RAW:SEND
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.bSend
      - | io: output


    * - IM1L0:XTES:MFW:RAW:ERR:RECV_RBV
      - mbbi
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.eRecvErrorID
      - | io: input


    * - IM1L0:XTES:MFW:RAW:ERR:SEND_RBV
      - mbbi
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.eSendErrorID
      - | io: input


    * - IM1L0:XTES:MFW:RAW:ERR:SER_RBV
      - mbbi
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.eSerialLineErrorID
      - | io: input


    * - IM1L0:XTES:MFW:RAW:CMD_RBV
      - waveform
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.sCmd
      - | io: output


    * - IM1L0:XTES:MFW:RAW:CMD
      - waveform
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.sCmd
      - | io: output


    * - IM1L0:XTES:MFW:RAW:RESP_RBV
      - waveform
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.sResponse
      - | io: input


    * - IM1L0:XTES:MFW:GET_RBV
      - mbbi
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.nGetPos
      - | io: input


    * - IM1L0:XTES:MFW:SET_RBV
      - mbbi
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.nSetPos
      - | io: output


    * - IM1L0:XTES:MFW:SET
      - mbbo
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.nSetPos
      - | io: output


    * - IM1L0:XTES:MFW:ERR:MSG_RBV
      - waveform
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.sLastError
      - | io: input


    * - IM1L0:XTES:FSW:FLOW_OK_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - IM1L0:XTES:FSW:FLOW_OK
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - IM1L0:XTES:CIL:AUTO_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbLED.bLEDAuto
      - | io: output


    * - IM1L0:XTES:CIL:AUTO
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.fbLED.bLEDAuto
      - | io: output


    * - IM1L0:XTES:CIL:PWR_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM1L0:XTES:CIL:PWR
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM1L0:XTES:CIL:CLK:REMAINING_RBV
      - ai
      - PRG_IM1L0_XTES.fbIM1L0.fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - IM1L0:XTES:CIL:CLK:REMAINING
      - ao
      - PRG_IM1L0_XTES.fbIM1L0.fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - IM1L0:XTES:CIL:CLK:TIMEOUT_RBV
      - ai
      - PRG_IM1L0_XTES.fbIM1L0.fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - IM1L0:XTES:CIL:CLK:TIMEOUT
      - ao
      - PRG_IM1L0_XTES.fbIM1L0.fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - IM1L0:XTES:CAM:PWR_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM1L0:XTES:CAM:PWR
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM1L0:XTES:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:RESET_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM1L0:XTES:MMS:STATE:RESET
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM1L0:XTES:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - IM1L0:XTES:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - IM1L0:XTES:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - IM1L0:XTES:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:PMPS_LOADED_RBV
      - bi
      - TRUE if PMPS loaded parameters from the database.
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:PMPS_ID_RBV
      - longin
      - Assertion Request ID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:PMPS_STATE_RBV
      - waveform
      - PMPS Database Lookup Key
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Veto_RBV
      - waveform
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.aVetoDevices
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:01:Height_RBV
      - ai
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:01:Width_RBV
      - ai
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:01:OK_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:02:Height_RBV
      - ai
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:02:Width_RBV
      - ai
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:02:OK_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:03:Height_RBV
      - ai
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:03:Width_RBV
      - ai
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:03:OK_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:04:Height_RBV
      - ai
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:04:Width_RBV
      - ai
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:04:OK_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:BeamClassRanges_RBV
      - longin
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBCRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:BeamClass_RBV
      - longin
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBeamClass
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:MachineMode_RBV
      - longin
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nMachineMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Rate_RBV
      - longin
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nRate
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU Hz
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Transmission_RBV
      - ai
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nTran
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:PhotonEnergy_RBV
      - ai
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neV
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:eVRanges_RBV
      - longin
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neVRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:BP:Valid_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.xValid
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:ReParams:PressSP_RBV
      - ai
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nPressSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "TORR"
        | field: PREC 2
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:TRANS:ReParams:TempSP_RBV
      - ai
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nTempSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "C"
        | field: PREC 2
        | io: input


    * - IM1L0:XTES:MMS:STATE:BUSY_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPlcToEpics.bBusy
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1L0:XTES:MMS:STATE:DONE_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPlcToEpics.bDone
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1L0:XTES:MMS:STATE:ERR_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPlcToEpics.bError
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1L0:XTES:MMS:STATE:ERRID_RBV
      - longin
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPlcToEpics.nErrorID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L0:XTES:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.stPlcToEpics.sErrorMsg
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L1:PPM:MMS:STATE:GET_RBV
      - mbbi
      - PRG_IM1L1_PPM.fbIM1L1.eEnumGet
      - | io: input


    * - IM1L1:PPM:MMS:STATE:SET_RBV
      - mbbi
      - PRG_IM1L1_PPM.fbIM1L1.eEnumSet
      - | io: output


    * - IM1L1:PPM:MMS:STATE:SET
      - mbbo
      - PRG_IM1L1_PPM.fbIM1L1.eEnumSet
      - | io: output


    * - IM1L1:PPM:FWM:OFF_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbFlowMeter.fOffset
      - | io: output


    * - IM1L1:PPM:FWM:OFF
      - ao
      - PRG_IM1L1_PPM.fbIM1L1.fbFlowMeter.fOffset
      - | io: output


    * - IM1L1:PPM:FWM:VAL_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbFlowMeter.fReal
      - | io: input


    * - IM1L1:PPM:FWM:RES_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbFlowMeter.fResolution
      - | io: output


    * - IM1L1:PPM:FWM:RES
      - ao
      - PRG_IM1L1_PPM.fbIM1L1.fbFlowMeter.fResolution
      - | io: output


    * - IM1L1:PPM:FSW:FLOW_OK_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - IM1L1:PPM:FSW:FLOW_OK
      - bo
      - PRG_IM1L1_PPM.fbIM1L1.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - IM1L1:PPM:CAM:PWR_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM1L1:PPM:CAM:PWR
      - bo
      - PRG_IM1L1_PPM.fbIM1L1.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM1L1:PPM:CAM:CIL:PCT_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM1L1:PPM:CAM:CIL:PCT
      - ao
      - PRG_IM1L1_PPM.fbIM1L1.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM1L1:PPM:SPM:BACK:MODE_RBV
      - mbbi
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.BACKGROUND_MODE
      - | io: output


    * - IM1L1:PPM:SPM:BACK:MODE
      - mbbo
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.BACKGROUND_MODE
      - | io: output


    * - IM1L1:PPM:SPM:BACK:COLL_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.bBackgroundCollect
      - | io: output


    * - IM1L1:PPM:SPM:BACK:COLL
      - bo
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.bBackgroundCollect
      - | io: output


    * - IM1L1:PPM:SPM:BACK:MANUAL_COLLECTING_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.bBackgroundCollecting
      - | io: input


    * - IM1L1:PPM:SPM:BACK:RESET_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.bResetAutoBackground
      - | io: output


    * - IM1L1:PPM:SPM:BACK:RESET
      - bo
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.bResetAutoBackground
      - | io: output


    * - IM1L1:PPM:SPM:BACK:VOLT_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fBackgroundVoltage
      - | field: EGU mV
        | io: output


    * - IM1L1:PPM:SPM:BACK:VOLT
      - ao
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fBackgroundVoltage
      - | field: EGU mV
        | io: output


    * - IM1L1:PPM:SPM:MJ_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibMJ
      - | field: EGU mJ
        | io: input


    * - IM1L1:PPM:SPM:MJ_BUFFER_RBV
      - waveform
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - IM1L1:PPM:SPM:HXR_NC_BeamRateFromEpics_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fHXR_NC_Frequency; Linked to PV: [None, None, 'EVNT:SYS0:1:NC_HARDRATE']
      - | io: output
        | link: [None, None, 'EVNT:SYS0:1:NC_HARDRATE']


    * - IM1L1:PPM:SPM:HXR_NC_BeamRateFromEpics
      - ao
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fHXR_NC_Frequency; Linked to PV: [None, None, 'EVNT:SYS0:1:NC_HARDRATE']
      - | io: output
        | link: [None, None, 'EVNT:SYS0:1:NC_HARDRATE']


    * - IM1L1:PPM:SPM:WATT_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fPulseWattage
      - | field: EGU mW
        | io: input


    * - IM1L1:PPM:SPM:WATT_BUFFER_RBV
      - waveform
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fPulseWattageBuffer
      - | field: EGU mW
        | io: input


    * - IM1L1:PPM:SPM:RESP_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fResponsivity
      - | field: EGU V/W
        | io: input


    * - IM1L1:PPM:SPM:SXR_NC_BeamRateFromEpics_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fSXR_NC_Frequency; Linked to PV: [None, None, 'EVNT:SYS0:1:NC_SOFTRATE']
      - | io: output
        | link: [None, None, 'EVNT:SYS0:1:NC_SOFTRATE']


    * - IM1L1:PPM:SPM:SXR_NC_BeamRateFromEpics
      - ao
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fSXR_NC_Frequency; Linked to PV: [None, None, 'EVNT:SYS0:1:NC_SOFTRATE']
      - | io: output
        | link: [None, None, 'EVNT:SYS0:1:NC_SOFTRATE']


    * - IM1L1:PPM:SPM:VOLT_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fVoltage
      - | field: EGU mV
        | io: input


    * - IM1L1:PPM:SPM:VOLT_BUFFER_RBV
      - waveform
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - IM1L1:PPM:SPM:STC:CONN_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fbTempSensor.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM1L1:PPM:SPM:STC:ERR_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fbTempSensor.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1L1:PPM:SPM:STC:FAULT_SP_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fbTempSensor.fFaultThreshold
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - IM1L1:PPM:SPM:STC:FAULT_SP_HYS_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fbTempSensor.fHysteresis
      - | field: EGU %
        | field: PREC 2
        | io: input


    * - IM1L1:PPM:SPM:STC:TEMP_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fbTempSensor.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - IM1L1:PPM:SPM:BACK:TIME_RBV
      - longin
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.uBackgroundCollectionTime
      - | field: EGU s
        | io: output


    * - IM1L1:PPM:SPM:BACK:TIME
      - longout
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.uBackgroundCollectionTime
      - | field: EGU s
        | io: output


    * - IM1L1:PPM:SPM:HXR_SC_BeamRateFromEpics_RBV
      - longin
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.uHXR_SC_Frequency; Linked to PV: [None, None, 'TPG:SYS0:1:DST03:RATE_RBV']
      - | io: output
        | link: [None, None, 'TPG:SYS0:1:DST03:RATE_RBV']


    * - IM1L1:PPM:SPM:HXR_SC_BeamRateFromEpics
      - longout
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.uHXR_SC_Frequency; Linked to PV: [None, None, 'TPG:SYS0:1:DST03:RATE_RBV']
      - | io: output
        | link: [None, None, 'TPG:SYS0:1:DST03:RATE_RBV']


    * - IM1L1:PPM:SPM:SXR_SC_BeamRateFromEpics_RBV
      - longin
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.uSXR_SC_Frequency; Linked to PV: [None, None, 'TPG:SYS0:1:DST04:RATE_RBV']
      - | io: output
        | link: [None, None, 'TPG:SYS0:1:DST04:RATE_RBV']


    * - IM1L1:PPM:SPM:SXR_SC_BeamRateFromEpics
      - longout
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.uSXR_SC_Frequency; Linked to PV: [None, None, 'TPG:SYS0:1:DST04:RATE_RBV']
      - | io: output
        | link: [None, None, 'TPG:SYS0:1:DST04:RATE_RBV']


    * - IM1L1:PPM:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:RESET_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM1L1:PPM:MMS:STATE:RESET
      - bo
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM1L1:PPM:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - IM1L1:PPM:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - IM1L1:PPM:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - IM1L1:PPM:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:PMPS_LOADED_RBV
      - bi
      - TRUE if PMPS loaded parameters from the database.
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:PMPS_ID_RBV
      - longin
      - Assertion Request ID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:PMPS_STATE_RBV
      - waveform
      - PMPS Database Lookup Key
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Veto_RBV
      - waveform
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.aVetoDevices
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:01:Height_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:01:Width_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:01:OK_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:02:Height_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:02:Width_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:02:OK_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:03:Height_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:03:Width_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:03:OK_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:04:Height_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:04:Width_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:04:OK_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:BeamClassRanges_RBV
      - longin
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBCRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:BeamClass_RBV
      - longin
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBeamClass
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:MachineMode_RBV
      - longin
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nMachineMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Rate_RBV
      - longin
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nRate
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU Hz
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Transmission_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nTran
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:PhotonEnergy_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neV
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:eVRanges_RBV
      - longin
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neVRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:BP:Valid_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.xValid
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:ReParams:PressSP_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nPressSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "TORR"
        | field: PREC 2
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:TRANS:ReParams:TempSP_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nTempSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "C"
        | field: PREC 2
        | io: input


    * - IM1L1:PPM:MMS:STATE:BUSY_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPlcToEpics.bBusy
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1L1:PPM:MMS:STATE:DONE_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPlcToEpics.bDone
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1L1:PPM:MMS:STATE:ERR_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPlcToEpics.bError
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1L1:PPM:MMS:STATE:ERRID_RBV
      - longin
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPlcToEpics.nErrorID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L1:PPM:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.stPlcToEpics.sErrorMsg
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM1L1:PPM:YAG:STC:CONN_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbYagTempSensor.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM1L1:PPM:YAG:STC:ERR_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbYagTempSensor.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1L1:PPM:YAG:STC:FAULT_SP_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbYagTempSensor.fFaultThreshold
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - IM1L1:PPM:YAG:STC:FAULT_SP_HYS_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbYagTempSensor.fHysteresis
      - | field: EGU %
        | field: PREC 2
        | io: input


    * - IM1L1:PPM:YAG:STC:TEMP_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbYagTempSensor.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - IM2L0:XTES:CLF:LOCK_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM2L0:XTES:CLF:LOCK
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM2L0:XTES:CLZ:LOCK_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM2L0:XTES:CLZ:LOCK
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM2L0:XTES:MMS:STATE:GET_RBV
      - mbbi
      - PRG_IM2L0_XTES.fbIM2L0.eEnumGet
      - | io: input


    * - IM2L0:XTES:MMS:STATE:SET_RBV
      - mbbi
      - PRG_IM2L0_XTES.fbIM2L0.eEnumSet
      - | io: output


    * - IM2L0:XTES:MMS:STATE:SET
      - mbbo
      - PRG_IM2L0_XTES.fbIM2L0.eEnumSet
      - | io: output


    * - IM2L0:XTES:MFW:ERR:RESET_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.bResetError
      - | io: output


    * - IM2L0:XTES:MFW:ERR:RESET
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.bResetError
      - | io: output


    * - IM2L0:XTES:MFW:RAW:DONE_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.bDone
      - | io: input


    * - IM2L0:XTES:MFW:RAW:SEND_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.bSend
      - | io: output


    * - IM2L0:XTES:MFW:RAW:SEND
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.bSend
      - | io: output


    * - IM2L0:XTES:MFW:RAW:ERR:RECV_RBV
      - mbbi
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.eRecvErrorID
      - | io: input


    * - IM2L0:XTES:MFW:RAW:ERR:SEND_RBV
      - mbbi
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.eSendErrorID
      - | io: input


    * - IM2L0:XTES:MFW:RAW:ERR:SER_RBV
      - mbbi
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.eSerialLineErrorID
      - | io: input


    * - IM2L0:XTES:MFW:RAW:CMD_RBV
      - waveform
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.sCmd
      - | io: output


    * - IM2L0:XTES:MFW:RAW:CMD
      - waveform
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.sCmd
      - | io: output


    * - IM2L0:XTES:MFW:RAW:RESP_RBV
      - waveform
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.sResponse
      - | io: input


    * - IM2L0:XTES:MFW:GET_RBV
      - mbbi
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.nGetPos
      - | io: input


    * - IM2L0:XTES:MFW:SET_RBV
      - mbbi
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.nSetPos
      - | io: output


    * - IM2L0:XTES:MFW:SET
      - mbbo
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.nSetPos
      - | io: output


    * - IM2L0:XTES:MFW:ERR:MSG_RBV
      - waveform
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.sLastError
      - | io: input


    * - IM2L0:XTES:FSW:FLOW_OK_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - IM2L0:XTES:FSW:FLOW_OK
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - IM2L0:XTES:CIL:AUTO_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbLED.bLEDAuto
      - | io: output


    * - IM2L0:XTES:CIL:AUTO
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.fbLED.bLEDAuto
      - | io: output


    * - IM2L0:XTES:CIL:PWR_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM2L0:XTES:CIL:PWR
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM2L0:XTES:CIL:CLK:REMAINING_RBV
      - ai
      - PRG_IM2L0_XTES.fbIM2L0.fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - IM2L0:XTES:CIL:CLK:REMAINING
      - ao
      - PRG_IM2L0_XTES.fbIM2L0.fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - IM2L0:XTES:CIL:CLK:TIMEOUT_RBV
      - ai
      - PRG_IM2L0_XTES.fbIM2L0.fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - IM2L0:XTES:CIL:CLK:TIMEOUT
      - ao
      - PRG_IM2L0_XTES.fbIM2L0.fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - IM2L0:XTES:CAM:PWR_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM2L0:XTES:CAM:PWR
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM2L0:XTES:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:RESET_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM2L0:XTES:MMS:STATE:RESET
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM2L0:XTES:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - IM2L0:XTES:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - IM2L0:XTES:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - IM2L0:XTES:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:PMPS_LOADED_RBV
      - bi
      - TRUE if PMPS loaded parameters from the database.
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:PMPS_ID_RBV
      - longin
      - Assertion Request ID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:PMPS_STATE_RBV
      - waveform
      - PMPS Database Lookup Key
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Veto_RBV
      - waveform
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.aVetoDevices
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:01:Height_RBV
      - ai
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:01:Width_RBV
      - ai
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:01:OK_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:02:Height_RBV
      - ai
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:02:Width_RBV
      - ai
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:02:OK_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:03:Height_RBV
      - ai
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:03:Width_RBV
      - ai
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:03:OK_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:04:Height_RBV
      - ai
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:04:Width_RBV
      - ai
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:04:OK_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:BeamClassRanges_RBV
      - longin
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBCRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:BeamClass_RBV
      - longin
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBeamClass
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:MachineMode_RBV
      - longin
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nMachineMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Rate_RBV
      - longin
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nRate
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU Hz
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Transmission_RBV
      - ai
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nTran
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:PhotonEnergy_RBV
      - ai
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neV
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:eVRanges_RBV
      - longin
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neVRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:BP:Valid_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.xValid
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:ReParams:PressSP_RBV
      - ai
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nPressSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "TORR"
        | field: PREC 2
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:TRANS:ReParams:TempSP_RBV
      - ai
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nTempSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "C"
        | field: PREC 2
        | io: input


    * - IM2L0:XTES:MMS:STATE:BUSY_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPlcToEpics.bBusy
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM2L0:XTES:MMS:STATE:DONE_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPlcToEpics.bDone
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM2L0:XTES:MMS:STATE:ERR_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPlcToEpics.bError
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM2L0:XTES:MMS:STATE:ERRID_RBV
      - longin
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPlcToEpics.nErrorID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM2L0:XTES:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.stPlcToEpics.sErrorMsg
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM3L0:PPM:MMS:STATE:GET_RBV
      - mbbi
      - PRG_IM3L0_PPM.fbIM3L0.eEnumGet
      - | io: input


    * - IM3L0:PPM:MMS:STATE:SET_RBV
      - mbbi
      - PRG_IM3L0_PPM.fbIM3L0.eEnumSet
      - | io: output


    * - IM3L0:PPM:MMS:STATE:SET
      - mbbo
      - PRG_IM3L0_PPM.fbIM3L0.eEnumSet
      - | io: output


    * - IM3L0:PPM:FWM:OFF_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbFlowMeter.fOffset
      - | io: output


    * - IM3L0:PPM:FWM:OFF
      - ao
      - PRG_IM3L0_PPM.fbIM3L0.fbFlowMeter.fOffset
      - | io: output


    * - IM3L0:PPM:FWM:VAL_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbFlowMeter.fReal
      - | io: input


    * - IM3L0:PPM:FWM:RES_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbFlowMeter.fResolution
      - | io: output


    * - IM3L0:PPM:FWM:RES
      - ao
      - PRG_IM3L0_PPM.fbIM3L0.fbFlowMeter.fResolution
      - | io: output


    * - IM3L0:PPM:FSW:FLOW_OK_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - IM3L0:PPM:FSW:FLOW_OK
      - bo
      - PRG_IM3L0_PPM.fbIM3L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - IM3L0:PPM:CAM:PWR_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM3L0:PPM:CAM:PWR
      - bo
      - PRG_IM3L0_PPM.fbIM3L0.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM3L0:PPM:CAM:CIL:PCT_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM3L0:PPM:CAM:CIL:PCT
      - ao
      - PRG_IM3L0_PPM.fbIM3L0.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM3L0:PPM:SPM:BACK:MODE_RBV
      - mbbi
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.BACKGROUND_MODE
      - | io: output


    * - IM3L0:PPM:SPM:BACK:MODE
      - mbbo
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.BACKGROUND_MODE
      - | io: output


    * - IM3L0:PPM:SPM:BACK:COLL_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.bBackgroundCollect
      - | io: output


    * - IM3L0:PPM:SPM:BACK:COLL
      - bo
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.bBackgroundCollect
      - | io: output


    * - IM3L0:PPM:SPM:BACK:MANUAL_COLLECTING_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.bBackgroundCollecting
      - | io: input


    * - IM3L0:PPM:SPM:BACK:RESET_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.bResetAutoBackground
      - | io: output


    * - IM3L0:PPM:SPM:BACK:RESET
      - bo
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.bResetAutoBackground
      - | io: output


    * - IM3L0:PPM:SPM:BACK:VOLT_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fBackgroundVoltage
      - | field: EGU mV
        | io: output


    * - IM3L0:PPM:SPM:BACK:VOLT
      - ao
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fBackgroundVoltage
      - | field: EGU mV
        | io: output


    * - IM3L0:PPM:SPM:MJ_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibMJ
      - | field: EGU mJ
        | io: input


    * - IM3L0:PPM:SPM:MJ_BUFFER_RBV
      - waveform
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - IM3L0:PPM:SPM:HXR_NC_BeamRateFromEpics_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fHXR_NC_Frequency; Linked to PV: [None, None, 'EVNT:SYS0:1:NC_HARDRATE']
      - | io: output
        | link: [None, None, 'EVNT:SYS0:1:NC_HARDRATE']


    * - IM3L0:PPM:SPM:HXR_NC_BeamRateFromEpics
      - ao
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fHXR_NC_Frequency; Linked to PV: [None, None, 'EVNT:SYS0:1:NC_HARDRATE']
      - | io: output
        | link: [None, None, 'EVNT:SYS0:1:NC_HARDRATE']


    * - IM3L0:PPM:SPM:WATT_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fPulseWattage
      - | field: EGU mW
        | io: input


    * - IM3L0:PPM:SPM:WATT_BUFFER_RBV
      - waveform
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fPulseWattageBuffer
      - | field: EGU mW
        | io: input


    * - IM3L0:PPM:SPM:RESP_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fResponsivity
      - | field: EGU V/W
        | io: input


    * - IM3L0:PPM:SPM:SXR_NC_BeamRateFromEpics_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fSXR_NC_Frequency; Linked to PV: [None, None, 'EVNT:SYS0:1:NC_SOFTRATE']
      - | io: output
        | link: [None, None, 'EVNT:SYS0:1:NC_SOFTRATE']


    * - IM3L0:PPM:SPM:SXR_NC_BeamRateFromEpics
      - ao
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fSXR_NC_Frequency; Linked to PV: [None, None, 'EVNT:SYS0:1:NC_SOFTRATE']
      - | io: output
        | link: [None, None, 'EVNT:SYS0:1:NC_SOFTRATE']


    * - IM3L0:PPM:SPM:VOLT_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fVoltage
      - | field: EGU mV
        | io: input


    * - IM3L0:PPM:SPM:VOLT_BUFFER_RBV
      - waveform
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - IM3L0:PPM:SPM:STC:CONN_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fbTempSensor.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM3L0:PPM:SPM:STC:ERR_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fbTempSensor.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM3L0:PPM:SPM:STC:FAULT_SP_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fbTempSensor.fFaultThreshold
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - IM3L0:PPM:SPM:STC:FAULT_SP_HYS_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fbTempSensor.fHysteresis
      - | field: EGU %
        | field: PREC 2
        | io: input


    * - IM3L0:PPM:SPM:STC:TEMP_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fbTempSensor.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - IM3L0:PPM:SPM:BACK:TIME_RBV
      - longin
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.uBackgroundCollectionTime
      - | field: EGU s
        | io: output


    * - IM3L0:PPM:SPM:BACK:TIME
      - longout
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.uBackgroundCollectionTime
      - | field: EGU s
        | io: output


    * - IM3L0:PPM:SPM:HXR_SC_BeamRateFromEpics_RBV
      - longin
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.uHXR_SC_Frequency; Linked to PV: [None, None, 'TPG:SYS0:1:DST03:RATE_RBV']
      - | io: output
        | link: [None, None, 'TPG:SYS0:1:DST03:RATE_RBV']


    * - IM3L0:PPM:SPM:HXR_SC_BeamRateFromEpics
      - longout
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.uHXR_SC_Frequency; Linked to PV: [None, None, 'TPG:SYS0:1:DST03:RATE_RBV']
      - | io: output
        | link: [None, None, 'TPG:SYS0:1:DST03:RATE_RBV']


    * - IM3L0:PPM:SPM:SXR_SC_BeamRateFromEpics_RBV
      - longin
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.uSXR_SC_Frequency; Linked to PV: [None, None, 'TPG:SYS0:1:DST04:RATE_RBV']
      - | io: output
        | link: [None, None, 'TPG:SYS0:1:DST04:RATE_RBV']


    * - IM3L0:PPM:SPM:SXR_SC_BeamRateFromEpics
      - longout
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.uSXR_SC_Frequency; Linked to PV: [None, None, 'TPG:SYS0:1:DST04:RATE_RBV']
      - | io: output
        | link: [None, None, 'TPG:SYS0:1:DST04:RATE_RBV']


    * - IM3L0:PPM:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:RESET_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM3L0:PPM:MMS:STATE:RESET
      - bo
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM3L0:PPM:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - IM3L0:PPM:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - IM3L0:PPM:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - IM3L0:PPM:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:PMPS_LOADED_RBV
      - bi
      - TRUE if PMPS loaded parameters from the database.
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:PMPS_ID_RBV
      - longin
      - Assertion Request ID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:PMPS_STATE_RBV
      - waveform
      - PMPS Database Lookup Key
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Veto_RBV
      - waveform
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.aVetoDevices
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:01:Height_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:01:Width_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:01:OK_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:02:Height_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:02:Width_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:02:OK_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:03:Height_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:03:Width_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:03:OK_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:04:Height_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:04:Width_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Apt:04:OK_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:BeamClassRanges_RBV
      - longin
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBCRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:BeamClass_RBV
      - longin
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBeamClass
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:MachineMode_RBV
      - longin
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nMachineMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Rate_RBV
      - longin
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nRate
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU Hz
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Transmission_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nTran
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:PhotonEnergy_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neV
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:eVRanges_RBV
      - longin
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neVRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:BP:Valid_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.xValid
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:ReParams:PressSP_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nPressSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "TORR"
        | field: PREC 2
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:TRANS:ReParams:TempSP_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nTempSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "C"
        | field: PREC 2
        | io: input


    * - IM3L0:PPM:MMS:STATE:BUSY_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPlcToEpics.bBusy
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM3L0:PPM:MMS:STATE:DONE_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPlcToEpics.bDone
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM3L0:PPM:MMS:STATE:ERR_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPlcToEpics.bError
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM3L0:PPM:MMS:STATE:ERRID_RBV
      - longin
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPlcToEpics.nErrorID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM3L0:PPM:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.stPlcToEpics.sErrorMsg
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM3L0:PPM:YAG:STC:CONN_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbYagTempSensor.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM3L0:PPM:YAG:STC:ERR_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbYagTempSensor.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM3L0:PPM:YAG:STC:FAULT_SP_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbYagTempSensor.fFaultThreshold
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - IM3L0:PPM:YAG:STC:FAULT_SP_HYS_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbYagTempSensor.fHysteresis
      - | field: EGU %
        | field: PREC 2
        | io: input


    * - IM3L0:PPM:YAG:STC:TEMP_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbYagTempSensor.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - IM4L0:SCRP:LED:01:PWR_RBV
      - bi
      - PRG_IM4L0_XTES.bIM4L0_SCRP_LED_01
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM4L0:SCRP:LED:01:PWR
      - bo
      - PRG_IM4L0_XTES.bIM4L0_SCRP_LED_01
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM4L0:XTES:CLF:LOCK_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM4L0:XTES:CLF:LOCK
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM4L0:XTES:CLZ:LOCK_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM4L0:XTES:CLZ:LOCK
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM4L0:XTES:MMS:STATE:GET_RBV
      - mbbi
      - PRG_IM4L0_XTES.fbIM4L0.eEnumGet
      - | io: input


    * - IM4L0:XTES:MMS:STATE:SET_RBV
      - mbbi
      - PRG_IM4L0_XTES.fbIM4L0.eEnumSet
      - | io: output


    * - IM4L0:XTES:MMS:STATE:SET
      - mbbo
      - PRG_IM4L0_XTES.fbIM4L0.eEnumSet
      - | io: output


    * - IM4L0:XTES:MFW:ERR:RESET_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.bResetError
      - | io: output


    * - IM4L0:XTES:MFW:ERR:RESET
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.bResetError
      - | io: output


    * - IM4L0:XTES:MFW:RAW:DONE_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.bDone
      - | io: input


    * - IM4L0:XTES:MFW:RAW:SEND_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.bSend
      - | io: output


    * - IM4L0:XTES:MFW:RAW:SEND
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.bSend
      - | io: output


    * - IM4L0:XTES:MFW:RAW:ERR:RECV_RBV
      - mbbi
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.eRecvErrorID
      - | io: input


    * - IM4L0:XTES:MFW:RAW:ERR:SEND_RBV
      - mbbi
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.eSendErrorID
      - | io: input


    * - IM4L0:XTES:MFW:RAW:ERR:SER_RBV
      - mbbi
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.eSerialLineErrorID
      - | io: input


    * - IM4L0:XTES:MFW:RAW:CMD_RBV
      - waveform
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.sCmd
      - | io: output


    * - IM4L0:XTES:MFW:RAW:CMD
      - waveform
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.sCmd
      - | io: output


    * - IM4L0:XTES:MFW:RAW:RESP_RBV
      - waveform
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.sResponse
      - | io: input


    * - IM4L0:XTES:MFW:GET_RBV
      - mbbi
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.nGetPos
      - | io: input


    * - IM4L0:XTES:MFW:SET_RBV
      - mbbi
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.nSetPos
      - | io: output


    * - IM4L0:XTES:MFW:SET
      - mbbo
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.nSetPos
      - | io: output


    * - IM4L0:XTES:MFW:ERR:MSG_RBV
      - waveform
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.sLastError
      - | io: input


    * - IM4L0:XTES:FSW:FLOW_OK_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - IM4L0:XTES:FSW:FLOW_OK
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - IM4L0:XTES:CIL:AUTO_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbLED.bLEDAuto
      - | io: output


    * - IM4L0:XTES:CIL:AUTO
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.fbLED.bLEDAuto
      - | io: output


    * - IM4L0:XTES:CIL:PWR_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM4L0:XTES:CIL:PWR
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM4L0:XTES:CIL:CLK:REMAINING_RBV
      - ai
      - PRG_IM4L0_XTES.fbIM4L0.fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - IM4L0:XTES:CIL:CLK:REMAINING
      - ao
      - PRG_IM4L0_XTES.fbIM4L0.fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - IM4L0:XTES:CIL:CLK:TIMEOUT_RBV
      - ai
      - PRG_IM4L0_XTES.fbIM4L0.fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - IM4L0:XTES:CIL:CLK:TIMEOUT
      - ao
      - PRG_IM4L0_XTES.fbIM4L0.fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - IM4L0:XTES:CAM:PWR_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM4L0:XTES:CAM:PWR
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM4L0:XTES:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | array: 1..4
        | expand: :%.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:RESET_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM4L0:XTES:MMS:STATE:RESET
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM4L0:XTES:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - IM4L0:XTES:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - IM4L0:XTES:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - IM4L0:XTES:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: output


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:PMPS_LOADED_RBV
      - bi
      - TRUE if PMPS loaded parameters from the database.
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:PMPS_ID_RBV
      - longin
      - Assertion Request ID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:PMPS_STATE_RBV
      - waveform
      - PMPS Database Lookup Key
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Veto_RBV
      - waveform
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.aVetoDevices
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:01:Height_RBV
      - ai
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:01:Width_RBV
      - ai
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:01:OK_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:02:Height_RBV
      - ai
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:02:Width_RBV
      - ai
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:02:OK_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:03:Height_RBV
      - ai
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:03:Width_RBV
      - ai
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:03:OK_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:04:Height_RBV
      - ai
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:04:Width_RBV
      - ai
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU mm
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Apt:04:OK_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:BeamClassRanges_RBV
      - longin
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBCRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:BeamClass_RBV
      - longin
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBeamClass
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:MachineMode_RBV
      - longin
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nMachineMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Rate_RBV
      - longin
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nRate
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU Hz
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Transmission_RBV
      - ai
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nTran
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:PhotonEnergy_RBV
      - ai
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neV
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:eVRanges_RBV
      - longin
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neVRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU eV
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:BP:Valid_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.xValid
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:ReParams:PressSP_RBV
      - ai
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nPressSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "TORR"
        | field: PREC 2
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:TRANS:ReParams:TempSP_RBV
      - ai
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nTempSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: EGU "C"
        | field: PREC 2
        | io: input


    * - IM4L0:XTES:MMS:STATE:BUSY_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPlcToEpics.bBusy
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM4L0:XTES:MMS:STATE:DONE_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPlcToEpics.bDone
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM4L0:XTES:MMS:STATE:ERR_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPlcToEpics.bError
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM4L0:XTES:MMS:STATE:ERRID_RBV
      - longin
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPlcToEpics.nErrorID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - IM4L0:XTES:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.stPlcToEpics.sErrorMsg
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..4')]}}
        | io: input


    * - PF1L0:WFS:MMS:STATE:GET_RBV
      - mbbi
      - PRG_PF1L0_WFS.fbPF1L0.eEnumGet
      - | io: input


    * - PF1L0:WFS:MMS:STATE:SET_RBV
      - mbbi
      - PRG_PF1L0_WFS.fbPF1L0.eEnumSet
      - | io: output


    * - PF1L0:WFS:MMS:STATE:SET
      - mbbo
      - PRG_PF1L0_WFS.fbPF1L0.eEnumSet
      - | io: output


    * - PF1L0:WFS:FWM:OFF_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbFlowMeter.fOffset
      - | io: output


    * - PF1L0:WFS:FWM:OFF
      - ao
      - PRG_PF1L0_WFS.fbPF1L0.fbFlowMeter.fOffset
      - | io: output


    * - PF1L0:WFS:FWM:VAL_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbFlowMeter.fReal
      - | io: input


    * - PF1L0:WFS:FWM:RES_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbFlowMeter.fResolution
      - | io: output


    * - PF1L0:WFS:FWM:RES
      - ao
      - PRG_PF1L0_WFS.fbPF1L0.fbFlowMeter.fResolution
      - | io: output


    * - PF1L0:WFS:FSW:FLOW_OK_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - PF1L0:WFS:FSW:FLOW_OK
      - bo
      - PRG_PF1L0_WFS.fbPF1L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - PF1L0:WFS:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | array: 1..6
        | expand: :%.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:RESET_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - PF1L0:WFS:MMS:STATE:RESET
      - bo
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stEpicsToPlc.bReset
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - PF1L0:WFS:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: output


    * - PF1L0:WFS:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSEpicsToPlc.bArbiterEnabled
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: output


    * - PF1L0:WFS:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: output


    * - PF1L0:WFS:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSEpicsToPlc.bMaintMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: output


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:PMPS_LOADED_RBV
      - bi
      - TRUE if PMPS loaded parameters from the database.
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:PMPS_ID_RBV
      - longin
      - Assertion Request ID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:PMPS_STATE_RBV
      - waveform
      - PMPS Database Lookup Key
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Veto_RBV
      - waveform
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.aVetoDevices
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:01:Height_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:01:Width_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:01:OK_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[1].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:02:Height_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:02:Width_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:02:OK_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[2].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:03:Height_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:03:Width_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:03:OK_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[3].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:04:Height_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Height
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:04:Width_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].Width
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU mm
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Apt:04:OK_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.astApertures[4].xOK
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:BeamClassRanges_RBV
      - longin
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBCRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:BeamClass_RBV
      - longin
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nBeamClass
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:MachineMode_RBV
      - longin
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nMachineMode
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Rate_RBV
      - longin
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nRate
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU Hz
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Transmission_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.nTran
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:PhotonEnergy_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neV
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU eV
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:eVRanges_RBV
      - longin
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.neVRange
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU eV
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:BP:Valid_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stBeamParams.xValid
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:ReParams:PressSP_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nPressSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU "TORR"
        | field: PREC 2
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:TRANS:ReParams:TempSP_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPMPSPlcToEpics.stTransitionDb.stReactiveParams.nTempSP
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: EGU "C"
        | field: PREC 2
        | io: input


    * - PF1L0:WFS:MMS:STATE:BUSY_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPlcToEpics.bBusy
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - PF1L0:WFS:MMS:STATE:DONE_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPlcToEpics.bDone
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - PF1L0:WFS:MMS:STATE:ERR_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPlcToEpics.bError
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - PF1L0:WFS:MMS:STATE:ERRID_RBV
      - longin
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPlcToEpics.nErrorID
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - PF1L0:WFS:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.stPlcToEpics.sErrorMsg
      - | _subitem_: {'astPositionState': {'_pragma_': [('array', '1..6')]}}
        | io: input


    * - PF1L0:WFS:STC:01:CONN_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbThermoCouple1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - PF1L0:WFS:STC:01:ERR_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbThermoCouple1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - PF1L0:WFS:STC:01:FAULT_SP_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbThermoCouple1.fFaultThreshold
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - PF1L0:WFS:STC:01:FAULT_SP_HYS_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbThermoCouple1.fHysteresis
      - | field: EGU %
        | field: PREC 2
        | io: input


    * - PF1L0:WFS:STC:01:TEMP_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbThermoCouple1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - PF1L0:WFS:STC:02:CONN_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbThermoCouple2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - PF1L0:WFS:STC:02:ERR_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbThermoCouple2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - PF1L0:WFS:STC:02:FAULT_SP_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbThermoCouple2.fFaultThreshold
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - PF1L0:WFS:STC:02:FAULT_SP_HYS_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbThermoCouple2.fHysteresis
      - | field: EGU %
        | field: PREC 2
        | io: input


    * - PF1L0:WFS:STC:02:TEMP_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbThermoCouple2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL1L0:POWER:GO_RBV
      - bi
      - PRG_SL1L0_POWER.bExecuteMotion
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:GO
      - bo
      - PRG_SL1L0_POWER.bExecuteMotion
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:BOTTOM:RTD:01:CONN_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL1L0:POWER:BOTTOM:RTD:01:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:BOTTOM:RTD:01:TEMP_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL1L0:POWER:BOTTOM:RTD:02:CONN_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL1L0:POWER:BOTTOM:RTD:02:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:BOTTOM:RTD:02:TEMP_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL1L0:POWER:NORTH:RTD:01:CONN_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_North_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL1L0:POWER:NORTH:RTD:01:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_North_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:NORTH:RTD:01:TEMP_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.RTD_North_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL1L0:POWER:NORTH:RTD:02:CONN_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_North_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL1L0:POWER:NORTH:RTD:02:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_North_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:NORTH:RTD:02:TEMP_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.RTD_North_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL1L0:POWER:SOUTH:RTD:01:CONN_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_South_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL1L0:POWER:SOUTH:RTD:01:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_South_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:SOUTH:RTD:01:TEMP_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.RTD_South_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL1L0:POWER:SOUTH:RTD:02:CONN_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_South_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL1L0:POWER:SOUTH:RTD:02:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_South_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:SOUTH:RTD:02:TEMP_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.RTD_South_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL1L0:POWER:TOP:RTD:01:CONN_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL1L0:POWER:TOP:RTD:01:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:TOP:RTD:01:TEMP_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL1L0:POWER:TOP:RTD:02:CONN_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL1L0:POWER:TOP:RTD:02:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:TOP:RTD:02:TEMP_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL1L0:POWER:BLOCK_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.bBlock
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:BLOCK
      - bo
      - PRG_SL1L0_POWER.fbSL1L0.bBlock
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:CLOSE_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.bClose
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:CLOSE
      - bo
      - PRG_SL1L0_POWER.fbSL1L0.bClose
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:PMPS_OK_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.bMoveOk
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:OPEN_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.bOpen
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:OPEN
      - bo
      - PRG_SL1L0_POWER.fbSL1L0.bOpen
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:BOTTOM:AT_STATE_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbBottom.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:BOTTOM:BUSY_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbBottom.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:BOTTOM:DMOV_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbBottom.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:BOTTOM:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbBottom.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:BOTTOM:GO_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbBottom.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:BOTTOM:GO
      - bo
      - PRG_SL1L0_POWER.fbSL1L0.fbBottom.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:BOTTOM:ERRMSG_RBV
      - waveform
      - PRG_SL1L0_POWER.fbSL1L0.fbBottom.sError
      - | io: input


    * - SL1L0:POWER:BOTTOM:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:BOTTOM:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - SL1L0:POWER:BOTTOM:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - SL1L0:POWER:BOTTOM:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - SL1L0:POWER:BOTTOM:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - SL1L0:POWER:BOTTOM:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - SL1L0:POWER:BOTTOM:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - SL1L0:POWER:FSW:FLOW_OK_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - SL1L0:POWER:FSW:FLOW_OK
      - bo
      - PRG_SL1L0_POWER.fbSL1L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - SL1L0:POWER:NORTH:AT_STATE_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbNorth.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:NORTH:BUSY_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbNorth.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:NORTH:DMOV_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbNorth.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:NORTH:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbNorth.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:NORTH:GO_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbNorth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:NORTH:GO
      - bo
      - PRG_SL1L0_POWER.fbSL1L0.fbNorth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:NORTH:ERRMSG_RBV
      - waveform
      - PRG_SL1L0_POWER.fbSL1L0.fbNorth.sError
      - | io: input


    * - SL1L0:POWER:NORTH:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:NORTH:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - SL1L0:POWER:NORTH:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - SL1L0:POWER:NORTH:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - SL1L0:POWER:NORTH:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - SL1L0:POWER:NORTH:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - SL1L0:POWER:NORTH:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - SL1L0:POWER:SOUTH:AT_STATE_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbSouth.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:SOUTH:BUSY_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbSouth.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:SOUTH:DMOV_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbSouth.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:SOUTH:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbSouth.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:SOUTH:GO_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbSouth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:SOUTH:GO
      - bo
      - PRG_SL1L0_POWER.fbSL1L0.fbSouth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:SOUTH:ERRMSG_RBV
      - waveform
      - PRG_SL1L0_POWER.fbSL1L0.fbSouth.sError
      - | io: input


    * - SL1L0:POWER:SOUTH:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:SOUTH:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - SL1L0:POWER:SOUTH:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - SL1L0:POWER:SOUTH:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - SL1L0:POWER:SOUTH:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - SL1L0:POWER:SOUTH:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - SL1L0:POWER:SOUTH:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - SL1L0:POWER:TOP:AT_STATE_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbTop.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:TOP:BUSY_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbTop.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:TOP:DMOV_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbTop.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:TOP:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbTop.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:TOP:GO_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbTop.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:TOP:GO
      - bo
      - PRG_SL1L0_POWER.fbSL1L0.fbTop.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:TOP:ERRMSG_RBV
      - waveform
      - PRG_SL1L0_POWER.fbSL1L0.fbTop.sError
      - | io: input


    * - SL1L0:POWER:TOP:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:TOP:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - SL1L0:POWER:TOP:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - SL1L0:POWER:TOP:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - SL1L0:POWER:TOP:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - SL1L0:POWER:TOP:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - SL1L0:POWER:TOP:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - SL1L0:POWER:ACTUAL_XWIDTH_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rActApertureSizeX
      - | io: output


    * - SL1L0:POWER:ACTUAL_XWIDTH
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rActApertureSizeX
      - | io: output


    * - SL1L0:POWER:ACTUAL_YWIDTH_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rActApertureSizeY
      - | io: output


    * - SL1L0:POWER:ACTUAL_YWIDTH
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rActApertureSizeY
      - | io: output


    * - SL1L0:POWER:ACTUAL_XCENTER_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rActCenterX
      - | io: output


    * - SL1L0:POWER:ACTUAL_XCENTER
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rActCenterX
      - | io: output


    * - SL1L0:POWER:ACTUAL_YCENTER_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rActCenterY
      - | io: output


    * - SL1L0:POWER:ACTUAL_YCENTER
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rActCenterY
      - | io: output


    * - SL1L0:POWER:ZeroOffset_Bottom_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rEncoderOffsetBottom
      - | io: output


    * - SL1L0:POWER:ZeroOffset_Bottom
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rEncoderOffsetBottom
      - | io: output


    * - SL1L0:POWER:ZeroOffset_North_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rEncoderOffsetNorth
      - | io: output


    * - SL1L0:POWER:ZeroOffset_North
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rEncoderOffsetNorth
      - | io: output


    * - SL1L0:POWER:ZeroOffset_South_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rEncoderOffsetSouth
      - | io: output


    * - SL1L0:POWER:ZeroOffset_South
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rEncoderOffsetSouth
      - | io: output


    * - SL1L0:POWER:Offset_Top_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rEncoderOffsetTop
      - | io: output


    * - SL1L0:POWER:Offset_Top
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rEncoderOffsetTop
      - | io: output


    * - SL1L0:POWER:XWID_REQ_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rReqApertureSizeX
      - | io: output


    * - SL1L0:POWER:XWID_REQ
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rReqApertureSizeX
      - | io: output


    * - SL1L0:POWER:YWID_REQ_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rReqApertureSizeY
      - | io: output


    * - SL1L0:POWER:YWID_REQ
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rReqApertureSizeY
      - | io: output


    * - SL1L0:POWER:XCEN_REQ_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rReqCenterX
      - | io: output


    * - SL1L0:POWER:XCEN_REQ
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rReqCenterX
      - | io: output


    * - SL1L0:POWER:YCEN_REQ_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rReqCenterY
      - | io: output


    * - SL1L0:POWER:YCEN_REQ
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rReqCenterY
      - | io: output


    * - SL1L0:POWER:XCEN_SETZERO_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.rSetCenterX
      - | io: output


    * - SL1L0:POWER:XCEN_SETZERO
      - bo
      - PRG_SL1L0_POWER.fbSL1L0.rSetCenterX
      - | io: output


    * - SL1L0:POWER:YCEN_SETZERO_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.rSetCenterY
      - | io: output


    * - SL1L0:POWER:YCEN_SETZERO
      - bo
      - PRG_SL1L0_POWER.fbSL1L0.rSetCenterY
      - | io: output


    * - SL2L0:POWER:GO_RBV
      - bi
      - PRG_SL2L0_POWER.bExecuteMotion
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:GO
      - bo
      - PRG_SL2L0_POWER.bExecuteMotion
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:BOTTOM:RTD:01:CONN_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL2L0:POWER:BOTTOM:RTD:01:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:BOTTOM:RTD:01:TEMP_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL2L0:POWER:BOTTOM:RTD:02:CONN_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL2L0:POWER:BOTTOM:RTD:02:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:BOTTOM:RTD:02:TEMP_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL2L0:POWER:NORTH:RTD:01:CONN_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_North_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL2L0:POWER:NORTH:RTD:01:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_North_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:NORTH:RTD:01:TEMP_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.RTD_North_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL2L0:POWER:NORTH:RTD:02:CONN_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_North_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL2L0:POWER:NORTH:RTD:02:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_North_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:NORTH:RTD:02:TEMP_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.RTD_North_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL2L0:POWER:SOUTH:RTD:01:CONN_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_South_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL2L0:POWER:SOUTH:RTD:01:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_South_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:SOUTH:RTD:01:TEMP_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.RTD_South_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL2L0:POWER:SOUTH:RTD:02:CONN_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_South_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL2L0:POWER:SOUTH:RTD:02:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_South_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:SOUTH:RTD:02:TEMP_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.RTD_South_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL2L0:POWER:TOP:RTD:01:CONN_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL2L0:POWER:TOP:RTD:01:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:TOP:RTD:01:TEMP_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL2L0:POWER:TOP:RTD:02:CONN_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL2L0:POWER:TOP:RTD:02:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:TOP:RTD:02:TEMP_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL2L0:POWER:BLOCK_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.bBlock
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:BLOCK
      - bo
      - PRG_SL2L0_POWER.fbSL2L0.bBlock
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:CLOSE_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.bClose
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:CLOSE
      - bo
      - PRG_SL2L0_POWER.fbSL2L0.bClose
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:PMPS_OK_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.bMoveOk
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:OPEN_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.bOpen
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:OPEN
      - bo
      - PRG_SL2L0_POWER.fbSL2L0.bOpen
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:BOTTOM:AT_STATE_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbBottom.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:BOTTOM:BUSY_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbBottom.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:BOTTOM:DMOV_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbBottom.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:BOTTOM:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbBottom.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:BOTTOM:GO_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbBottom.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:BOTTOM:GO
      - bo
      - PRG_SL2L0_POWER.fbSL2L0.fbBottom.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:BOTTOM:ERRMSG_RBV
      - waveform
      - PRG_SL2L0_POWER.fbSL2L0.fbBottom.sError
      - | io: input


    * - SL2L0:POWER:BOTTOM:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:BOTTOM:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - SL2L0:POWER:BOTTOM:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - SL2L0:POWER:BOTTOM:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - SL2L0:POWER:BOTTOM:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - SL2L0:POWER:BOTTOM:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - SL2L0:POWER:BOTTOM:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - SL2L0:POWER:FSW:FLOW_OK_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - SL2L0:POWER:FSW:FLOW_OK
      - bo
      - PRG_SL2L0_POWER.fbSL2L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - SL2L0:POWER:NORTH:AT_STATE_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbNorth.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:NORTH:BUSY_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbNorth.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:NORTH:DMOV_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbNorth.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:NORTH:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbNorth.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:NORTH:GO_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbNorth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:NORTH:GO
      - bo
      - PRG_SL2L0_POWER.fbSL2L0.fbNorth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:NORTH:ERRMSG_RBV
      - waveform
      - PRG_SL2L0_POWER.fbSL2L0.fbNorth.sError
      - | io: input


    * - SL2L0:POWER:NORTH:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:NORTH:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - SL2L0:POWER:NORTH:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - SL2L0:POWER:NORTH:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - SL2L0:POWER:NORTH:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - SL2L0:POWER:NORTH:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - SL2L0:POWER:NORTH:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - SL2L0:POWER:SOUTH:AT_STATE_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbSouth.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:SOUTH:BUSY_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbSouth.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:SOUTH:DMOV_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbSouth.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:SOUTH:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbSouth.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:SOUTH:GO_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbSouth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:SOUTH:GO
      - bo
      - PRG_SL2L0_POWER.fbSL2L0.fbSouth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:SOUTH:ERRMSG_RBV
      - waveform
      - PRG_SL2L0_POWER.fbSL2L0.fbSouth.sError
      - | io: input


    * - SL2L0:POWER:SOUTH:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:SOUTH:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - SL2L0:POWER:SOUTH:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - SL2L0:POWER:SOUTH:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - SL2L0:POWER:SOUTH:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - SL2L0:POWER:SOUTH:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - SL2L0:POWER:SOUTH:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - SL2L0:POWER:TOP:AT_STATE_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbTop.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:TOP:BUSY_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbTop.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:TOP:DMOV_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbTop.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:TOP:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbTop.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:TOP:GO_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbTop.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:TOP:GO
      - bo
      - PRG_SL2L0_POWER.fbSL2L0.fbTop.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:TOP:ERRMSG_RBV
      - waveform
      - PRG_SL2L0_POWER.fbSL2L0.fbTop.sError
      - | io: input


    * - SL2L0:POWER:TOP:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:TOP:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - SL2L0:POWER:TOP:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - SL2L0:POWER:TOP:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - SL2L0:POWER:TOP:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - SL2L0:POWER:TOP:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - SL2L0:POWER:TOP:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - SL2L0:POWER:ACTUAL_XWIDTH_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rActApertureSizeX
      - | io: output


    * - SL2L0:POWER:ACTUAL_XWIDTH
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rActApertureSizeX
      - | io: output


    * - SL2L0:POWER:ACTUAL_YWIDTH_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rActApertureSizeY
      - | io: output


    * - SL2L0:POWER:ACTUAL_YWIDTH
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rActApertureSizeY
      - | io: output


    * - SL2L0:POWER:ACTUAL_XCENTER_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rActCenterX
      - | io: output


    * - SL2L0:POWER:ACTUAL_XCENTER
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rActCenterX
      - | io: output


    * - SL2L0:POWER:ACTUAL_YCENTER_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rActCenterY
      - | io: output


    * - SL2L0:POWER:ACTUAL_YCENTER
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rActCenterY
      - | io: output


    * - SL2L0:POWER:ZeroOffset_Bottom_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rEncoderOffsetBottom
      - | io: output


    * - SL2L0:POWER:ZeroOffset_Bottom
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rEncoderOffsetBottom
      - | io: output


    * - SL2L0:POWER:ZeroOffset_North_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rEncoderOffsetNorth
      - | io: output


    * - SL2L0:POWER:ZeroOffset_North
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rEncoderOffsetNorth
      - | io: output


    * - SL2L0:POWER:ZeroOffset_South_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rEncoderOffsetSouth
      - | io: output


    * - SL2L0:POWER:ZeroOffset_South
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rEncoderOffsetSouth
      - | io: output


    * - SL2L0:POWER:Offset_Top_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rEncoderOffsetTop
      - | io: output


    * - SL2L0:POWER:Offset_Top
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rEncoderOffsetTop
      - | io: output


    * - SL2L0:POWER:XWID_REQ_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rReqApertureSizeX
      - | io: output


    * - SL2L0:POWER:XWID_REQ
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rReqApertureSizeX
      - | io: output


    * - SL2L0:POWER:YWID_REQ_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rReqApertureSizeY
      - | io: output


    * - SL2L0:POWER:YWID_REQ
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rReqApertureSizeY
      - | io: output


    * - SL2L0:POWER:XCEN_REQ_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rReqCenterX
      - | io: output


    * - SL2L0:POWER:XCEN_REQ
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rReqCenterX
      - | io: output


    * - SL2L0:POWER:YCEN_REQ_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rReqCenterY
      - | io: output


    * - SL2L0:POWER:YCEN_REQ
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rReqCenterY
      - | io: output


    * - SL2L0:POWER:XCEN_SETZERO_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.rSetCenterX
      - | io: output


    * - SL2L0:POWER:XCEN_SETZERO
      - bo
      - PRG_SL2L0_POWER.fbSL2L0.rSetCenterX
      - | io: output


    * - SL2L0:POWER:YCEN_SETZERO_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.rSetCenterY
      - | io: output


    * - SL2L0:POWER:YCEN_SETZERO
      - bo
      - PRG_SL2L0_POWER.fbSL2L0.rSetCenterY
      - | io: output


    * - RTDSL0:MPA:01:FF_Reset_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.i_xReset
      - | io: output


    * - RTDSL0:MPA:01:FF_Reset
      - bo
      - RTDSL0.RTDSL0_MPA_01.i_xReset
      - | io: output


    * - RTDSL0:MPA:01:ERROR_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.bErrorPresent
      - | io: output


    * - RTDSL0:MPA:01:ERROR
      - bo
      - RTDSL0.RTDSL0_MPA_01.q_stAct.bErrorPresent
      - | io: output


    * - RTDSL0:MPA:01:ILKOK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.bILK_OK
      - | io: input


    * - RTDSL0:MPA:01:INSERT_OK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.bInsertOK
      - | io: input


    * - RTDSL0:MPA:01:IN_CMD_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.bInsert_SW
      - | io: output


    * - RTDSL0:MPA:01:IN_CMD
      - bo
      - RTDSL0.RTDSL0_MPA_01.q_stAct.bInsert_SW
      - | io: output


    * - RTDSL0:MPA:01:RETRACT_OK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.bRetractOK
      - | io: input


    * - RTDSL0:MPA:01:OUT_CMD_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.bRetract_SW
      - | io: output


    * - RTDSL0:MPA:01:OUT_CMD
      - bo
      - RTDSL0.RTDSL0_MPA_01.q_stAct.bRetract_SW
      - | io: output


    * - RTDSL0:MPA:01:POS_STATE_RBV
      - mbbi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.eState
      - | field: ONST INSERTED
        | field: THST INVALID
        | field: TWST MOVING
        | field: ZRST RETRACTED
        | io: input
        | type: mbbi


    * - RTDSL0:MPA:01:IN_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.i_bInLS
      - | io: input


    * - RTDSL0:MPA:01:OUT_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.i_bOutLS
      - | io: input


    * - RTDSL0:MPA:01:RETRACT_DO_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.q_bInsert
      - | io: input


    * - RTDSL0:MPA:01:INSERT_DO_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.q_bRetract
      - | io: input


    * - RTDSL0:MPA:01:MOT_DONE_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.xDone
      - | io: output


    * - RTDSL0:MPA:01:MOT_DONE
      - bo
      - RTDSL0.RTDSL0_MPA_01.xDone
      - | io: output


    * - RTDSL0:MPA:01:MPS_FAULT_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.xMPS_OK
      - | io: output


    * - RTDSL0:MPA:01:MPS_FAULT
      - bo
      - RTDSL0.RTDSL0_MPA_01.xMPS_OK
      - | io: output


    * - RTDSL0:MPA:02:FF_Reset_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.i_xReset
      - | io: output


    * - RTDSL0:MPA:02:FF_Reset
      - bo
      - RTDSL0.RTDSL0_MPA_02.i_xReset
      - | io: output


    * - RTDSL0:MPA:02:ERROR_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.bErrorPresent
      - | io: output


    * - RTDSL0:MPA:02:ERROR
      - bo
      - RTDSL0.RTDSL0_MPA_02.q_stAct.bErrorPresent
      - | io: output


    * - RTDSL0:MPA:02:ILKOK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.bILK_OK
      - | io: input


    * - RTDSL0:MPA:02:INSERT_OK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.bInsertOK
      - | io: input


    * - RTDSL0:MPA:02:IN_CMD_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.bInsert_SW
      - | io: output


    * - RTDSL0:MPA:02:IN_CMD
      - bo
      - RTDSL0.RTDSL0_MPA_02.q_stAct.bInsert_SW
      - | io: output


    * - RTDSL0:MPA:02:RETRACT_OK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.bRetractOK
      - | io: input


    * - RTDSL0:MPA:02:OUT_CMD_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.bRetract_SW
      - | io: output


    * - RTDSL0:MPA:02:OUT_CMD
      - bo
      - RTDSL0.RTDSL0_MPA_02.q_stAct.bRetract_SW
      - | io: output


    * - RTDSL0:MPA:02:POS_STATE_RBV
      - mbbi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.eState
      - | field: ONST INSERTED
        | field: THST INVALID
        | field: TWST MOVING
        | field: ZRST RETRACTED
        | io: input
        | type: mbbi


    * - RTDSL0:MPA:02:IN_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.i_bInLS
      - | io: input


    * - RTDSL0:MPA:02:OUT_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.i_bOutLS
      - | io: input


    * - RTDSL0:MPA:02:RETRACT_DO_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.q_bInsert
      - | io: input


    * - RTDSL0:MPA:02:INSERT_DO_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.q_bRetract
      - | io: input


    * - RTDSL0:MPA:02:MOT_DONE_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.xDone
      - | io: output


    * - RTDSL0:MPA:02:MOT_DONE
      - bo
      - RTDSL0.RTDSL0_MPA_02.xDone
      - | io: output


    * - RTDSL0:MPA:02:MPS_FAULT_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.xMPS_OK
      - | io: output


    * - RTDSL0:MPA:02:MPS_FAULT
      - bo
      - RTDSL0.RTDSL0_MPA_02.xMPS_OK
      - | io: output


    * - RTDSL0:MPA:03:FF_Reset_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.i_xReset
      - | io: output


    * - RTDSL0:MPA:03:FF_Reset
      - bo
      - RTDSL0.RTDSL0_MPA_03.i_xReset
      - | io: output


    * - RTDSL0:MPA:03:ERROR_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.bErrorPresent
      - | io: output


    * - RTDSL0:MPA:03:ERROR
      - bo
      - RTDSL0.RTDSL0_MPA_03.q_stAct.bErrorPresent
      - | io: output


    * - RTDSL0:MPA:03:ILKOK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.bILK_OK
      - | io: input


    * - RTDSL0:MPA:03:INSERT_OK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.bInsertOK
      - | io: input


    * - RTDSL0:MPA:03:IN_CMD_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.bInsert_SW
      - | io: output


    * - RTDSL0:MPA:03:IN_CMD
      - bo
      - RTDSL0.RTDSL0_MPA_03.q_stAct.bInsert_SW
      - | io: output


    * - RTDSL0:MPA:03:RETRACT_OK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.bRetractOK
      - | io: input


    * - RTDSL0:MPA:03:OUT_CMD_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.bRetract_SW
      - | io: output


    * - RTDSL0:MPA:03:OUT_CMD
      - bo
      - RTDSL0.RTDSL0_MPA_03.q_stAct.bRetract_SW
      - | io: output


    * - RTDSL0:MPA:03:POS_STATE_RBV
      - mbbi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.eState
      - | field: ONST INSERTED
        | field: THST INVALID
        | field: TWST MOVING
        | field: ZRST RETRACTED
        | io: input
        | type: mbbi


    * - RTDSL0:MPA:03:IN_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.i_bInLS
      - | io: input


    * - RTDSL0:MPA:03:OUT_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.i_bOutLS
      - | io: input


    * - RTDSL0:MPA:03:RETRACT_DO_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.q_bInsert
      - | io: input


    * - RTDSL0:MPA:03:INSERT_DO_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.q_bRetract
      - | io: input


    * - RTDSL0:MPA:03:MOT_DONE_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.xDone
      - | io: output


    * - RTDSL0:MPA:03:MOT_DONE
      - bo
      - RTDSL0.RTDSL0_MPA_03.xDone
      - | io: output


    * - RTDSL0:MPA:03:MPS_FAULT_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.xMPS_OK
      - | io: output


    * - RTDSL0:MPA:03:MPS_FAULT
      - bo
      - RTDSL0.RTDSL0_MPA_03.xMPS_OK
      - | io: output


    * - RTDSL0:MPA:04:FF_Reset_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.i_xReset
      - | io: output


    * - RTDSL0:MPA:04:FF_Reset
      - bo
      - RTDSL0.RTDSL0_MPA_04.i_xReset
      - | io: output


    * - RTDSL0:MPA:04:ERROR_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.bErrorPresent
      - | io: output


    * - RTDSL0:MPA:04:ERROR
      - bo
      - RTDSL0.RTDSL0_MPA_04.q_stAct.bErrorPresent
      - | io: output


    * - RTDSL0:MPA:04:ILKOK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.bILK_OK
      - | io: input


    * - RTDSL0:MPA:04:INSERT_OK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.bInsertOK
      - | io: input


    * - RTDSL0:MPA:04:IN_CMD_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.bInsert_SW
      - | io: output


    * - RTDSL0:MPA:04:IN_CMD
      - bo
      - RTDSL0.RTDSL0_MPA_04.q_stAct.bInsert_SW
      - | io: output


    * - RTDSL0:MPA:04:RETRACT_OK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.bRetractOK
      - | io: input


    * - RTDSL0:MPA:04:OUT_CMD_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.bRetract_SW
      - | io: output


    * - RTDSL0:MPA:04:OUT_CMD
      - bo
      - RTDSL0.RTDSL0_MPA_04.q_stAct.bRetract_SW
      - | io: output


    * - RTDSL0:MPA:04:POS_STATE_RBV
      - mbbi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.eState
      - | field: ONST INSERTED
        | field: THST INVALID
        | field: TWST MOVING
        | field: ZRST RETRACTED
        | io: input
        | type: mbbi


    * - RTDSL0:MPA:04:IN_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.i_bInLS
      - | io: input


    * - RTDSL0:MPA:04:OUT_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.i_bOutLS
      - | io: input


    * - RTDSL0:MPA:04:RETRACT_DO_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.q_bInsert
      - | io: input


    * - RTDSL0:MPA:04:INSERT_DO_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.q_bRetract
      - | io: input


    * - RTDSL0:MPA:04:MOT_DONE_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.xDone
      - | io: output


    * - RTDSL0:MPA:04:MOT_DONE
      - bo
      - RTDSL0.RTDSL0_MPA_04.xDone
      - | io: output


    * - RTDSL0:MPA:04:MPS_FAULT_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.xMPS_OK
      - | io: output


    * - RTDSL0:MPA:04:MPS_FAULT
      - bo
      - RTDSL0.RTDSL0_MPA_04.xMPS_OK
      - | io: output



