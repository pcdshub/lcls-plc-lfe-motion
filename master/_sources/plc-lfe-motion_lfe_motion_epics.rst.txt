
Data Types
----------


   
DUT_SATT_Filter
^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):MATERIAL_RBV
      - waveform
      - Filter material name
      - | io: input


    * - $(PREFIX):THICKNESS_RBV
      - ai
      - Filter material thickness
      - | field: EGU um
        | io: input


    * - $(PREFIX):TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | io: input


   
FB_MPA
^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ERROR
      - bo
      - $(SYMBOL).q_stAct.bErrorPresent
      - | io: output


    * - $(PREFIX):ERROR_RBV
      - bi
      - $(SYMBOL).q_stAct.bErrorPresent
      - | io: output


    * - $(PREFIX):FF_Reset
      - bo
      - $(SYMBOL).i_xReset
      - | io: output


    * - $(PREFIX):FF_Reset_RBV
      - bi
      - $(SYMBOL).i_xReset
      - | io: output


    * - $(PREFIX):ILKOK_RBV
      - bi
      - $(SYMBOL).q_stAct.bILK_OK
      - | io: input


    * - $(PREFIX):IN_CMD
      - bo
      - $(SYMBOL).q_stAct.bInsert_SW
      - | io: output


    * - $(PREFIX):IN_CMD_RBV
      - bi
      - $(SYMBOL).q_stAct.bInsert_SW
      - | io: output


    * - $(PREFIX):IN_RBV
      - bi
      - $(SYMBOL).q_stAct.i_bInLS
      - | io: input


    * - $(PREFIX):INSERT_DO_RBV
      - bi
      - $(SYMBOL).q_stAct.q_bRetract
      - | io: input


    * - $(PREFIX):INSERT_OK_RBV
      - bi
      - $(SYMBOL).q_stAct.bInsertOK
      - | io: input


    * - $(PREFIX):MOT_DONE
      - bo
      - $(SYMBOL).xDone
      - | io: output


    * - $(PREFIX):MOT_DONE_RBV
      - bi
      - $(SYMBOL).xDone
      - | io: output


    * - $(PREFIX):MPS_FAULT
      - bo
      - $(SYMBOL).xMPS_OK
      - | io: output


    * - $(PREFIX):MPS_FAULT_RBV
      - bi
      - $(SYMBOL).xMPS_OK
      - | io: output


    * - $(PREFIX):OUT_CMD
      - bo
      - $(SYMBOL).q_stAct.bRetract_SW
      - | io: output


    * - $(PREFIX):OUT_CMD_RBV
      - bi
      - $(SYMBOL).q_stAct.bRetract_SW
      - | io: output


    * - $(PREFIX):OUT_RBV
      - bi
      - $(SYMBOL).q_stAct.i_bOutLS
      - | io: input


    * - $(PREFIX):POS_STATE_RBV
      - mbbi
      - $(SYMBOL).q_stAct.eState
      - | field: ONST INSERTED
        | field: THST INVALID
        | field: TWST MOVING
        | field: ZRST RETRACTED
        | io: input
        | type: mbbi


    * - $(PREFIX):RETRACT_DO_RBV
      - bi
      - $(SYMBOL).q_stAct.q_bInsert
      - | io: input


    * - $(PREFIX):RETRACT_OK_RBV
      - bi
      - $(SYMBOL).q_stAct.bRetractOK
      - | io: input


 
FB_SLITS
^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ACTUAL_XCENTER
      - ao
      - $(SYMBOL).rActCenterX
      - | io: output


    * - $(PREFIX):ACTUAL_XCENTER_RBV
      - ai
      - $(SYMBOL).rActCenterX
      - | io: output


    * - $(PREFIX):ACTUAL_XWIDTH
      - ao
      - $(SYMBOL).rActApertureSizeX
      - | io: output


    * - $(PREFIX):ACTUAL_XWIDTH_RBV
      - ai
      - $(SYMBOL).rActApertureSizeX
      - | io: output


    * - $(PREFIX):ACTUAL_YCENTER
      - ao
      - $(SYMBOL).rActCenterY
      - | io: output


    * - $(PREFIX):ACTUAL_YCENTER_RBV
      - ai
      - $(SYMBOL).rActCenterY
      - | io: output


    * - $(PREFIX):ACTUAL_YWIDTH
      - ao
      - $(SYMBOL).rActApertureSizeY
      - | io: output


    * - $(PREFIX):ACTUAL_YWIDTH_RBV
      - ai
      - $(SYMBOL).rActApertureSizeY
      - | io: output


    * - $(PREFIX):BLOCK
      - bo
      - $(SYMBOL).bBlock
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):BLOCK_RBV
      - bi
      - $(SYMBOL).bBlock
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):BOTTOM:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):BOTTOM:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):BOTTOM:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbBottom.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BOTTOM:BUSY_RBV
      - bi
      - $(SYMBOL).fbBottom.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BOTTOM:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):BOTTOM:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):BOTTOM:DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):BOTTOM:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):BOTTOM:DMOV_RBV
      - bi
      - $(SYMBOL).fbBottom.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BOTTOM:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):BOTTOM:ERR_RBV
      - bi
      - $(SYMBOL).fbBottom.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BOTTOM:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbBottom.sError
      - | io: input


    * - $(PREFIX):BOTTOM:GO
      - bo
      - $(SYMBOL).fbBottom.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):BOTTOM:GO_RBV
      - bi
      - $(SYMBOL).fbBottom.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):BOTTOM:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):BOTTOM:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):BOTTOM:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):BOTTOM:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):BOTTOM:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):BOTTOM:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):BOTTOM:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):BOTTOM:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):CLOSE
      - bo
      - $(SYMBOL).bClose
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):CLOSE_RBV
      - bi
      - $(SYMBOL).bClose
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):NORTH:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):NORTH:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):NORTH:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbNorth.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):NORTH:BUSY_RBV
      - bi
      - $(SYMBOL).fbNorth.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):NORTH:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):NORTH:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):NORTH:DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):NORTH:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):NORTH:DMOV_RBV
      - bi
      - $(SYMBOL).fbNorth.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):NORTH:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):NORTH:ERR_RBV
      - bi
      - $(SYMBOL).fbNorth.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):NORTH:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbNorth.sError
      - | io: input


    * - $(PREFIX):NORTH:GO
      - bo
      - $(SYMBOL).fbNorth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):NORTH:GO_RBV
      - bi
      - $(SYMBOL).fbNorth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):NORTH:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):NORTH:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):NORTH:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):NORTH:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):NORTH:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):NORTH:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):NORTH:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):NORTH:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):Offset_Top
      - ao
      - $(SYMBOL).rEncoderOffsetTop
      - | io: output


    * - $(PREFIX):Offset_Top_RBV
      - ai
      - $(SYMBOL).rEncoderOffsetTop
      - | io: output


    * - $(PREFIX):OPEN
      - bo
      - $(SYMBOL).bOpen
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):OPEN_RBV
      - bi
      - $(SYMBOL).bOpen
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):PMPS_OK_RBV
      - bi
      - $(SYMBOL).bMoveOk
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):SOUTH:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):SOUTH:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbSouth.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:BUSY_RBV
      - bi
      - $(SYMBOL).fbSouth.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):SOUTH:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):SOUTH:DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):SOUTH:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):SOUTH:DMOV_RBV
      - bi
      - $(SYMBOL).fbSouth.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):SOUTH:ERR_RBV
      - bi
      - $(SYMBOL).fbSouth.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbSouth.sError
      - | io: input


    * - $(PREFIX):SOUTH:GO
      - bo
      - $(SYMBOL).fbSouth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SOUTH:GO_RBV
      - bi
      - $(SYMBOL).fbSouth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SOUTH:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SOUTH:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SOUTH:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):SOUTH:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SOUTH:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SOUTH:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SOUTH:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):SOUTH:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):TOP:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):TOP:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):TOP:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbTop.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TOP:BUSY_RBV
      - bi
      - $(SYMBOL).fbTop.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TOP:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):TOP:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):TOP:DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):TOP:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):TOP:DMOV_RBV
      - bi
      - $(SYMBOL).fbTop.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TOP:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):TOP:ERR_RBV
      - bi
      - $(SYMBOL).fbTop.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TOP:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbTop.sError
      - | io: input


    * - $(PREFIX):TOP:GO
      - bo
      - $(SYMBOL).fbTop.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):TOP:GO_RBV
      - bi
      - $(SYMBOL).fbTop.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):TOP:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):TOP:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):TOP:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):TOP:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):TOP:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):TOP:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):TOP:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):TOP:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):XCEN_REQ
      - ao
      - $(SYMBOL).rReqCenterX
      - | io: output


    * - $(PREFIX):XCEN_REQ_RBV
      - ai
      - $(SYMBOL).rReqCenterX
      - | io: output


    * - $(PREFIX):XCEN_SETZERO
      - bo
      - $(SYMBOL).rSetCenterX
      - | io: output


    * - $(PREFIX):XCEN_SETZERO_RBV
      - bi
      - $(SYMBOL).rSetCenterX
      - | io: output


    * - $(PREFIX):XWID_REQ
      - ao
      - $(SYMBOL).rReqApertureSizeX
      - | io: output


    * - $(PREFIX):XWID_REQ_RBV
      - ai
      - $(SYMBOL).rReqApertureSizeX
      - | io: output


    * - $(PREFIX):YCEN_REQ
      - ao
      - $(SYMBOL).rReqCenterY
      - | io: output


    * - $(PREFIX):YCEN_REQ_RBV
      - ai
      - $(SYMBOL).rReqCenterY
      - | io: output


    * - $(PREFIX):YCEN_SETZERO
      - bo
      - $(SYMBOL).rSetCenterY
      - | io: output


    * - $(PREFIX):YCEN_SETZERO_RBV
      - bi
      - $(SYMBOL).rSetCenterY
      - | io: output


    * - $(PREFIX):YWID_REQ
      - ao
      - $(SYMBOL).rReqApertureSizeY
      - | io: output


    * - $(PREFIX):YWID_REQ_RBV
      - ai
      - $(SYMBOL).rReqApertureSizeY
      - | io: output


    * - $(PREFIX):ZeroOffset_Bottom
      - ao
      - $(SYMBOL).rEncoderOffsetBottom
      - | io: output


    * - $(PREFIX):ZeroOffset_Bottom_RBV
      - ai
      - $(SYMBOL).rEncoderOffsetBottom
      - | io: output


    * - $(PREFIX):ZeroOffset_North
      - ao
      - $(SYMBOL).rEncoderOffsetNorth
      - | io: output


    * - $(PREFIX):ZeroOffset_North_RBV
      - ai
      - $(SYMBOL).rEncoderOffsetNorth
      - | io: output


    * - $(PREFIX):ZeroOffset_South
      - ao
      - $(SYMBOL).rEncoderOffsetSouth
      - | io: output


    * - $(PREFIX):ZeroOffset_South_RBV
      - ai
      - $(SYMBOL).rEncoderOffsetSouth
      - | io: output


 
FB_SLITS_POWER
^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ACTUAL_XCENTER
      - ao
      - $(SYMBOL).rActCenterX
      - | io: output


    * - $(PREFIX):ACTUAL_XCENTER_RBV
      - ai
      - $(SYMBOL).rActCenterX
      - | io: output


    * - $(PREFIX):ACTUAL_XWIDTH
      - ao
      - $(SYMBOL).rActApertureSizeX
      - | io: output


    * - $(PREFIX):ACTUAL_XWIDTH_RBV
      - ai
      - $(SYMBOL).rActApertureSizeX
      - | io: output


    * - $(PREFIX):ACTUAL_YCENTER
      - ao
      - $(SYMBOL).rActCenterY
      - | io: output


    * - $(PREFIX):ACTUAL_YCENTER_RBV
      - ai
      - $(SYMBOL).rActCenterY
      - | io: output


    * - $(PREFIX):ACTUAL_YWIDTH
      - ao
      - $(SYMBOL).rActApertureSizeY
      - | io: output


    * - $(PREFIX):ACTUAL_YWIDTH_RBV
      - ai
      - $(SYMBOL).rActApertureSizeY
      - | io: output


    * - $(PREFIX):BLOCK
      - bo
      - $(SYMBOL).bBlock
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):BLOCK_RBV
      - bi
      - $(SYMBOL).bBlock
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):BOTTOM:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):BOTTOM:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):BOTTOM:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbBottom.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BOTTOM:BUSY_RBV
      - bi
      - $(SYMBOL).fbBottom.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BOTTOM:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):BOTTOM:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):BOTTOM:DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):BOTTOM:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):BOTTOM:DMOV_RBV
      - bi
      - $(SYMBOL).fbBottom.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BOTTOM:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):BOTTOM:ERR_RBV
      - bi
      - $(SYMBOL).fbBottom.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BOTTOM:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbBottom.sError
      - | io: input


    * - $(PREFIX):BOTTOM:GO
      - bo
      - $(SYMBOL).fbBottom.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):BOTTOM:GO_RBV
      - bi
      - $(SYMBOL).fbBottom.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):BOTTOM:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):BOTTOM:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):BOTTOM:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):BOTTOM:RTD:01:CONN_RBV
      - bi
      - $(SYMBOL).RTD_Bottom_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):BOTTOM:RTD:01:ERR_RBV
      - bi
      - $(SYMBOL).RTD_Bottom_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BOTTOM:RTD:01:TEMP_RBV
      - ai
      - $(SYMBOL).RTD_Bottom_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):BOTTOM:RTD:02:CONN_RBV
      - bi
      - $(SYMBOL).RTD_Bottom_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):BOTTOM:RTD:02:ERR_RBV
      - bi
      - $(SYMBOL).RTD_Bottom_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BOTTOM:RTD:02:TEMP_RBV
      - ai
      - $(SYMBOL).RTD_Bottom_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):BOTTOM:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):BOTTOM:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):BOTTOM:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):BOTTOM:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):BOTTOM:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):CLOSE
      - bo
      - $(SYMBOL).bClose
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):CLOSE_RBV
      - bi
      - $(SYMBOL).bClose
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):FSW:FLOW
      - bo
      - $(SYMBOL).fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):FSW:FLOW_RBV
      - bi
      - $(SYMBOL).fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):NORTH:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):NORTH:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):NORTH:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbNorth.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):NORTH:BUSY_RBV
      - bi
      - $(SYMBOL).fbNorth.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):NORTH:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):NORTH:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):NORTH:DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):NORTH:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):NORTH:DMOV_RBV
      - bi
      - $(SYMBOL).fbNorth.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):NORTH:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):NORTH:ERR_RBV
      - bi
      - $(SYMBOL).fbNorth.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):NORTH:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbNorth.sError
      - | io: input


    * - $(PREFIX):NORTH:GO
      - bo
      - $(SYMBOL).fbNorth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):NORTH:GO_RBV
      - bi
      - $(SYMBOL).fbNorth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):NORTH:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):NORTH:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):NORTH:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):NORTH:RTD:01:CONN_RBV
      - bi
      - $(SYMBOL).RTD_North_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):NORTH:RTD:01:ERR_RBV
      - bi
      - $(SYMBOL).RTD_North_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):NORTH:RTD:01:TEMP_RBV
      - ai
      - $(SYMBOL).RTD_North_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):NORTH:RTD:02:CONN_RBV
      - bi
      - $(SYMBOL).RTD_North_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):NORTH:RTD:02:ERR_RBV
      - bi
      - $(SYMBOL).RTD_North_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):NORTH:RTD:02:TEMP_RBV
      - ai
      - $(SYMBOL).RTD_North_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):NORTH:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):NORTH:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):NORTH:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):NORTH:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):NORTH:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):Offset_Top
      - ao
      - $(SYMBOL).rEncoderOffsetTop
      - | io: output


    * - $(PREFIX):Offset_Top_RBV
      - ai
      - $(SYMBOL).rEncoderOffsetTop
      - | io: output


    * - $(PREFIX):OPEN
      - bo
      - $(SYMBOL).bOpen
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):OPEN_RBV
      - bi
      - $(SYMBOL).bOpen
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):PMPS_OK_RBV
      - bi
      - $(SYMBOL).bMoveOk
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):SOUTH:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):SOUTH:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbSouth.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:BUSY_RBV
      - bi
      - $(SYMBOL).fbSouth.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):SOUTH:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):SOUTH:DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):SOUTH:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):SOUTH:DMOV_RBV
      - bi
      - $(SYMBOL).fbSouth.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):SOUTH:ERR_RBV
      - bi
      - $(SYMBOL).fbSouth.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbSouth.sError
      - | io: input


    * - $(PREFIX):SOUTH:GO
      - bo
      - $(SYMBOL).fbSouth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SOUTH:GO_RBV
      - bi
      - $(SYMBOL).fbSouth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SOUTH:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SOUTH:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SOUTH:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):SOUTH:RTD:01:CONN_RBV
      - bi
      - $(SYMBOL).RTD_South_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SOUTH:RTD:01:ERR_RBV
      - bi
      - $(SYMBOL).RTD_South_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:RTD:01:TEMP_RBV
      - ai
      - $(SYMBOL).RTD_South_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SOUTH:RTD:02:CONN_RBV
      - bi
      - $(SYMBOL).RTD_South_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SOUTH:RTD:02:ERR_RBV
      - bi
      - $(SYMBOL).RTD_South_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):SOUTH:RTD:02:TEMP_RBV
      - ai
      - $(SYMBOL).RTD_South_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):SOUTH:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SOUTH:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SOUTH:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):SOUTH:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):SOUTH:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):TOP:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):TOP:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):TOP:AT_STATE_RBV
      - bi
      - $(SYMBOL).fbTop.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TOP:BUSY_RBV
      - bi
      - $(SYMBOL).fbTop.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TOP:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):TOP:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):TOP:DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):TOP:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):TOP:DMOV_RBV
      - bi
      - $(SYMBOL).fbTop.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TOP:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):TOP:ERR_RBV
      - bi
      - $(SYMBOL).fbTop.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TOP:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbTop.sError
      - | io: input


    * - $(PREFIX):TOP:GO
      - bo
      - $(SYMBOL).fbTop.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):TOP:GO_RBV
      - bi
      - $(SYMBOL).fbTop.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):TOP:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):TOP:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):TOP:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):TOP:RTD:01:CONN_RBV
      - bi
      - $(SYMBOL).RTD_TOP_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):TOP:RTD:01:ERR_RBV
      - bi
      - $(SYMBOL).RTD_TOP_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TOP:RTD:01:TEMP_RBV
      - ai
      - $(SYMBOL).RTD_TOP_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):TOP:RTD:02:CONN_RBV
      - bi
      - $(SYMBOL).RTD_TOP_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):TOP:RTD:02:ERR_RBV
      - bi
      - $(SYMBOL).RTD_TOP_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TOP:RTD:02:TEMP_RBV
      - ai
      - $(SYMBOL).RTD_TOP_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):TOP:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):TOP:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):TOP:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):TOP:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):TOP:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):XCEN_REQ
      - ao
      - $(SYMBOL).rReqCenterX
      - | io: output


    * - $(PREFIX):XCEN_REQ_RBV
      - ai
      - $(SYMBOL).rReqCenterX
      - | io: output


    * - $(PREFIX):XCEN_SETZERO
      - bo
      - $(SYMBOL).rSetCenterX
      - | io: output


    * - $(PREFIX):XCEN_SETZERO_RBV
      - bi
      - $(SYMBOL).rSetCenterX
      - | io: output


    * - $(PREFIX):XWID_REQ
      - ao
      - $(SYMBOL).rReqApertureSizeX
      - | io: output


    * - $(PREFIX):XWID_REQ_RBV
      - ai
      - $(SYMBOL).rReqApertureSizeX
      - | io: output


    * - $(PREFIX):YCEN_REQ
      - ao
      - $(SYMBOL).rReqCenterY
      - | io: output


    * - $(PREFIX):YCEN_REQ_RBV
      - ai
      - $(SYMBOL).rReqCenterY
      - | io: output


    * - $(PREFIX):YCEN_SETZERO
      - bo
      - $(SYMBOL).rSetCenterY
      - | io: output


    * - $(PREFIX):YCEN_SETZERO_RBV
      - bi
      - $(SYMBOL).rSetCenterY
      - | io: output


    * - $(PREFIX):YWID_REQ
      - ao
      - $(SYMBOL).rReqApertureSizeY
      - | io: output


    * - $(PREFIX):YWID_REQ_RBV
      - ai
      - $(SYMBOL).rReqApertureSizeY
      - | io: output


    * - $(PREFIX):ZeroOffset_Bottom
      - ao
      - $(SYMBOL).rEncoderOffsetBottom
      - | io: output


    * - $(PREFIX):ZeroOffset_Bottom_RBV
      - ai
      - $(SYMBOL).rEncoderOffsetBottom
      - | io: output


    * - $(PREFIX):ZeroOffset_North
      - ao
      - $(SYMBOL).rEncoderOffsetNorth
      - | io: output


    * - $(PREFIX):ZeroOffset_North_RBV
      - ai
      - $(SYMBOL).rEncoderOffsetNorth
      - | io: output


    * - $(PREFIX):ZeroOffset_South
      - ao
      - $(SYMBOL).rEncoderOffsetSouth
      - | io: output


    * - $(PREFIX):ZeroOffset_South_RBV
      - ai
      - $(SYMBOL).rEncoderOffsetSouth
      - | io: output


  
lcls2_cc_lib.FB_L2SI_Flowmeter
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):FLOW_RBV
      - ai
      - $(SYMBOL).fFlowRate
      - | io: input


    * - $(PREFIX):MA_RBV
      - longin
      - $(SYMBOL).fRaw
      - | io: input


 
lcls2_cc_lib.FB_PPM
^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):CAM:CIL:PCT
      - ao
      - $(SYMBOL).fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - $(PREFIX):CAM:CIL:PCT_RBV
      - ai
      - $(SYMBOL).fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - $(PREFIX):CAM:PWR
      - bo
      - $(SYMBOL).fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):CAM:PWR_RBV
      - bi
      - $(SYMBOL).fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbStates.nErrorId
      - | io: input


    * - $(PREFIX):MMS:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbStates.sErrorMessage
      - | io: input


    * - $(PREFIX):MMS:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbStates.enumGet
      - | io: input


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).fbStates.bArbiterEnabled
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).fbStates.bArbiterEnabled
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT
      - bo
      - $(SYMBOL).fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):MMS:STATE:RESET
      - bo
      - $(SYMBOL).fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:SET
      - mbbo
      - $(SYMBOL).fbStates.enumSet
      - | io: output


    * - $(PREFIX):MMS:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbStates.enumSet
      - | io: output


    * - $(PREFIX):SFM:FLOW_RBV
      - ai
      - $(SYMBOL).fbFlowMeter.fFlowRate
      - | io: input


    * - $(PREFIX):SFM:MA_RBV
      - longin
      - $(SYMBOL).fbFlowMeter.fRaw
      - | io: input


    * - $(PREFIX):SPM:CALIB:MJ_RATIO
      - ao
      - $(SYMBOL).fbPowerMeter.fCalibMJRatio
      - | io: output


    * - $(PREFIX):SPM:CALIB:MJ_RATIO_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fCalibMJRatio
      - | io: output


    * - $(PREFIX):SPM:CALIB:OFFSET
      - ao
      - $(SYMBOL).fbPowerMeter.fCalibRelOffset
      - | io: output


    * - $(PREFIX):SPM:CALIB:OFFSET_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fCalibRelOffset
      - | io: output


    * - $(PREFIX):SPM:CALIB:RATIO
      - ao
      - $(SYMBOL).fbPowerMeter.fCalibRelRatio
      - | io: output


    * - $(PREFIX):SPM:CALIB:RATIO_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fCalibRelRatio
      - | io: output


    * - $(PREFIX):SPM:CALIB_BUFFER_RBV
      - waveform
      - $(SYMBOL).fbPowerMeter.fCalibBaseBuffer
      - | io: input


    * - $(PREFIX):SPM:CALIB_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fCalibBase
      - | io: input


    * - $(PREFIX):SPM:MJ_BUFFER_RBV
      - waveform
      - $(SYMBOL).fbPowerMeter.fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - $(PREFIX):SPM:MJ_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fCalibMJ
      - | field: EGU mJ
        | io: input


    * - $(PREFIX):SPM:STC:CONN_RBV
      - bi
      - $(SYMBOL).fbPowerMeter.fbThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):SPM:STC:ERR_RBV
      - bi
      - $(SYMBOL).fbPowerMeter.fbThermoCouple.bError
      - | io: input


    * - $(PREFIX):SPM:STC:TEMP_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fbThermoCouple.fTemp
      - | io: input


    * - $(PREFIX):SPM:VOLT_BUFFER_RBV
      - waveform
      - $(SYMBOL).fbPowerMeter.fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - $(PREFIX):SPM:VOLT_RBV
      - ai
      - $(SYMBOL).fbPowerMeter.fVoltage
      - | field: EGU mV
        | io: input


    * - $(PREFIX):YAG:STC:CONN_RBV
      - bi
      - $(SYMBOL).fbYagThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):YAG:STC:ERR_RBV
      - bi
      - $(SYMBOL).fbYagThermoCouple.bError
      - | io: input


    * - $(PREFIX):YAG:STC:TEMP_RBV
      - ai
      - $(SYMBOL).fbYagThermoCouple.fTemp
      - | io: input


 
lcls2_cc_lib.FB_PPM_Gige
^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):CIL:PCT
      - ao
      - $(SYMBOL).fIlluminatorPercent
      - | EGU: %
        | io: output


    * - $(PREFIX):CIL:PCT_RBV
      - ai
      - $(SYMBOL).fIlluminatorPercent
      - | EGU: %
        | io: output


    * - $(PREFIX):PWR
      - bo
      - $(SYMBOL).bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):PWR_RBV
      - bi
      - $(SYMBOL).bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


 
lcls2_cc_lib.FB_PPM_PowerMeter
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):CALIB:MJ_RATIO
      - ao
      - $(SYMBOL).fCalibMJRatio
      - | io: output


    * - $(PREFIX):CALIB:MJ_RATIO_RBV
      - ai
      - $(SYMBOL).fCalibMJRatio
      - | io: output


    * - $(PREFIX):CALIB:OFFSET
      - ao
      - $(SYMBOL).fCalibRelOffset
      - | io: output


    * - $(PREFIX):CALIB:OFFSET_RBV
      - ai
      - $(SYMBOL).fCalibRelOffset
      - | io: output


    * - $(PREFIX):CALIB:RATIO
      - ao
      - $(SYMBOL).fCalibRelRatio
      - | io: output


    * - $(PREFIX):CALIB:RATIO_RBV
      - ai
      - $(SYMBOL).fCalibRelRatio
      - | io: output


    * - $(PREFIX):CALIB_BUFFER_RBV
      - waveform
      - $(SYMBOL).fCalibBaseBuffer
      - | io: input


    * - $(PREFIX):CALIB_RBV
      - ai
      - $(SYMBOL).fCalibBase
      - | io: input


    * - $(PREFIX):MJ_BUFFER_RBV
      - waveform
      - $(SYMBOL).fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - $(PREFIX):MJ_RBV
      - ai
      - $(SYMBOL).fCalibMJ
      - | field: EGU mJ
        | io: input


    * - $(PREFIX):STC:CONN_RBV
      - bi
      - $(SYMBOL).fbThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):STC:ERR_RBV
      - bi
      - $(SYMBOL).fbThermoCouple.bError
      - | io: input


    * - $(PREFIX):STC:TEMP_RBV
      - ai
      - $(SYMBOL).fbThermoCouple.fTemp
      - | io: input


    * - $(PREFIX):VOLT_BUFFER_RBV
      - waveform
      - $(SYMBOL).fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - $(PREFIX):VOLT_RBV
      - ai
      - $(SYMBOL).fVoltage
      - | field: EGU mV
        | io: input


 
lcls2_cc_lib.FB_PPM_States
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).nErrorId
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sErrorMessage
      - | io: input


    * - $(PREFIX):GET_RBV
      - mbbi
      - $(SYMBOL).enumGet
      - | io: input


    * - $(PREFIX):PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:MAINT
      - bo
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SET
      - mbbo
      - $(SYMBOL).enumSet
      - | io: output


    * - $(PREFIX):SET_RBV
      - mbbi
      - $(SYMBOL).enumSet
      - | io: output


 
lcls2_cc_lib.FB_WFS
^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbStates.nErrorId
      - | io: input


    * - $(PREFIX):MMS:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbStates.sErrorMessage
      - | io: input


    * - $(PREFIX):MMS:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbStates.enumGet
      - | io: input


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).fbStates.bArbiterEnabled
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).fbStates.bArbiterEnabled
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT
      - bo
      - $(SYMBOL).fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):MMS:STATE:RESET
      - bo
      - $(SYMBOL).fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:SET
      - mbbo
      - $(SYMBOL).fbStates.enumSet
      - | io: output


    * - $(PREFIX):MMS:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbStates.enumSet
      - | io: output


    * - $(PREFIX):STC:01:CONN_RBV
      - bi
      - $(SYMBOL).fbThermoCouple1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):STC:01:ERR_RBV
      - bi
      - $(SYMBOL).fbThermoCouple1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):STC:01:TEMP_RBV
      - ai
      - $(SYMBOL).fbThermoCouple1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - $(PREFIX):STC:02:CONN_RBV
      - bi
      - $(SYMBOL).fbThermoCouple2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):STC:02:ERR_RBV
      - bi
      - $(SYMBOL).fbThermoCouple2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):STC:02:TEMP_RBV
      - ai
      - $(SYMBOL).fbThermoCouple2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


 
lcls2_cc_lib.FB_WFS_States
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).nErrorId
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sErrorMessage
      - | io: input


    * - $(PREFIX):GET_RBV
      - mbbi
      - $(SYMBOL).enumGet
      - | io: input


    * - $(PREFIX):PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:MAINT
      - bo
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SET
      - mbbo
      - $(SYMBOL).enumSet
      - | io: output


    * - $(PREFIX):SET_RBV
      - mbbi
      - $(SYMBOL).enumSet
      - | io: output


 
lcls2_cc_lib.FB_XPIM
^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):CAM:PWR
      - bo
      - $(SYMBOL).fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):CAM:PWR_RBV
      - bi
      - $(SYMBOL).fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):CIL:AUTO
      - bo
      - $(SYMBOL).fbLED.bLEDAuto
      - | io: output


    * - $(PREFIX):CIL:AUTO_RBV
      - bi
      - $(SYMBOL).fbLED.bLEDAuto
      - | io: output


    * - $(PREFIX):CIL:CLK:REMAINING
      - ao
      - $(SYMBOL).fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - $(PREFIX):CIL:CLK:REMAINING_RBV
      - ai
      - $(SYMBOL).fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - $(PREFIX):CIL:CLK:TIMEOUT
      - ao
      - $(SYMBOL).fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - $(PREFIX):CIL:CLK:TIMEOUT_RBV
      - ai
      - $(SYMBOL).fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - $(PREFIX):CIL:PWR
      - bo
      - $(SYMBOL).fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):CIL:PWR_RBV
      - bi
      - $(SYMBOL).fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):CLF:LOCK
      - bo
      - $(SYMBOL).bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - $(PREFIX):CLF:LOCK_RBV
      - bi
      - $(SYMBOL).bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - $(PREFIX):CLZ:LOCK
      - bo
      - $(SYMBOL).bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - $(PREFIX):CLZ:LOCK_RBV
      - bi
      - $(SYMBOL).bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - $(PREFIX):MFW:ERR:MSG_RBV
      - waveform
      - $(SYMBOL).fbFilterWheel.sLastError
      - | io: input


    * - $(PREFIX):MFW:ERR:RESET
      - bo
      - $(SYMBOL).fbFilterWheel.bResetError
      - | io: output


    * - $(PREFIX):MFW:ERR:RESET_RBV
      - bi
      - $(SYMBOL).fbFilterWheel.bResetError
      - | io: output


    * - $(PREFIX):MFW:GET_RBV
      - mbbi
      - $(SYMBOL).fbFilterWheel.nGetPos
      - | io: input


    * - $(PREFIX):MFW:RAW:CMD
      - waveform
      - $(SYMBOL).fbFilterWheel.fbCom.sCmd
      - | io: output


    * - $(PREFIX):MFW:RAW:CMD_RBV
      - waveform
      - $(SYMBOL).fbFilterWheel.fbCom.sCmd
      - | io: output


    * - $(PREFIX):MFW:RAW:DONE_RBV
      - bi
      - $(SYMBOL).fbFilterWheel.fbCom.bDone
      - | io: input


    * - $(PREFIX):MFW:RAW:ERR:RECV_RBV
      - mbbi
      - $(SYMBOL).fbFilterWheel.fbCom.eRecvErrorID
      - | io: input


    * - $(PREFIX):MFW:RAW:ERR:SEND_RBV
      - mbbi
      - $(SYMBOL).fbFilterWheel.fbCom.eSendErrorID
      - | io: input


    * - $(PREFIX):MFW:RAW:ERR:SER_RBV
      - mbbi
      - $(SYMBOL).fbFilterWheel.fbCom.eSerialLineErrorID
      - | io: input


    * - $(PREFIX):MFW:RAW:RESP_RBV
      - waveform
      - $(SYMBOL).fbFilterWheel.fbCom.sResponse
      - | io: input


    * - $(PREFIX):MFW:RAW:SEND
      - bo
      - $(SYMBOL).fbFilterWheel.fbCom.bSend
      - | io: output


    * - $(PREFIX):MFW:RAW:SEND_RBV
      - bi
      - $(SYMBOL).fbFilterWheel.fbCom.bSend
      - | io: output


    * - $(PREFIX):MFW:SET
      - mbbo
      - $(SYMBOL).fbFilterWheel.nSetPos
      - | io: output


    * - $(PREFIX):MFW:SET_RBV
      - mbbi
      - $(SYMBOL).fbFilterWheel.nSetPos
      - | io: output


    * - $(PREFIX):MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):MMS:STATE:BUSY_RBV
      - bi
      - $(SYMBOL).fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:DONE_RBV
      - bi
      - $(SYMBOL).fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERR_RBV
      - bi
      - $(SYMBOL).fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):MMS:STATE:ERRID_RBV
      - longin
      - $(SYMBOL).fbStates.nErrorId
      - | io: input


    * - $(PREFIX):MMS:STATE:ERRMSG_RBV
      - waveform
      - $(SYMBOL).fbStates.sErrorMessage
      - | io: input


    * - $(PREFIX):MMS:STATE:GET_RBV
      - mbbi
      - $(SYMBOL).fbStates.enumGet
      - | io: input


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).fbStates.bArbiterEnabled
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).fbStates.bArbiterEnabled
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT
      - bo
      - $(SYMBOL).fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):MMS:STATE:PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):MMS:STATE:RESET
      - bo
      - $(SYMBOL).fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:RESET_RBV
      - bi
      - $(SYMBOL).fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):MMS:STATE:SET
      - mbbo
      - $(SYMBOL).fbStates.enumSet
      - | io: output


    * - $(PREFIX):MMS:STATE:SET_RBV
      - mbbi
      - $(SYMBOL).fbStates.enumSet
      - | io: output


    * - $(PREFIX):SFW:FLOW
      - bo
      - $(SYMBOL).fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):SFW:FLOW_RBV
      - bi
      - $(SYMBOL).fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


 
lcls2_cc_lib.FB_XPIM_FilterWheel
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ERR:MSG_RBV
      - waveform
      - $(SYMBOL).sLastError
      - | io: input


    * - $(PREFIX):ERR:RESET
      - bo
      - $(SYMBOL).bResetError
      - | io: output


    * - $(PREFIX):ERR:RESET_RBV
      - bi
      - $(SYMBOL).bResetError
      - | io: output


    * - $(PREFIX):GET_RBV
      - mbbi
      - $(SYMBOL).nGetPos
      - | io: input


    * - $(PREFIX):RAW:CMD
      - waveform
      - $(SYMBOL).fbCom.sCmd
      - | io: output


    * - $(PREFIX):RAW:CMD_RBV
      - waveform
      - $(SYMBOL).fbCom.sCmd
      - | io: output


    * - $(PREFIX):RAW:DONE_RBV
      - bi
      - $(SYMBOL).fbCom.bDone
      - | io: input


    * - $(PREFIX):RAW:ERR:RECV_RBV
      - mbbi
      - $(SYMBOL).fbCom.eRecvErrorID
      - | io: input


    * - $(PREFIX):RAW:ERR:SEND_RBV
      - mbbi
      - $(SYMBOL).fbCom.eSendErrorID
      - | io: input


    * - $(PREFIX):RAW:ERR:SER_RBV
      - mbbi
      - $(SYMBOL).fbCom.eSerialLineErrorID
      - | io: input


    * - $(PREFIX):RAW:RESP_RBV
      - waveform
      - $(SYMBOL).fbCom.sResponse
      - | io: input


    * - $(PREFIX):RAW:SEND
      - bo
      - $(SYMBOL).fbCom.bSend
      - | io: output


    * - $(PREFIX):RAW:SEND_RBV
      - bi
      - $(SYMBOL).fbCom.bSend
      - | io: output


    * - $(PREFIX):SET
      - mbbo
      - $(SYMBOL).nSetPos
      - | io: output


    * - $(PREFIX):SET_RBV
      - mbbi
      - $(SYMBOL).nSetPos
      - | io: output


 
lcls2_cc_lib.FB_XPIM_LED
^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):AUTO
      - bo
      - $(SYMBOL).bLEDAuto
      - | io: output


    * - $(PREFIX):AUTO_RBV
      - bi
      - $(SYMBOL).bLEDAuto
      - | io: output


    * - $(PREFIX):CLK:REMAINING
      - ao
      - $(SYMBOL).fLEDRemaining
      - | field: EGU min
        | io: output


    * - $(PREFIX):CLK:REMAINING_RBV
      - ai
      - $(SYMBOL).fLEDRemaining
      - | field: EGU min
        | io: output


    * - $(PREFIX):CLK:TIMEOUT
      - ao
      - $(SYMBOL).fLEDTimeOut
      - | field: EGU min
        | io: output


    * - $(PREFIX):CLK:TIMEOUT_RBV
      - ai
      - $(SYMBOL).fLEDTimeOut
      - | field: EGU min
        | io: output


    * - $(PREFIX):PWR
      - bo
      - $(SYMBOL).bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):PWR_RBV
      - bi
      - $(SYMBOL).bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


 
lcls2_cc_lib.FB_XPIM_Opal
^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):PWR
      - bo
      - $(SYMBOL).bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - $(PREFIX):PWR_RBV
      - bi
      - $(SYMBOL).bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


 
lcls2_cc_lib.FB_XPIM_States
^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).nErrorId
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sErrorMessage
      - | io: input


    * - $(PREFIX):GET_RBV
      - mbbi
      - $(SYMBOL).enumGet
      - | io: input


    * - $(PREFIX):PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:MAINT
      - bo
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SET
      - mbbo
      - $(SYMBOL).enumSet
      - | io: output


    * - $(PREFIX):SET_RBV
      - mbbi
      - $(SYMBOL).enumSet
      - | io: output


 
lcls2_cc_lib.FB_XTES_Flowswitch
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):FLOW
      - bo
      - $(SYMBOL).bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - $(PREFIX):FLOW_RBV
      - bi
      - $(SYMBOL).bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    
LCLS_General.FB_EL6_Com
^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):CMD
      - waveform
      - $(SYMBOL).sCmd
      - | io: output


    * - $(PREFIX):CMD_RBV
      - waveform
      - $(SYMBOL).sCmd
      - | io: output


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | io: input


    * - $(PREFIX):ERR:RECV_RBV
      - mbbi
      - $(SYMBOL).eRecvErrorID
      - | io: input


    * - $(PREFIX):ERR:SEND_RBV
      - mbbi
      - $(SYMBOL).eSendErrorID
      - | io: input


    * - $(PREFIX):ERR:SER_RBV
      - mbbi
      - $(SYMBOL).eSerialLineErrorID
      - | io: input


    * - $(PREFIX):RESP_RBV
      - waveform
      - $(SYMBOL).sResponse
      - | io: input


    * - $(PREFIX):SEND
      - bo
      - $(SYMBOL).bSend
      - | io: output


    * - $(PREFIX):SEND_RBV
      - bi
      - $(SYMBOL).bSend
      - | io: output


  
LCLS_General.FB_Listener
^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):AlarmsCleared_RBV
      - longin
      - $(SYMBOL).nCntAlarmsCleared
      - | io: input


    * - $(PREFIX):AlarmsConfirmed_RBV
      - longin
      - $(SYMBOL).nCntAlarmsConfirmed
      - | io: input


    * - $(PREFIX):AlarmsRaised_RBV
      - longin
      - $(SYMBOL).nCntAlarmsRaised
      - | io: input


    * - $(PREFIX):Log:EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):Log:EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):Log:Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):Log:Message_RBV
      - waveform
      - $(SYMBOL).stEventInfo.msg
      - | io: input


    * - $(PREFIX):Log:MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):Log:MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):Log:Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):Log:Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):Log:Source_RBV
      - waveform
      - $(SYMBOL).stEventInfo.source
      - | io: input


    * - $(PREFIX):Log:Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


    * - $(PREFIX):LogToVisualStudio
      - bo
      - $(SYMBOL).bLogToVisualStudio
      - | io: output


    * - $(PREFIX):LogToVisualStudio_RBV
      - bi
      - $(SYMBOL).bLogToVisualStudio
      - | io: output


    * - $(PREFIX):MessagesSent_RBV
      - longin
      - $(SYMBOL).nCntMessagesSent
      - | io: input


    * - $(PREFIX):MinSeverity
      - mbbo
      - $(SYMBOL).eMinSeverity
      - | io: output


    * - $(PREFIX):MinSeverity_RBV
      - mbbi
      - $(SYMBOL).eMinSeverity
      - | io: output


 
LCLS_General.FB_LogHandler
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ADS:AlarmsCleared_RBV
      - longin
      - $(SYMBOL).fbTcAdsListener.nCntAlarmsCleared
      - | io: input


    * - $(PREFIX):ADS:AlarmsConfirmed_RBV
      - longin
      - $(SYMBOL).fbTcAdsListener.nCntAlarmsConfirmed
      - | io: input


    * - $(PREFIX):ADS:AlarmsRaised_RBV
      - longin
      - $(SYMBOL).fbTcAdsListener.nCntAlarmsRaised
      - | io: input


    * - $(PREFIX):ADS:Log:EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):ADS:Log:EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):ADS:Log:Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):ADS:Log:Message_RBV
      - waveform
      - $(SYMBOL).fbTcAdsListener.stEventInfo.msg
      - | io: input


    * - $(PREFIX):ADS:Log:MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):ADS:Log:MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):ADS:Log:Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):ADS:Log:Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):ADS:Log:Source_RBV
      - waveform
      - $(SYMBOL).fbTcAdsListener.stEventInfo.source
      - | io: input


    * - $(PREFIX):ADS:Log:Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


    * - $(PREFIX):ADS:LogToVisualStudio
      - bo
      - $(SYMBOL).fbTcAdsListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):ADS:LogToVisualStudio_RBV
      - bi
      - $(SYMBOL).fbTcAdsListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):ADS:MessagesSent_RBV
      - longin
      - $(SYMBOL).fbTcAdsListener.nCntMessagesSent
      - | io: input


    * - $(PREFIX):ADS:MinSeverity
      - mbbo
      - $(SYMBOL).fbTcAdsListener.eMinSeverity
      - | io: output


    * - $(PREFIX):ADS:MinSeverity_RBV
      - mbbi
      - $(SYMBOL).fbTcAdsListener.eMinSeverity
      - | io: output


    * - $(PREFIX):LCLS:AlarmsCleared_RBV
      - longin
      - $(SYMBOL).fbLCLSListener.nCntAlarmsCleared
      - | io: input


    * - $(PREFIX):LCLS:AlarmsConfirmed_RBV
      - longin
      - $(SYMBOL).fbLCLSListener.nCntAlarmsConfirmed
      - | io: input


    * - $(PREFIX):LCLS:AlarmsRaised_RBV
      - longin
      - $(SYMBOL).fbLCLSListener.nCntAlarmsRaised
      - | io: input


    * - $(PREFIX):LCLS:Log:EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):LCLS:Log:EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):LCLS:Log:Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):LCLS:Log:Message_RBV
      - waveform
      - $(SYMBOL).fbLCLSListener.stEventInfo.msg
      - | io: input


    * - $(PREFIX):LCLS:Log:MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):LCLS:Log:MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):LCLS:Log:Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):LCLS:Log:Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):LCLS:Log:Source_RBV
      - waveform
      - $(SYMBOL).fbLCLSListener.stEventInfo.source
      - | io: input


    * - $(PREFIX):LCLS:Log:Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


    * - $(PREFIX):LCLS:LogToVisualStudio
      - bo
      - $(SYMBOL).fbLCLSListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):LCLS:LogToVisualStudio_RBV
      - bi
      - $(SYMBOL).fbLCLSListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):LCLS:MessagesSent_RBV
      - longin
      - $(SYMBOL).fbLCLSListener.nCntMessagesSent
      - | io: input


    * - $(PREFIX):LCLS:MinSeverity
      - mbbo
      - $(SYMBOL).fbLCLSListener.eMinSeverity
      - | io: output


    * - $(PREFIX):LCLS:MinSeverity_RBV
      - mbbi
      - $(SYMBOL).fbLCLSListener.eMinSeverity
      - | io: output


    * - $(PREFIX):Router:AlarmsCleared_RBV
      - longin
      - $(SYMBOL).fbTcRouterListener.nCntAlarmsCleared
      - | io: input


    * - $(PREFIX):Router:AlarmsConfirmed_RBV
      - longin
      - $(SYMBOL).fbTcRouterListener.nCntAlarmsConfirmed
      - | io: input


    * - $(PREFIX):Router:AlarmsRaised_RBV
      - longin
      - $(SYMBOL).fbTcRouterListener.nCntAlarmsRaised
      - | io: input


    * - $(PREFIX):Router:Log:EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):Router:Log:EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):Router:Log:Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):Router:Log:Message_RBV
      - waveform
      - $(SYMBOL).fbTcRouterListener.stEventInfo.msg
      - | io: input


    * - $(PREFIX):Router:Log:MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):Router:Log:MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):Router:Log:Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):Router:Log:Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):Router:Log:Source_RBV
      - waveform
      - $(SYMBOL).fbTcRouterListener.stEventInfo.source
      - | io: input


    * - $(PREFIX):Router:Log:Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


    * - $(PREFIX):Router:LogToVisualStudio
      - bo
      - $(SYMBOL).fbTcRouterListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):Router:LogToVisualStudio_RBV
      - bi
      - $(SYMBOL).fbTcRouterListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):Router:MessagesSent_RBV
      - longin
      - $(SYMBOL).fbTcRouterListener.nCntMessagesSent
      - | io: input


    * - $(PREFIX):Router:MinSeverity
      - mbbo
      - $(SYMBOL).fbTcRouterListener.eMinSeverity
      - | io: output


    * - $(PREFIX):Router:MinSeverity_RBV
      - mbbi
      - $(SYMBOL).fbTcRouterListener.eMinSeverity
      - | io: output


    * - $(PREFIX):RTime:AlarmsCleared_RBV
      - longin
      - $(SYMBOL).fbTcRTimeListener.nCntAlarmsCleared
      - | io: input


    * - $(PREFIX):RTime:AlarmsConfirmed_RBV
      - longin
      - $(SYMBOL).fbTcRTimeListener.nCntAlarmsConfirmed
      - | io: input


    * - $(PREFIX):RTime:AlarmsRaised_RBV
      - longin
      - $(SYMBOL).fbTcRTimeListener.nCntAlarmsRaised
      - | io: input


    * - $(PREFIX):RTime:Log:EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):RTime:Log:EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):RTime:Log:Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):RTime:Log:Message_RBV
      - waveform
      - $(SYMBOL).fbTcRTimeListener.stEventInfo.msg
      - | io: input


    * - $(PREFIX):RTime:Log:MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):RTime:Log:MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):RTime:Log:Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):RTime:Log:Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):RTime:Log:Source_RBV
      - waveform
      - $(SYMBOL).fbTcRTimeListener.stEventInfo.source
      - | io: input


    * - $(PREFIX):RTime:Log:Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


    * - $(PREFIX):RTime:LogToVisualStudio
      - bo
      - $(SYMBOL).fbTcRTimeListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):RTime:LogToVisualStudio_RBV
      - bi
      - $(SYMBOL).fbTcRTimeListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):RTime:MessagesSent_RBV
      - longin
      - $(SYMBOL).fbTcRTimeListener.nCntMessagesSent
      - | io: input


    * - $(PREFIX):RTime:MinSeverity
      - mbbo
      - $(SYMBOL).fbTcRTimeListener.eMinSeverity
      - | io: output


    * - $(PREFIX):RTime:MinSeverity_RBV
      - mbbi
      - $(SYMBOL).fbTcRTimeListener.eMinSeverity
      - | io: output


    * - $(PREFIX):System:AlarmsCleared_RBV
      - longin
      - $(SYMBOL).fbTcSystemListener.nCntAlarmsCleared
      - | io: input


    * - $(PREFIX):System:AlarmsConfirmed_RBV
      - longin
      - $(SYMBOL).fbTcSystemListener.nCntAlarmsConfirmed
      - | io: input


    * - $(PREFIX):System:AlarmsRaised_RBV
      - longin
      - $(SYMBOL).fbTcSystemListener.nCntAlarmsRaised
      - | io: input


    * - $(PREFIX):System:Log:EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):System:Log:EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):System:Log:Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):System:Log:Message_RBV
      - waveform
      - $(SYMBOL).fbTcSystemListener.stEventInfo.msg
      - | io: input


    * - $(PREFIX):System:Log:MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):System:Log:MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):System:Log:Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):System:Log:Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):System:Log:Source_RBV
      - waveform
      - $(SYMBOL).fbTcSystemListener.stEventInfo.source
      - | io: input


    * - $(PREFIX):System:Log:Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


    * - $(PREFIX):System:LogToVisualStudio
      - bo
      - $(SYMBOL).fbTcSystemListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):System:LogToVisualStudio_RBV
      - bi
      - $(SYMBOL).fbTcSystemListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):System:MessagesSent_RBV
      - longin
      - $(SYMBOL).fbTcSystemListener.nCntMessagesSent
      - | io: input


    * - $(PREFIX):System:MinSeverity
      - mbbo
      - $(SYMBOL).fbTcSystemListener.eMinSeverity
      - | io: output


    * - $(PREFIX):System:MinSeverity_RBV
      - mbbi
      - $(SYMBOL).fbTcSystemListener.eMinSeverity
      - | io: output


    * - $(PREFIX):Windows:AlarmsCleared_RBV
      - longin
      - $(SYMBOL).fbWindowsListener.nCntAlarmsCleared
      - | io: input


    * - $(PREFIX):Windows:AlarmsConfirmed_RBV
      - longin
      - $(SYMBOL).fbWindowsListener.nCntAlarmsConfirmed
      - | io: input


    * - $(PREFIX):Windows:AlarmsRaised_RBV
      - longin
      - $(SYMBOL).fbWindowsListener.nCntAlarmsRaised
      - | io: input


    * - $(PREFIX):Windows:Log:EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):Windows:Log:EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):Windows:Log:Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):Windows:Log:Message_RBV
      - waveform
      - $(SYMBOL).fbWindowsListener.stEventInfo.msg
      - | io: input


    * - $(PREFIX):Windows:Log:MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):Windows:Log:MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):Windows:Log:Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):Windows:Log:Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):Windows:Log:Source_RBV
      - waveform
      - $(SYMBOL).fbWindowsListener.stEventInfo.source
      - | io: input


    * - $(PREFIX):Windows:Log:Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


    * - $(PREFIX):Windows:LogToVisualStudio
      - bo
      - $(SYMBOL).fbWindowsListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):Windows:LogToVisualStudio_RBV
      - bi
      - $(SYMBOL).fbWindowsListener.bLogToVisualStudio
      - | io: output


    * - $(PREFIX):Windows:MessagesSent_RBV
      - longin
      - $(SYMBOL).fbWindowsListener.nCntMessagesSent
      - | io: input


    * - $(PREFIX):Windows:MinSeverity
      - mbbo
      - $(SYMBOL).fbWindowsListener.eMinSeverity
      - | io: output


    * - $(PREFIX):Windows:MinSeverity_RBV
      - mbbi
      - $(SYMBOL).fbWindowsListener.eMinSeverity
      - | io: output


 
LCLS_General.FB_LogMessage
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Reset
      - bo
      - Rising-edge reset of trip
      - | io: output


    * - $(PREFIX):Reset_RBV
      - bi
      - Rising-edge reset of trip
      - | io: output


    * - $(PREFIX):Tripped_RBV
      - bi
      - Log message FB tripped
      - | io: input


  
LCLS_General.FB_TempSensor
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):CONN_RBV
      - bi
      - $(SYMBOL).bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):TEMP_RBV
      - ai
      - $(SYMBOL).fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


 
LCLS_General.FB_ThermoCouple
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):STC:CONN_RBV
      - bi
      - $(SYMBOL).bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - $(PREFIX):STC:ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | io: input


    * - $(PREFIX):STC:TEMP_RBV
      - ai
      - $(SYMBOL).fTemp
      - | io: input


 
LCLS_General.ST_PendingEvent
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):Message_RBV
      - waveform
      - $(SYMBOL).stEventInfo.msg
      - | io: input


    * - $(PREFIX):MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):Source_RBV
      - waveform
      - $(SYMBOL).stEventInfo.source
      - | io: input


    * - $(PREFIX):Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


                                                                             
lcls_twincat_motion.DUT_MotionStage
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - $(PREFIX):PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - $(PREFIX):PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - $(PREFIX):PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - $(PREFIX):PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - $(PREFIX):PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - $(PREFIX):PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - $(PREFIX):PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - $(PREFIX):PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - $(PREFIX):PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - $(PREFIX):PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - $(PREFIX):PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - $(PREFIX):PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - $(PREFIX):PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - $(PREFIX):PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - $(PREFIX):PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - $(PREFIX):PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - $(PREFIX):PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - $(PREFIX):PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - $(PREFIX):PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - $(PREFIX):PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - $(PREFIX):PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - $(PREFIX):PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - $(PREFIX):PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - $(PREFIX):PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - $(PREFIX):PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - $(PREFIX):PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - $(PREFIX):PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - $(PREFIX):PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


 
lcls_twincat_motion.DUT_PositionState
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


                    
lcls_twincat_motion.FB_PositionStateBase
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).nErrorId
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sErrorMessage
      - | io: input


    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


 
lcls_twincat_motion.FB_PositionStateBase_WithPMPS
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).nErrorId
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sErrorMessage
      - | io: input


    * - $(PREFIX):PMPS:ARB:ENABLE
      - bo
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:ARB:ENABLE_RBV
      - bi
      - $(SYMBOL).bArbiterEnabled
      - | io: output


    * - $(PREFIX):PMPS:MAINT
      - bo
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):PMPS:MAINT_RBV
      - bi
      - $(SYMBOL).fbStatePMPS.bMaintMode
      - | io: output


    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


 
lcls_twincat_motion.FB_PositionStateInOut
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - $(PREFIX):09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - $(PREFIX):09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).nErrorId
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sErrorMessage
      - | io: input


    * - $(PREFIX):GET_RBV
      - mbbi
      - $(SYMBOL).enumGet
      - | io: input


    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SET
      - mbbo
      - $(SYMBOL).enumSet
      - | io: output


    * - $(PREFIX):SET_RBV
      - mbbi
      - $(SYMBOL).enumSet
      - | io: output


   
lcls_twincat_motion.FB_PositionStateMove
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):AT_STATE_RBV
      - bi
      - $(SYMBOL).bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):DONE_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRID_RBV
      - longin
      - $(SYMBOL).nErrorID
      - | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sErrorMessage
      - | io: input


    * - $(PREFIX):GO
      - bo
      - $(SYMBOL).bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):GO_RBV
      - bi
      - $(SYMBOL).bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):RESET
      - bo
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):RESET_RBV
      - bi
      - $(SYMBOL).bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


 
lcls_twincat_motion.FB_PositionStatePMPS
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):MAINT
      - bo
      - $(SYMBOL).bMaintMode
      - | io: output


    * - $(PREFIX):MAINT_RBV
      - bi
      - $(SYMBOL).bMaintMode
      - | io: output


 
lcls_twincat_motion.FB_PositionStatePMPS_Base
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):MAINT
      - bo
      - $(SYMBOL).bMaintMode
      - | io: output


    * - $(PREFIX):MAINT_RBV
      - bi
      - $(SYMBOL).bMaintMode
      - | io: output


     
lcls_twincat_motion.FB_StatePTPMove
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):AT_STATE_RBV
      - bi
      - $(SYMBOL).bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):BUSY_RBV
      - bi
      - $(SYMBOL).bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - $(PREFIX):DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - $(PREFIX):DMOV_RBV
      - bi
      - $(SYMBOL).bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - $(PREFIX):ERR_RBV
      - bi
      - $(SYMBOL).bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - $(PREFIX):ERRMSG_RBV
      - waveform
      - $(SYMBOL).sError
      - | io: input


    * - $(PREFIX):GO
      - bo
      - $(SYMBOL).bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):GO_RBV
      - bi
      - $(SYMBOL).bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - $(PREFIX):LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - $(PREFIX):SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - $(PREFIX):VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - $(PREFIX):VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - $(PREFIX):VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


                   
PMPS.FB_Arbiter
^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):AP:Entry:001:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:001:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:001:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:001:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:001:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:001:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:001:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:001:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:001:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:001:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:001:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:001:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:001:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:001:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:001:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:002:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:002:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:002:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:002:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:002:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:002:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:002:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:002:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:002:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:002:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:002:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:002:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:002:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:002:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:003:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:003:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:003:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:003:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:003:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:003:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:003:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:003:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:003:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:003:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:003:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:003:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:003:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:003:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:004:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:004:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:004:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:004:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:004:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:004:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:004:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:004:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:004:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:004:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:004:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:004:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:004:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:004:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:005:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:005:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:005:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:005:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:005:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:005:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:005:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:005:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:005:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:005:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:005:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:005:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:005:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:005:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:006:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:006:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:006:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:006:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:006:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:006:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:006:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:006:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:006:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:006:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:006:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:006:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:006:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:006:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:007:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:007:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:007:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:007:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:007:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:007:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:007:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:007:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:007:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:007:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:007:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:007:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:007:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:007:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:008:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:008:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:008:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:008:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:008:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:008:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:008:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:008:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:008:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:008:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:008:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:008:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:008:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:008:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:009:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:009:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:009:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:009:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:009:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:009:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:009:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:009:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:009:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:009:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:009:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:009:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:009:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:009:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:010:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:010:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:010:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:010:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:010:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:010:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:010:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:010:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:010:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:010:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:010:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:010:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:010:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:010:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:011:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:011:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:011:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:011:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:011:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:011:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:011:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:011:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:011:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:011:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:011:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:011:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:011:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:011:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:012:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:012:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:012:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:012:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:012:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:012:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:012:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:012:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:012:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:012:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:012:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:012:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:012:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:012:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:013:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:013:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:013:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:013:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:013:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:013:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:013:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:013:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:013:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:013:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:013:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:013:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:013:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:013:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:014:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:014:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:014:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:014:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:014:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:014:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:014:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:014:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:014:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:014:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:014:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:014:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:014:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:014:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:015:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:015:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:015:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:015:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:015:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:015:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:015:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:015:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:015:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:015:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:015:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:015:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:015:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:015:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:016:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:016:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:016:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:016:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:016:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:016:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:016:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:016:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:016:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:016:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:016:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:016:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:016:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:016:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:017:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:017:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:017:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:017:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:017:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:017:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:017:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:017:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:017:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:017:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:017:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:017:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:017:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:017:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:018:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:018:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:018:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:018:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:018:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:018:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:018:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:018:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:018:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:018:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:018:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:018:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:018:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:018:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:019:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:019:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:019:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:019:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:019:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:019:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:019:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:019:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:019:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:019:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:019:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:019:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:019:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:019:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:020:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:020:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:020:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:020:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:020:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:020:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:020:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - $(PREFIX):AP:Entry:020:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):AP:Entry:020:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:020:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - $(PREFIX):AP:Entry:020:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):AP:Entry:020:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):AP:Entry:020:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - $(PREFIX):AP:Entry:020:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - $(PREFIX):ArbiterID_RBV
      - longin
      - Arbiter ID for elev. req.
      - | io: input


    * - $(PREFIX):ArbitratedBP:Apt:01:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):ArbitratedBP:Apt:01:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):ArbitratedBP:Apt:01:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):ArbitratedBP:Apt:02:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):ArbitratedBP:Apt:02:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):ArbitratedBP:Apt:02:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):ArbitratedBP:Apt:03:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):ArbitratedBP:Apt:03:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):ArbitratedBP:Apt:03:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):ArbitratedBP:Apt:04:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):ArbitratedBP:Apt:04:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):ArbitratedBP:Apt:04:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - $(PREFIX):ArbitratedBP:BeamClass_RBV
      - longin
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):ArbitratedBP:BeamClassRanges_RBV
      - longin
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):ArbitratedBP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):ArbitratedBP:eVRanges_RBV
      - longin
      - Arbitrated BP
      - | field: EGU eV
        | io: input


    * - $(PREFIX):ArbitratedBP:MachineMode_RBV
      - longin
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):ArbitratedBP:PhotonEnergy_RBV
      - ai
      - Arbitrated BP
      - | field: EGU eV
        | io: input


    * - $(PREFIX):ArbitratedBP:Rate_RBV
      - longin
      - Arbitrated BP
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):ArbitratedBP:Transmission_RBV
      - ai
      - Arbitrated BP
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):ArbitratedBP:Valid_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):ArbitratedBP:Veto_RBV
      - waveform
      - Arbitrated BP
      - | io: input


    * - $(PREFIX):CohortCounter_RBV
      - longin
      - Intrnl cohort counter
      - | io: input


 
PMPS.FB_BeamParamAssertionPool
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Entry:001:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[1].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:001:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[1].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:001:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[1].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:001:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[1].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:001:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[1].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:001:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[1].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:001:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[1].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:001:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[1].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:001:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[1].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:001:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[1].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:001:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[1].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:001:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[1].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:001:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[1].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:001:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[1].nBCRange
      - | io: input


    * - $(PREFIX):Entry:001:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:001:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[1].sDevName
      - | io: input


    * - $(PREFIX):Entry:001:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[1].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:001:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[1].nId
      - | io: input


    * - $(PREFIX):Entry:001:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[1].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:001:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[1].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:001:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[1].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:001:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[1].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:001:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[1].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:001:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[1].xValid
      - | io: input


    * - $(PREFIX):Entry:001:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[1].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:002:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[2].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:002:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[2].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:002:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[2].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:002:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[2].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:002:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[2].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:002:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[2].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:002:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[2].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:002:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[2].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:002:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[2].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:002:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[2].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:002:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[2].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:002:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[2].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:002:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[2].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:002:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[2].nBCRange
      - | io: input


    * - $(PREFIX):Entry:002:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:002:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[2].sDevName
      - | io: input


    * - $(PREFIX):Entry:002:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[2].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:002:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[2].nId
      - | io: input


    * - $(PREFIX):Entry:002:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[2].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:002:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[2].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:002:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[2].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:002:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[2].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:002:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[2].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:002:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[2].xValid
      - | io: input


    * - $(PREFIX):Entry:002:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[2].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:003:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[3].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:003:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[3].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:003:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[3].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:003:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[3].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:003:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[3].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:003:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[3].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:003:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[3].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:003:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[3].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:003:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[3].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:003:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[3].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:003:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[3].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:003:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[3].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:003:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[3].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:003:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[3].nBCRange
      - | io: input


    * - $(PREFIX):Entry:003:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:003:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[3].sDevName
      - | io: input


    * - $(PREFIX):Entry:003:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[3].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:003:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[3].nId
      - | io: input


    * - $(PREFIX):Entry:003:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[3].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:003:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[3].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:003:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[3].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:003:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[3].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:003:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[3].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:003:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[3].xValid
      - | io: input


    * - $(PREFIX):Entry:003:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[3].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:004:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[4].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:004:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[4].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:004:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[4].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:004:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[4].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:004:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[4].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:004:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[4].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:004:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[4].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:004:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[4].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:004:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[4].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:004:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[4].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:004:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[4].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:004:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[4].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:004:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[4].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:004:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[4].nBCRange
      - | io: input


    * - $(PREFIX):Entry:004:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:004:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[4].sDevName
      - | io: input


    * - $(PREFIX):Entry:004:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[4].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:004:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[4].nId
      - | io: input


    * - $(PREFIX):Entry:004:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[4].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:004:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[4].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:004:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[4].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:004:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[4].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:004:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[4].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:004:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[4].xValid
      - | io: input


    * - $(PREFIX):Entry:004:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[4].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:005:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[5].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:005:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[5].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:005:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[5].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:005:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[5].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:005:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[5].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:005:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[5].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:005:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[5].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:005:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[5].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:005:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[5].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:005:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[5].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:005:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[5].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:005:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[5].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:005:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[5].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:005:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[5].nBCRange
      - | io: input


    * - $(PREFIX):Entry:005:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:005:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[5].sDevName
      - | io: input


    * - $(PREFIX):Entry:005:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[5].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:005:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[5].nId
      - | io: input


    * - $(PREFIX):Entry:005:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[5].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:005:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[5].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:005:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[5].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:005:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[5].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:005:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[5].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:005:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[5].xValid
      - | io: input


    * - $(PREFIX):Entry:005:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[5].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:006:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[6].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:006:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[6].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:006:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[6].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:006:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[6].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:006:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[6].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:006:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[6].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:006:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[6].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:006:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[6].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:006:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[6].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:006:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[6].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:006:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[6].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:006:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[6].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:006:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[6].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:006:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[6].nBCRange
      - | io: input


    * - $(PREFIX):Entry:006:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:006:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[6].sDevName
      - | io: input


    * - $(PREFIX):Entry:006:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[6].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:006:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[6].nId
      - | io: input


    * - $(PREFIX):Entry:006:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[6].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:006:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[6].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:006:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[6].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:006:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[6].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:006:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[6].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:006:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[6].xValid
      - | io: input


    * - $(PREFIX):Entry:006:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[6].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:007:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[7].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:007:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[7].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:007:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[7].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:007:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[7].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:007:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[7].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:007:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[7].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:007:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[7].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:007:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[7].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:007:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[7].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:007:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[7].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:007:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[7].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:007:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[7].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:007:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[7].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:007:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[7].nBCRange
      - | io: input


    * - $(PREFIX):Entry:007:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:007:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[7].sDevName
      - | io: input


    * - $(PREFIX):Entry:007:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[7].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:007:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[7].nId
      - | io: input


    * - $(PREFIX):Entry:007:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[7].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:007:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[7].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:007:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[7].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:007:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[7].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:007:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[7].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:007:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[7].xValid
      - | io: input


    * - $(PREFIX):Entry:007:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[7].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:008:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[8].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:008:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[8].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:008:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[8].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:008:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[8].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:008:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[8].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:008:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[8].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:008:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[8].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:008:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[8].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:008:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[8].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:008:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[8].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:008:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[8].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:008:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[8].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:008:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[8].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:008:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[8].nBCRange
      - | io: input


    * - $(PREFIX):Entry:008:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:008:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[8].sDevName
      - | io: input


    * - $(PREFIX):Entry:008:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[8].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:008:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[8].nId
      - | io: input


    * - $(PREFIX):Entry:008:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[8].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:008:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[8].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:008:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[8].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:008:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[8].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:008:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[8].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:008:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[8].xValid
      - | io: input


    * - $(PREFIX):Entry:008:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[8].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:009:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[9].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:009:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[9].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:009:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[9].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:009:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[9].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:009:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[9].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:009:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[9].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:009:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[9].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:009:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[9].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:009:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[9].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:009:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[9].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:009:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[9].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:009:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[9].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:009:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[9].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:009:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[9].nBCRange
      - | io: input


    * - $(PREFIX):Entry:009:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:009:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[9].sDevName
      - | io: input


    * - $(PREFIX):Entry:009:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[9].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:009:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[9].nId
      - | io: input


    * - $(PREFIX):Entry:009:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[9].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:009:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[9].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:009:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[9].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:009:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[9].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:009:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[9].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:009:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[9].xValid
      - | io: input


    * - $(PREFIX):Entry:009:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[9].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:010:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[10].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:010:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[10].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:010:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[10].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:010:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[10].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:010:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[10].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:010:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[10].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:010:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[10].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:010:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[10].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:010:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[10].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:010:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[10].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:010:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[10].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:010:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[10].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:010:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[10].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:010:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[10].nBCRange
      - | io: input


    * - $(PREFIX):Entry:010:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:010:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[10].sDevName
      - | io: input


    * - $(PREFIX):Entry:010:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[10].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:010:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[10].nId
      - | io: input


    * - $(PREFIX):Entry:010:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[10].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:010:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[10].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:010:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[10].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:010:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[10].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:010:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[10].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:010:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[10].xValid
      - | io: input


    * - $(PREFIX):Entry:010:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[10].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:011:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[11].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:011:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[11].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:011:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[11].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:011:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[11].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:011:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[11].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:011:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[11].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:011:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[11].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:011:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[11].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:011:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[11].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:011:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[11].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:011:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[11].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:011:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[11].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:011:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[11].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:011:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[11].nBCRange
      - | io: input


    * - $(PREFIX):Entry:011:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:011:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[11].sDevName
      - | io: input


    * - $(PREFIX):Entry:011:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[11].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:011:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[11].nId
      - | io: input


    * - $(PREFIX):Entry:011:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[11].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:011:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[11].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:011:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[11].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:011:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[11].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:011:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[11].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:011:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[11].xValid
      - | io: input


    * - $(PREFIX):Entry:011:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[11].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:012:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[12].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:012:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[12].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:012:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[12].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:012:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[12].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:012:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[12].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:012:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[12].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:012:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[12].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:012:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[12].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:012:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[12].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:012:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[12].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:012:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[12].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:012:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[12].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:012:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[12].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:012:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[12].nBCRange
      - | io: input


    * - $(PREFIX):Entry:012:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:012:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[12].sDevName
      - | io: input


    * - $(PREFIX):Entry:012:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[12].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:012:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[12].nId
      - | io: input


    * - $(PREFIX):Entry:012:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[12].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:012:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[12].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:012:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[12].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:012:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[12].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:012:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[12].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:012:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[12].xValid
      - | io: input


    * - $(PREFIX):Entry:012:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[12].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:013:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[13].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:013:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[13].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:013:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[13].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:013:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[13].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:013:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[13].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:013:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[13].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:013:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[13].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:013:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[13].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:013:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[13].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:013:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[13].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:013:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[13].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:013:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[13].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:013:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[13].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:013:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[13].nBCRange
      - | io: input


    * - $(PREFIX):Entry:013:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:013:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[13].sDevName
      - | io: input


    * - $(PREFIX):Entry:013:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[13].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:013:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[13].nId
      - | io: input


    * - $(PREFIX):Entry:013:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[13].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:013:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[13].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:013:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[13].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:013:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[13].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:013:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[13].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:013:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[13].xValid
      - | io: input


    * - $(PREFIX):Entry:013:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[13].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:014:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[14].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:014:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[14].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:014:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[14].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:014:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[14].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:014:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[14].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:014:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[14].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:014:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[14].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:014:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[14].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:014:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[14].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:014:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[14].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:014:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[14].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:014:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[14].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:014:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[14].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:014:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[14].nBCRange
      - | io: input


    * - $(PREFIX):Entry:014:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:014:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[14].sDevName
      - | io: input


    * - $(PREFIX):Entry:014:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[14].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:014:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[14].nId
      - | io: input


    * - $(PREFIX):Entry:014:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[14].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:014:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[14].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:014:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[14].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:014:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[14].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:014:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[14].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:014:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[14].xValid
      - | io: input


    * - $(PREFIX):Entry:014:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[14].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:015:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[15].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:015:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[15].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:015:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[15].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:015:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[15].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:015:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[15].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:015:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[15].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:015:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[15].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:015:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[15].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:015:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[15].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:015:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[15].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:015:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[15].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:015:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[15].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:015:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[15].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:015:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[15].nBCRange
      - | io: input


    * - $(PREFIX):Entry:015:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:015:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[15].sDevName
      - | io: input


    * - $(PREFIX):Entry:015:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[15].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:015:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[15].nId
      - | io: input


    * - $(PREFIX):Entry:015:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[15].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:015:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[15].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:015:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[15].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:015:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[15].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:015:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[15].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:015:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[15].xValid
      - | io: input


    * - $(PREFIX):Entry:015:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[15].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:016:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[16].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:016:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[16].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:016:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[16].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:016:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[16].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:016:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[16].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:016:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[16].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:016:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[16].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:016:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[16].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:016:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[16].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:016:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[16].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:016:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[16].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:016:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[16].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:016:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[16].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:016:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[16].nBCRange
      - | io: input


    * - $(PREFIX):Entry:016:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:016:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[16].sDevName
      - | io: input


    * - $(PREFIX):Entry:016:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[16].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:016:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[16].nId
      - | io: input


    * - $(PREFIX):Entry:016:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[16].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:016:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[16].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:016:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[16].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:016:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[16].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:016:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[16].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:016:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[16].xValid
      - | io: input


    * - $(PREFIX):Entry:016:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[16].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:017:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[17].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:017:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[17].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:017:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[17].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:017:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[17].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:017:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[17].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:017:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[17].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:017:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[17].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:017:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[17].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:017:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[17].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:017:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[17].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:017:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[17].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:017:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[17].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:017:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[17].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:017:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[17].nBCRange
      - | io: input


    * - $(PREFIX):Entry:017:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:017:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[17].sDevName
      - | io: input


    * - $(PREFIX):Entry:017:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[17].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:017:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[17].nId
      - | io: input


    * - $(PREFIX):Entry:017:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[17].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:017:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[17].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:017:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[17].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:017:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[17].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:017:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[17].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:017:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[17].xValid
      - | io: input


    * - $(PREFIX):Entry:017:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[17].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:018:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[18].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:018:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[18].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:018:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[18].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:018:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[18].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:018:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[18].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:018:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[18].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:018:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[18].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:018:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[18].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:018:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[18].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:018:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[18].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:018:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[18].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:018:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[18].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:018:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[18].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:018:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[18].nBCRange
      - | io: input


    * - $(PREFIX):Entry:018:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:018:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[18].sDevName
      - | io: input


    * - $(PREFIX):Entry:018:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[18].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:018:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[18].nId
      - | io: input


    * - $(PREFIX):Entry:018:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[18].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:018:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[18].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:018:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[18].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:018:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[18].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:018:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[18].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:018:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[18].xValid
      - | io: input


    * - $(PREFIX):Entry:018:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[18].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:019:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[19].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:019:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[19].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:019:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[19].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:019:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[19].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:019:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[19].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:019:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[19].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:019:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[19].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:019:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[19].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:019:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[19].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:019:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[19].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:019:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[19].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:019:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[19].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:019:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[19].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:019:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[19].nBCRange
      - | io: input


    * - $(PREFIX):Entry:019:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:019:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[19].sDevName
      - | io: input


    * - $(PREFIX):Entry:019:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[19].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:019:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[19].nId
      - | io: input


    * - $(PREFIX):Entry:019:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[19].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:019:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[19].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:019:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[19].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:019:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[19].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:019:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[19].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:019:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[19].xValid
      - | io: input


    * - $(PREFIX):Entry:019:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[19].aVetoDevices
      - | io: input


    * - $(PREFIX):Entry:020:Apt:01:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[20].astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:020:Apt:01:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[20].astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Entry:020:Apt:01:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[20].astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:020:Apt:02:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[20].astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:020:Apt:02:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[20].astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Entry:020:Apt:02:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[20].astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:020:Apt:03:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[20].astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:020:Apt:03:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[20].astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Entry:020:Apt:03:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[20].astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:020:Apt:04:Height_RBV
      - ai
      - $(SYMBOL).epicsDataPool[20].astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:020:Apt:04:OK_RBV
      - bi
      - $(SYMBOL).epicsDataPool[20].astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Entry:020:Apt:04:Width_RBV
      - ai
      - $(SYMBOL).epicsDataPool[20].astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Entry:020:BeamClass_RBV
      - longin
      - $(SYMBOL).epicsDataPool[20].nBeamClass
      - | io: input


    * - $(PREFIX):Entry:020:BeamClassRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[20].nBCRange
      - | io: input


    * - $(PREFIX):Entry:020:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Entry:020:Device_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[20].sDevName
      - | io: input


    * - $(PREFIX):Entry:020:eVRanges_RBV
      - longin
      - $(SYMBOL).epicsDataPool[20].neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:020:ID_RBV
      - longin
      - $(SYMBOL).epicsDataPool[20].nId
      - | io: input


    * - $(PREFIX):Entry:020:Live_RBV
      - bi
      - $(SYMBOL).epicsDataPool[20].LiveInTable
      - | io: input


    * - $(PREFIX):Entry:020:MachineMode_RBV
      - longin
      - $(SYMBOL).epicsDataPool[20].nMachineMode
      - | io: input


    * - $(PREFIX):Entry:020:PhotonEnergy_RBV
      - ai
      - $(SYMBOL).epicsDataPool[20].neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Entry:020:Rate_RBV
      - longin
      - $(SYMBOL).epicsDataPool[20].nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Entry:020:Transmission_RBV
      - ai
      - $(SYMBOL).epicsDataPool[20].nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Entry:020:Valid_RBV
      - bi
      - $(SYMBOL).epicsDataPool[20].xValid
      - | io: input


    * - $(PREFIX):Entry:020:Veto_RBV
      - waveform
      - $(SYMBOL).epicsDataPool[20].aVetoDevices
      - | io: input


  
PMPS.FB_HardwareFFOutput
^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ClearFault
      - bo
      - Might be overidden by PLC writes
      - | io: output


    * - $(PREFIX):ClearFault_RBV
      - bi
      - Might be overidden by PLC writes
      - | io: output


    * - $(PREFIX):EnableVeto
      - bo
      - $(SYMBOL).i_xVeto
      - | io: output


    * - $(PREFIX):EnableVeto_RBV
      - bi
      - $(SYMBOL).i_xVeto
      - | io: output


    * - $(PREFIX):FaultHWO_RBV
      - bi
      - Hardware Output Status
      - | io: input


    * - $(PREFIX):FF:001:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[1].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:001:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[1].Info.Desc
      - | io: input


    * - $(PREFIX):FF:001:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[1].Info.DevName
      - | io: input


    * - $(PREFIX):FF:001:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[1].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:001:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[1].Info.InUse
      - | io: input


    * - $(PREFIX):FF:001:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[1].Info.sPath
      - | io: input


    * - $(PREFIX):FF:001:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[1].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:001:OK_RBV
      - bi
      - $(SYMBOL).astFF[1].OK
      - | io: input


    * - $(PREFIX):FF:001:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[1].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:001:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[1].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:001:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[1].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:001:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[1].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:001:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[1].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:001:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[1].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:001:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[1].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:001:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[1].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:001:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[1].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:001:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[1].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:001:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[1].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:001:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[1].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:001:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[1].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:001:Reset
      - bo
      - $(SYMBOL).astFF[1].Reset
      - | io: output


    * - $(PREFIX):FF:001:Reset_RBV
      - bi
      - $(SYMBOL).astFF[1].Reset
      - | io: output


    * - $(PREFIX):FF:002:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[2].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:002:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[2].Info.Desc
      - | io: input


    * - $(PREFIX):FF:002:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[2].Info.DevName
      - | io: input


    * - $(PREFIX):FF:002:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[2].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:002:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[2].Info.InUse
      - | io: input


    * - $(PREFIX):FF:002:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[2].Info.sPath
      - | io: input


    * - $(PREFIX):FF:002:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[2].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:002:OK_RBV
      - bi
      - $(SYMBOL).astFF[2].OK
      - | io: input


    * - $(PREFIX):FF:002:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[2].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:002:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[2].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:002:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[2].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:002:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[2].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:002:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[2].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:002:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[2].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:002:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[2].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:002:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[2].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:002:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[2].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:002:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[2].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:002:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[2].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:002:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[2].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:002:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[2].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:002:Reset
      - bo
      - $(SYMBOL).astFF[2].Reset
      - | io: output


    * - $(PREFIX):FF:002:Reset_RBV
      - bi
      - $(SYMBOL).astFF[2].Reset
      - | io: output


    * - $(PREFIX):FF:003:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[3].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:003:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[3].Info.Desc
      - | io: input


    * - $(PREFIX):FF:003:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[3].Info.DevName
      - | io: input


    * - $(PREFIX):FF:003:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[3].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:003:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[3].Info.InUse
      - | io: input


    * - $(PREFIX):FF:003:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[3].Info.sPath
      - | io: input


    * - $(PREFIX):FF:003:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[3].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:003:OK_RBV
      - bi
      - $(SYMBOL).astFF[3].OK
      - | io: input


    * - $(PREFIX):FF:003:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[3].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:003:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[3].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:003:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[3].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:003:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[3].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:003:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[3].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:003:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[3].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:003:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[3].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:003:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[3].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:003:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[3].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:003:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[3].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:003:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[3].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:003:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[3].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:003:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[3].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:003:Reset
      - bo
      - $(SYMBOL).astFF[3].Reset
      - | io: output


    * - $(PREFIX):FF:003:Reset_RBV
      - bi
      - $(SYMBOL).astFF[3].Reset
      - | io: output


    * - $(PREFIX):FF:004:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[4].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:004:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[4].Info.Desc
      - | io: input


    * - $(PREFIX):FF:004:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[4].Info.DevName
      - | io: input


    * - $(PREFIX):FF:004:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[4].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:004:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[4].Info.InUse
      - | io: input


    * - $(PREFIX):FF:004:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[4].Info.sPath
      - | io: input


    * - $(PREFIX):FF:004:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[4].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:004:OK_RBV
      - bi
      - $(SYMBOL).astFF[4].OK
      - | io: input


    * - $(PREFIX):FF:004:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[4].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:004:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[4].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:004:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[4].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:004:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[4].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:004:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[4].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:004:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[4].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:004:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[4].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:004:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[4].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:004:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[4].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:004:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[4].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:004:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[4].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:004:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[4].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:004:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[4].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:004:Reset
      - bo
      - $(SYMBOL).astFF[4].Reset
      - | io: output


    * - $(PREFIX):FF:004:Reset_RBV
      - bi
      - $(SYMBOL).astFF[4].Reset
      - | io: output


    * - $(PREFIX):FF:005:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[5].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:005:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[5].Info.Desc
      - | io: input


    * - $(PREFIX):FF:005:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[5].Info.DevName
      - | io: input


    * - $(PREFIX):FF:005:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[5].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:005:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[5].Info.InUse
      - | io: input


    * - $(PREFIX):FF:005:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[5].Info.sPath
      - | io: input


    * - $(PREFIX):FF:005:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[5].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:005:OK_RBV
      - bi
      - $(SYMBOL).astFF[5].OK
      - | io: input


    * - $(PREFIX):FF:005:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[5].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:005:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[5].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:005:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[5].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:005:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[5].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:005:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[5].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:005:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[5].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:005:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[5].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:005:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[5].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:005:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[5].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:005:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[5].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:005:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[5].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:005:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[5].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:005:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[5].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:005:Reset
      - bo
      - $(SYMBOL).astFF[5].Reset
      - | io: output


    * - $(PREFIX):FF:005:Reset_RBV
      - bi
      - $(SYMBOL).astFF[5].Reset
      - | io: output


    * - $(PREFIX):FF:006:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[6].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:006:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[6].Info.Desc
      - | io: input


    * - $(PREFIX):FF:006:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[6].Info.DevName
      - | io: input


    * - $(PREFIX):FF:006:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[6].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:006:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[6].Info.InUse
      - | io: input


    * - $(PREFIX):FF:006:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[6].Info.sPath
      - | io: input


    * - $(PREFIX):FF:006:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[6].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:006:OK_RBV
      - bi
      - $(SYMBOL).astFF[6].OK
      - | io: input


    * - $(PREFIX):FF:006:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[6].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:006:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[6].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:006:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[6].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:006:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[6].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:006:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[6].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:006:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[6].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:006:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[6].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:006:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[6].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:006:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[6].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:006:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[6].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:006:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[6].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:006:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[6].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:006:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[6].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:006:Reset
      - bo
      - $(SYMBOL).astFF[6].Reset
      - | io: output


    * - $(PREFIX):FF:006:Reset_RBV
      - bi
      - $(SYMBOL).astFF[6].Reset
      - | io: output


    * - $(PREFIX):FF:007:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[7].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:007:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[7].Info.Desc
      - | io: input


    * - $(PREFIX):FF:007:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[7].Info.DevName
      - | io: input


    * - $(PREFIX):FF:007:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[7].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:007:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[7].Info.InUse
      - | io: input


    * - $(PREFIX):FF:007:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[7].Info.sPath
      - | io: input


    * - $(PREFIX):FF:007:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[7].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:007:OK_RBV
      - bi
      - $(SYMBOL).astFF[7].OK
      - | io: input


    * - $(PREFIX):FF:007:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[7].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:007:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[7].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:007:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[7].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:007:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[7].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:007:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[7].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:007:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[7].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:007:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[7].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:007:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[7].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:007:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[7].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:007:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[7].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:007:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[7].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:007:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[7].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:007:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[7].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:007:Reset
      - bo
      - $(SYMBOL).astFF[7].Reset
      - | io: output


    * - $(PREFIX):FF:007:Reset_RBV
      - bi
      - $(SYMBOL).astFF[7].Reset
      - | io: output


    * - $(PREFIX):FF:008:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[8].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:008:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[8].Info.Desc
      - | io: input


    * - $(PREFIX):FF:008:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[8].Info.DevName
      - | io: input


    * - $(PREFIX):FF:008:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[8].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:008:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[8].Info.InUse
      - | io: input


    * - $(PREFIX):FF:008:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[8].Info.sPath
      - | io: input


    * - $(PREFIX):FF:008:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[8].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:008:OK_RBV
      - bi
      - $(SYMBOL).astFF[8].OK
      - | io: input


    * - $(PREFIX):FF:008:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[8].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:008:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[8].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:008:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[8].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:008:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[8].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:008:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[8].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:008:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[8].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:008:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[8].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:008:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[8].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:008:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[8].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:008:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[8].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:008:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[8].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:008:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[8].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:008:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[8].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:008:Reset
      - bo
      - $(SYMBOL).astFF[8].Reset
      - | io: output


    * - $(PREFIX):FF:008:Reset_RBV
      - bi
      - $(SYMBOL).astFF[8].Reset
      - | io: output


    * - $(PREFIX):FF:009:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[9].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:009:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[9].Info.Desc
      - | io: input


    * - $(PREFIX):FF:009:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[9].Info.DevName
      - | io: input


    * - $(PREFIX):FF:009:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[9].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:009:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[9].Info.InUse
      - | io: input


    * - $(PREFIX):FF:009:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[9].Info.sPath
      - | io: input


    * - $(PREFIX):FF:009:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[9].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:009:OK_RBV
      - bi
      - $(SYMBOL).astFF[9].OK
      - | io: input


    * - $(PREFIX):FF:009:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[9].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:009:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[9].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:009:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[9].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:009:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[9].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:009:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[9].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:009:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[9].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:009:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[9].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:009:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[9].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:009:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[9].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:009:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[9].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:009:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[9].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:009:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[9].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:009:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[9].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:009:Reset
      - bo
      - $(SYMBOL).astFF[9].Reset
      - | io: output


    * - $(PREFIX):FF:009:Reset_RBV
      - bi
      - $(SYMBOL).astFF[9].Reset
      - | io: output


    * - $(PREFIX):FF:010:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[10].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:010:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[10].Info.Desc
      - | io: input


    * - $(PREFIX):FF:010:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[10].Info.DevName
      - | io: input


    * - $(PREFIX):FF:010:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[10].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:010:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[10].Info.InUse
      - | io: input


    * - $(PREFIX):FF:010:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[10].Info.sPath
      - | io: input


    * - $(PREFIX):FF:010:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[10].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:010:OK_RBV
      - bi
      - $(SYMBOL).astFF[10].OK
      - | io: input


    * - $(PREFIX):FF:010:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[10].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:010:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[10].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:010:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[10].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:010:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[10].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:010:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[10].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:010:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[10].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:010:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[10].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:010:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[10].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:010:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[10].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:010:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[10].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:010:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[10].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:010:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[10].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:010:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[10].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:010:Reset
      - bo
      - $(SYMBOL).astFF[10].Reset
      - | io: output


    * - $(PREFIX):FF:010:Reset_RBV
      - bi
      - $(SYMBOL).astFF[10].Reset
      - | io: output


    * - $(PREFIX):FF:011:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[11].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:011:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[11].Info.Desc
      - | io: input


    * - $(PREFIX):FF:011:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[11].Info.DevName
      - | io: input


    * - $(PREFIX):FF:011:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[11].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:011:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[11].Info.InUse
      - | io: input


    * - $(PREFIX):FF:011:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[11].Info.sPath
      - | io: input


    * - $(PREFIX):FF:011:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[11].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:011:OK_RBV
      - bi
      - $(SYMBOL).astFF[11].OK
      - | io: input


    * - $(PREFIX):FF:011:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[11].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:011:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[11].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:011:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[11].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:011:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[11].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:011:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[11].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:011:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[11].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:011:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[11].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:011:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[11].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:011:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[11].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:011:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[11].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:011:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[11].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:011:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[11].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:011:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[11].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:011:Reset
      - bo
      - $(SYMBOL).astFF[11].Reset
      - | io: output


    * - $(PREFIX):FF:011:Reset_RBV
      - bi
      - $(SYMBOL).astFF[11].Reset
      - | io: output


    * - $(PREFIX):FF:012:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[12].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:012:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[12].Info.Desc
      - | io: input


    * - $(PREFIX):FF:012:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[12].Info.DevName
      - | io: input


    * - $(PREFIX):FF:012:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[12].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:012:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[12].Info.InUse
      - | io: input


    * - $(PREFIX):FF:012:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[12].Info.sPath
      - | io: input


    * - $(PREFIX):FF:012:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[12].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:012:OK_RBV
      - bi
      - $(SYMBOL).astFF[12].OK
      - | io: input


    * - $(PREFIX):FF:012:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[12].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:012:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[12].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:012:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[12].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:012:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[12].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:012:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[12].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:012:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[12].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:012:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[12].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:012:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[12].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:012:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[12].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:012:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[12].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:012:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[12].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:012:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[12].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:012:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[12].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:012:Reset
      - bo
      - $(SYMBOL).astFF[12].Reset
      - | io: output


    * - $(PREFIX):FF:012:Reset_RBV
      - bi
      - $(SYMBOL).astFF[12].Reset
      - | io: output


    * - $(PREFIX):FF:013:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[13].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:013:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[13].Info.Desc
      - | io: input


    * - $(PREFIX):FF:013:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[13].Info.DevName
      - | io: input


    * - $(PREFIX):FF:013:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[13].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:013:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[13].Info.InUse
      - | io: input


    * - $(PREFIX):FF:013:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[13].Info.sPath
      - | io: input


    * - $(PREFIX):FF:013:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[13].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:013:OK_RBV
      - bi
      - $(SYMBOL).astFF[13].OK
      - | io: input


    * - $(PREFIX):FF:013:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[13].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:013:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[13].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:013:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[13].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:013:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[13].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:013:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[13].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:013:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[13].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:013:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[13].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:013:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[13].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:013:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[13].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:013:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[13].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:013:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[13].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:013:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[13].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:013:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[13].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:013:Reset
      - bo
      - $(SYMBOL).astFF[13].Reset
      - | io: output


    * - $(PREFIX):FF:013:Reset_RBV
      - bi
      - $(SYMBOL).astFF[13].Reset
      - | io: output


    * - $(PREFIX):FF:014:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[14].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:014:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[14].Info.Desc
      - | io: input


    * - $(PREFIX):FF:014:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[14].Info.DevName
      - | io: input


    * - $(PREFIX):FF:014:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[14].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:014:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[14].Info.InUse
      - | io: input


    * - $(PREFIX):FF:014:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[14].Info.sPath
      - | io: input


    * - $(PREFIX):FF:014:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[14].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:014:OK_RBV
      - bi
      - $(SYMBOL).astFF[14].OK
      - | io: input


    * - $(PREFIX):FF:014:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[14].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:014:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[14].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:014:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[14].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:014:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[14].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:014:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[14].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:014:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[14].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:014:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[14].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:014:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[14].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:014:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[14].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:014:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[14].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:014:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[14].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:014:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[14].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:014:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[14].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:014:Reset
      - bo
      - $(SYMBOL).astFF[14].Reset
      - | io: output


    * - $(PREFIX):FF:014:Reset_RBV
      - bi
      - $(SYMBOL).astFF[14].Reset
      - | io: output


    * - $(PREFIX):FF:015:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[15].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:015:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[15].Info.Desc
      - | io: input


    * - $(PREFIX):FF:015:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[15].Info.DevName
      - | io: input


    * - $(PREFIX):FF:015:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[15].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:015:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[15].Info.InUse
      - | io: input


    * - $(PREFIX):FF:015:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[15].Info.sPath
      - | io: input


    * - $(PREFIX):FF:015:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[15].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:015:OK_RBV
      - bi
      - $(SYMBOL).astFF[15].OK
      - | io: input


    * - $(PREFIX):FF:015:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[15].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:015:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[15].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:015:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[15].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:015:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[15].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:015:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[15].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:015:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[15].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:015:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[15].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:015:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[15].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:015:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[15].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:015:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[15].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:015:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[15].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:015:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[15].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:015:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[15].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:015:Reset
      - bo
      - $(SYMBOL).astFF[15].Reset
      - | io: output


    * - $(PREFIX):FF:015:Reset_RBV
      - bi
      - $(SYMBOL).astFF[15].Reset
      - | io: output


    * - $(PREFIX):FF:016:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[16].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:016:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[16].Info.Desc
      - | io: input


    * - $(PREFIX):FF:016:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[16].Info.DevName
      - | io: input


    * - $(PREFIX):FF:016:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[16].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:016:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[16].Info.InUse
      - | io: input


    * - $(PREFIX):FF:016:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[16].Info.sPath
      - | io: input


    * - $(PREFIX):FF:016:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[16].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:016:OK_RBV
      - bi
      - $(SYMBOL).astFF[16].OK
      - | io: input


    * - $(PREFIX):FF:016:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[16].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:016:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[16].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:016:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[16].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:016:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[16].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:016:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[16].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:016:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[16].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:016:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[16].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:016:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[16].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:016:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[16].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:016:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[16].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:016:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[16].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:016:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[16].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:016:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[16].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:016:Reset
      - bo
      - $(SYMBOL).astFF[16].Reset
      - | io: output


    * - $(PREFIX):FF:016:Reset_RBV
      - bi
      - $(SYMBOL).astFF[16].Reset
      - | io: output


    * - $(PREFIX):FF:017:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[17].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:017:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[17].Info.Desc
      - | io: input


    * - $(PREFIX):FF:017:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[17].Info.DevName
      - | io: input


    * - $(PREFIX):FF:017:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[17].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:017:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[17].Info.InUse
      - | io: input


    * - $(PREFIX):FF:017:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[17].Info.sPath
      - | io: input


    * - $(PREFIX):FF:017:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[17].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:017:OK_RBV
      - bi
      - $(SYMBOL).astFF[17].OK
      - | io: input


    * - $(PREFIX):FF:017:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[17].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:017:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[17].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:017:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[17].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:017:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[17].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:017:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[17].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:017:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[17].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:017:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[17].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:017:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[17].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:017:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[17].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:017:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[17].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:017:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[17].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:017:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[17].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:017:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[17].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:017:Reset
      - bo
      - $(SYMBOL).astFF[17].Reset
      - | io: output


    * - $(PREFIX):FF:017:Reset_RBV
      - bi
      - $(SYMBOL).astFF[17].Reset
      - | io: output


    * - $(PREFIX):FF:018:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[18].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:018:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[18].Info.Desc
      - | io: input


    * - $(PREFIX):FF:018:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[18].Info.DevName
      - | io: input


    * - $(PREFIX):FF:018:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[18].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:018:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[18].Info.InUse
      - | io: input


    * - $(PREFIX):FF:018:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[18].Info.sPath
      - | io: input


    * - $(PREFIX):FF:018:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[18].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:018:OK_RBV
      - bi
      - $(SYMBOL).astFF[18].OK
      - | io: input


    * - $(PREFIX):FF:018:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[18].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:018:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[18].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:018:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[18].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:018:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[18].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:018:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[18].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:018:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[18].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:018:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[18].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:018:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[18].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:018:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[18].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:018:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[18].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:018:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[18].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:018:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[18].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:018:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[18].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:018:Reset
      - bo
      - $(SYMBOL).astFF[18].Reset
      - | io: output


    * - $(PREFIX):FF:018:Reset_RBV
      - bi
      - $(SYMBOL).astFF[18].Reset
      - | io: output


    * - $(PREFIX):FF:019:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[19].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:019:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[19].Info.Desc
      - | io: input


    * - $(PREFIX):FF:019:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[19].Info.DevName
      - | io: input


    * - $(PREFIX):FF:019:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[19].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:019:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[19].Info.InUse
      - | io: input


    * - $(PREFIX):FF:019:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[19].Info.sPath
      - | io: input


    * - $(PREFIX):FF:019:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[19].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:019:OK_RBV
      - bi
      - $(SYMBOL).astFF[19].OK
      - | io: input


    * - $(PREFIX):FF:019:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[19].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:019:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[19].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:019:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[19].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:019:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[19].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:019:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[19].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:019:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[19].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:019:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[19].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:019:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[19].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:019:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[19].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:019:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[19].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:019:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[19].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:019:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[19].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:019:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[19].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:019:Reset
      - bo
      - $(SYMBOL).astFF[19].Reset
      - | io: output


    * - $(PREFIX):FF:019:Reset_RBV
      - bi
      - $(SYMBOL).astFF[19].Reset
      - | io: output


    * - $(PREFIX):FF:020:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[20].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:020:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[20].Info.Desc
      - | io: input


    * - $(PREFIX):FF:020:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[20].Info.DevName
      - | io: input


    * - $(PREFIX):FF:020:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[20].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:020:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[20].Info.InUse
      - | io: input


    * - $(PREFIX):FF:020:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[20].Info.sPath
      - | io: input


    * - $(PREFIX):FF:020:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[20].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:020:OK_RBV
      - bi
      - $(SYMBOL).astFF[20].OK
      - | io: input


    * - $(PREFIX):FF:020:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[20].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:020:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[20].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:020:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[20].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:020:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[20].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:020:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[20].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:020:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[20].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:020:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[20].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:020:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[20].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:020:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[20].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:020:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[20].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:020:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[20].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:020:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[20].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:020:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[20].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:020:Reset
      - bo
      - $(SYMBOL).astFF[20].Reset
      - | io: output


    * - $(PREFIX):FF:020:Reset_RBV
      - bi
      - $(SYMBOL).astFF[20].Reset
      - | io: output


    * - $(PREFIX):FF:021:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[21].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:021:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[21].Info.Desc
      - | io: input


    * - $(PREFIX):FF:021:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[21].Info.DevName
      - | io: input


    * - $(PREFIX):FF:021:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[21].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:021:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[21].Info.InUse
      - | io: input


    * - $(PREFIX):FF:021:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[21].Info.sPath
      - | io: input


    * - $(PREFIX):FF:021:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[21].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:021:OK_RBV
      - bi
      - $(SYMBOL).astFF[21].OK
      - | io: input


    * - $(PREFIX):FF:021:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[21].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:021:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[21].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:021:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[21].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:021:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[21].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:021:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[21].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:021:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[21].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:021:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[21].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:021:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[21].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:021:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[21].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:021:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[21].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:021:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[21].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:021:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[21].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:021:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[21].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:021:Reset
      - bo
      - $(SYMBOL).astFF[21].Reset
      - | io: output


    * - $(PREFIX):FF:021:Reset_RBV
      - bi
      - $(SYMBOL).astFF[21].Reset
      - | io: output


    * - $(PREFIX):FF:022:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[22].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:022:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[22].Info.Desc
      - | io: input


    * - $(PREFIX):FF:022:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[22].Info.DevName
      - | io: input


    * - $(PREFIX):FF:022:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[22].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:022:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[22].Info.InUse
      - | io: input


    * - $(PREFIX):FF:022:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[22].Info.sPath
      - | io: input


    * - $(PREFIX):FF:022:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[22].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:022:OK_RBV
      - bi
      - $(SYMBOL).astFF[22].OK
      - | io: input


    * - $(PREFIX):FF:022:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[22].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:022:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[22].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:022:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[22].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:022:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[22].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:022:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[22].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:022:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[22].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:022:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[22].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:022:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[22].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:022:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[22].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:022:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[22].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:022:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[22].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:022:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[22].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:022:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[22].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:022:Reset
      - bo
      - $(SYMBOL).astFF[22].Reset
      - | io: output


    * - $(PREFIX):FF:022:Reset_RBV
      - bi
      - $(SYMBOL).astFF[22].Reset
      - | io: output


    * - $(PREFIX):FF:023:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[23].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:023:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[23].Info.Desc
      - | io: input


    * - $(PREFIX):FF:023:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[23].Info.DevName
      - | io: input


    * - $(PREFIX):FF:023:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[23].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:023:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[23].Info.InUse
      - | io: input


    * - $(PREFIX):FF:023:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[23].Info.sPath
      - | io: input


    * - $(PREFIX):FF:023:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[23].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:023:OK_RBV
      - bi
      - $(SYMBOL).astFF[23].OK
      - | io: input


    * - $(PREFIX):FF:023:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[23].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:023:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[23].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:023:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[23].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:023:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[23].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:023:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[23].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:023:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[23].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:023:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[23].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:023:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[23].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:023:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[23].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:023:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[23].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:023:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[23].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:023:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[23].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:023:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[23].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:023:Reset
      - bo
      - $(SYMBOL).astFF[23].Reset
      - | io: output


    * - $(PREFIX):FF:023:Reset_RBV
      - bi
      - $(SYMBOL).astFF[23].Reset
      - | io: output


    * - $(PREFIX):FF:024:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[24].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:024:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[24].Info.Desc
      - | io: input


    * - $(PREFIX):FF:024:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[24].Info.DevName
      - | io: input


    * - $(PREFIX):FF:024:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[24].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:024:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[24].Info.InUse
      - | io: input


    * - $(PREFIX):FF:024:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[24].Info.sPath
      - | io: input


    * - $(PREFIX):FF:024:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[24].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:024:OK_RBV
      - bi
      - $(SYMBOL).astFF[24].OK
      - | io: input


    * - $(PREFIX):FF:024:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[24].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:024:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[24].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:024:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[24].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:024:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[24].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:024:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[24].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:024:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[24].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:024:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[24].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:024:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[24].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:024:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[24].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:024:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[24].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:024:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[24].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:024:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[24].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:024:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[24].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:024:Reset
      - bo
      - $(SYMBOL).astFF[24].Reset
      - | io: output


    * - $(PREFIX):FF:024:Reset_RBV
      - bi
      - $(SYMBOL).astFF[24].Reset
      - | io: output


    * - $(PREFIX):FF:025:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[25].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:025:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[25].Info.Desc
      - | io: input


    * - $(PREFIX):FF:025:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[25].Info.DevName
      - | io: input


    * - $(PREFIX):FF:025:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[25].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:025:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[25].Info.InUse
      - | io: input


    * - $(PREFIX):FF:025:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[25].Info.sPath
      - | io: input


    * - $(PREFIX):FF:025:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[25].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:025:OK_RBV
      - bi
      - $(SYMBOL).astFF[25].OK
      - | io: input


    * - $(PREFIX):FF:025:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[25].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:025:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[25].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:025:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[25].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:025:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[25].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:025:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[25].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:025:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[25].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:025:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[25].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:025:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[25].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:025:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[25].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:025:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[25].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:025:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[25].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:025:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[25].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:025:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[25].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:025:Reset
      - bo
      - $(SYMBOL).astFF[25].Reset
      - | io: output


    * - $(PREFIX):FF:025:Reset_RBV
      - bi
      - $(SYMBOL).astFF[25].Reset
      - | io: output


    * - $(PREFIX):FF:026:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[26].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:026:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[26].Info.Desc
      - | io: input


    * - $(PREFIX):FF:026:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[26].Info.DevName
      - | io: input


    * - $(PREFIX):FF:026:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[26].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:026:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[26].Info.InUse
      - | io: input


    * - $(PREFIX):FF:026:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[26].Info.sPath
      - | io: input


    * - $(PREFIX):FF:026:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[26].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:026:OK_RBV
      - bi
      - $(SYMBOL).astFF[26].OK
      - | io: input


    * - $(PREFIX):FF:026:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[26].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:026:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[26].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:026:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[26].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:026:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[26].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:026:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[26].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:026:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[26].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:026:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[26].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:026:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[26].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:026:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[26].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:026:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[26].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:026:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[26].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:026:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[26].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:026:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[26].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:026:Reset
      - bo
      - $(SYMBOL).astFF[26].Reset
      - | io: output


    * - $(PREFIX):FF:026:Reset_RBV
      - bi
      - $(SYMBOL).astFF[26].Reset
      - | io: output


    * - $(PREFIX):FF:027:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[27].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:027:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[27].Info.Desc
      - | io: input


    * - $(PREFIX):FF:027:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[27].Info.DevName
      - | io: input


    * - $(PREFIX):FF:027:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[27].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:027:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[27].Info.InUse
      - | io: input


    * - $(PREFIX):FF:027:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[27].Info.sPath
      - | io: input


    * - $(PREFIX):FF:027:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[27].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:027:OK_RBV
      - bi
      - $(SYMBOL).astFF[27].OK
      - | io: input


    * - $(PREFIX):FF:027:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[27].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:027:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[27].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:027:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[27].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:027:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[27].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:027:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[27].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:027:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[27].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:027:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[27].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:027:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[27].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:027:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[27].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:027:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[27].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:027:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[27].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:027:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[27].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:027:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[27].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:027:Reset
      - bo
      - $(SYMBOL).astFF[27].Reset
      - | io: output


    * - $(PREFIX):FF:027:Reset_RBV
      - bi
      - $(SYMBOL).astFF[27].Reset
      - | io: output


    * - $(PREFIX):FF:028:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[28].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:028:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[28].Info.Desc
      - | io: input


    * - $(PREFIX):FF:028:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[28].Info.DevName
      - | io: input


    * - $(PREFIX):FF:028:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[28].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:028:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[28].Info.InUse
      - | io: input


    * - $(PREFIX):FF:028:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[28].Info.sPath
      - | io: input


    * - $(PREFIX):FF:028:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[28].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:028:OK_RBV
      - bi
      - $(SYMBOL).astFF[28].OK
      - | io: input


    * - $(PREFIX):FF:028:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[28].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:028:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[28].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:028:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[28].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:028:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[28].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:028:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[28].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:028:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[28].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:028:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[28].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:028:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[28].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:028:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[28].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:028:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[28].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:028:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[28].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:028:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[28].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:028:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[28].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:028:Reset
      - bo
      - $(SYMBOL).astFF[28].Reset
      - | io: output


    * - $(PREFIX):FF:028:Reset_RBV
      - bi
      - $(SYMBOL).astFF[28].Reset
      - | io: output


    * - $(PREFIX):FF:029:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[29].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:029:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[29].Info.Desc
      - | io: input


    * - $(PREFIX):FF:029:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[29].Info.DevName
      - | io: input


    * - $(PREFIX):FF:029:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[29].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:029:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[29].Info.InUse
      - | io: input


    * - $(PREFIX):FF:029:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[29].Info.sPath
      - | io: input


    * - $(PREFIX):FF:029:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[29].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:029:OK_RBV
      - bi
      - $(SYMBOL).astFF[29].OK
      - | io: input


    * - $(PREFIX):FF:029:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[29].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:029:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[29].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:029:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[29].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:029:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[29].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:029:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[29].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:029:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[29].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:029:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[29].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:029:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[29].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:029:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[29].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:029:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[29].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:029:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[29].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:029:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[29].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:029:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[29].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:029:Reset
      - bo
      - $(SYMBOL).astFF[29].Reset
      - | io: output


    * - $(PREFIX):FF:029:Reset_RBV
      - bi
      - $(SYMBOL).astFF[29].Reset
      - | io: output


    * - $(PREFIX):FF:030:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[30].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:030:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[30].Info.Desc
      - | io: input


    * - $(PREFIX):FF:030:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[30].Info.DevName
      - | io: input


    * - $(PREFIX):FF:030:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[30].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:030:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[30].Info.InUse
      - | io: input


    * - $(PREFIX):FF:030:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[30].Info.sPath
      - | io: input


    * - $(PREFIX):FF:030:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[30].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:030:OK_RBV
      - bi
      - $(SYMBOL).astFF[30].OK
      - | io: input


    * - $(PREFIX):FF:030:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[30].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:030:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[30].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:030:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[30].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:030:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[30].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:030:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[30].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:030:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[30].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:030:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[30].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:030:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[30].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:030:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[30].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:030:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[30].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:030:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[30].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:030:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[30].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:030:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[30].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:030:Reset
      - bo
      - $(SYMBOL).astFF[30].Reset
      - | io: output


    * - $(PREFIX):FF:030:Reset_RBV
      - bi
      - $(SYMBOL).astFF[30].Reset
      - | io: output


    * - $(PREFIX):FF:031:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[31].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:031:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[31].Info.Desc
      - | io: input


    * - $(PREFIX):FF:031:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[31].Info.DevName
      - | io: input


    * - $(PREFIX):FF:031:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[31].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:031:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[31].Info.InUse
      - | io: input


    * - $(PREFIX):FF:031:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[31].Info.sPath
      - | io: input


    * - $(PREFIX):FF:031:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[31].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:031:OK_RBV
      - bi
      - $(SYMBOL).astFF[31].OK
      - | io: input


    * - $(PREFIX):FF:031:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[31].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:031:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[31].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:031:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[31].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:031:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[31].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:031:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[31].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:031:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[31].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:031:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[31].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:031:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[31].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:031:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[31].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:031:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[31].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:031:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[31].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:031:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[31].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:031:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[31].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:031:Reset
      - bo
      - $(SYMBOL).astFF[31].Reset
      - | io: output


    * - $(PREFIX):FF:031:Reset_RBV
      - bi
      - $(SYMBOL).astFF[31].Reset
      - | io: output


    * - $(PREFIX):FF:032:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[32].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:032:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[32].Info.Desc
      - | io: input


    * - $(PREFIX):FF:032:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[32].Info.DevName
      - | io: input


    * - $(PREFIX):FF:032:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[32].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:032:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[32].Info.InUse
      - | io: input


    * - $(PREFIX):FF:032:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[32].Info.sPath
      - | io: input


    * - $(PREFIX):FF:032:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[32].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:032:OK_RBV
      - bi
      - $(SYMBOL).astFF[32].OK
      - | io: input


    * - $(PREFIX):FF:032:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[32].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:032:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[32].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:032:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[32].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:032:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[32].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:032:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[32].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:032:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[32].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:032:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[32].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:032:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[32].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:032:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[32].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:032:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[32].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:032:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[32].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:032:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[32].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:032:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[32].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:032:Reset
      - bo
      - $(SYMBOL).astFF[32].Reset
      - | io: output


    * - $(PREFIX):FF:032:Reset_RBV
      - bi
      - $(SYMBOL).astFF[32].Reset
      - | io: output


    * - $(PREFIX):FF:033:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[33].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:033:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[33].Info.Desc
      - | io: input


    * - $(PREFIX):FF:033:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[33].Info.DevName
      - | io: input


    * - $(PREFIX):FF:033:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[33].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:033:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[33].Info.InUse
      - | io: input


    * - $(PREFIX):FF:033:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[33].Info.sPath
      - | io: input


    * - $(PREFIX):FF:033:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[33].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:033:OK_RBV
      - bi
      - $(SYMBOL).astFF[33].OK
      - | io: input


    * - $(PREFIX):FF:033:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[33].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:033:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[33].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:033:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[33].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:033:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[33].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:033:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[33].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:033:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[33].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:033:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[33].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:033:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[33].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:033:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[33].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:033:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[33].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:033:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[33].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:033:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[33].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:033:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[33].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:033:Reset
      - bo
      - $(SYMBOL).astFF[33].Reset
      - | io: output


    * - $(PREFIX):FF:033:Reset_RBV
      - bi
      - $(SYMBOL).astFF[33].Reset
      - | io: output


    * - $(PREFIX):FF:034:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[34].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:034:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[34].Info.Desc
      - | io: input


    * - $(PREFIX):FF:034:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[34].Info.DevName
      - | io: input


    * - $(PREFIX):FF:034:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[34].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:034:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[34].Info.InUse
      - | io: input


    * - $(PREFIX):FF:034:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[34].Info.sPath
      - | io: input


    * - $(PREFIX):FF:034:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[34].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:034:OK_RBV
      - bi
      - $(SYMBOL).astFF[34].OK
      - | io: input


    * - $(PREFIX):FF:034:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[34].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:034:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[34].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:034:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[34].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:034:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[34].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:034:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[34].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:034:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[34].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:034:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[34].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:034:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[34].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:034:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[34].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:034:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[34].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:034:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[34].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:034:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[34].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:034:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[34].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:034:Reset
      - bo
      - $(SYMBOL).astFF[34].Reset
      - | io: output


    * - $(PREFIX):FF:034:Reset_RBV
      - bi
      - $(SYMBOL).astFF[34].Reset
      - | io: output


    * - $(PREFIX):FF:035:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[35].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:035:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[35].Info.Desc
      - | io: input


    * - $(PREFIX):FF:035:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[35].Info.DevName
      - | io: input


    * - $(PREFIX):FF:035:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[35].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:035:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[35].Info.InUse
      - | io: input


    * - $(PREFIX):FF:035:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[35].Info.sPath
      - | io: input


    * - $(PREFIX):FF:035:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[35].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:035:OK_RBV
      - bi
      - $(SYMBOL).astFF[35].OK
      - | io: input


    * - $(PREFIX):FF:035:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[35].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:035:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[35].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:035:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[35].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:035:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[35].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:035:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[35].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:035:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[35].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:035:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[35].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:035:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[35].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:035:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[35].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:035:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[35].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:035:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[35].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:035:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[35].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:035:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[35].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:035:Reset
      - bo
      - $(SYMBOL).astFF[35].Reset
      - | io: output


    * - $(PREFIX):FF:035:Reset_RBV
      - bi
      - $(SYMBOL).astFF[35].Reset
      - | io: output


    * - $(PREFIX):FF:036:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[36].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:036:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[36].Info.Desc
      - | io: input


    * - $(PREFIX):FF:036:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[36].Info.DevName
      - | io: input


    * - $(PREFIX):FF:036:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[36].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:036:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[36].Info.InUse
      - | io: input


    * - $(PREFIX):FF:036:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[36].Info.sPath
      - | io: input


    * - $(PREFIX):FF:036:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[36].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:036:OK_RBV
      - bi
      - $(SYMBOL).astFF[36].OK
      - | io: input


    * - $(PREFIX):FF:036:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[36].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:036:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[36].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:036:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[36].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:036:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[36].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:036:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[36].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:036:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[36].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:036:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[36].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:036:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[36].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:036:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[36].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:036:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[36].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:036:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[36].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:036:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[36].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:036:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[36].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:036:Reset
      - bo
      - $(SYMBOL).astFF[36].Reset
      - | io: output


    * - $(PREFIX):FF:036:Reset_RBV
      - bi
      - $(SYMBOL).astFF[36].Reset
      - | io: output


    * - $(PREFIX):FF:037:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[37].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:037:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[37].Info.Desc
      - | io: input


    * - $(PREFIX):FF:037:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[37].Info.DevName
      - | io: input


    * - $(PREFIX):FF:037:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[37].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:037:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[37].Info.InUse
      - | io: input


    * - $(PREFIX):FF:037:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[37].Info.sPath
      - | io: input


    * - $(PREFIX):FF:037:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[37].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:037:OK_RBV
      - bi
      - $(SYMBOL).astFF[37].OK
      - | io: input


    * - $(PREFIX):FF:037:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[37].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:037:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[37].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:037:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[37].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:037:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[37].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:037:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[37].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:037:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[37].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:037:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[37].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:037:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[37].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:037:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[37].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:037:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[37].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:037:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[37].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:037:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[37].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:037:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[37].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:037:Reset
      - bo
      - $(SYMBOL).astFF[37].Reset
      - | io: output


    * - $(PREFIX):FF:037:Reset_RBV
      - bi
      - $(SYMBOL).astFF[37].Reset
      - | io: output


    * - $(PREFIX):FF:038:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[38].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:038:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[38].Info.Desc
      - | io: input


    * - $(PREFIX):FF:038:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[38].Info.DevName
      - | io: input


    * - $(PREFIX):FF:038:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[38].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:038:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[38].Info.InUse
      - | io: input


    * - $(PREFIX):FF:038:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[38].Info.sPath
      - | io: input


    * - $(PREFIX):FF:038:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[38].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:038:OK_RBV
      - bi
      - $(SYMBOL).astFF[38].OK
      - | io: input


    * - $(PREFIX):FF:038:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[38].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:038:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[38].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:038:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[38].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:038:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[38].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:038:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[38].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:038:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[38].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:038:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[38].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:038:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[38].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:038:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[38].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:038:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[38].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:038:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[38].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:038:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[38].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:038:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[38].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:038:Reset
      - bo
      - $(SYMBOL).astFF[38].Reset
      - | io: output


    * - $(PREFIX):FF:038:Reset_RBV
      - bi
      - $(SYMBOL).astFF[38].Reset
      - | io: output


    * - $(PREFIX):FF:039:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[39].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:039:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[39].Info.Desc
      - | io: input


    * - $(PREFIX):FF:039:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[39].Info.DevName
      - | io: input


    * - $(PREFIX):FF:039:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[39].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:039:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[39].Info.InUse
      - | io: input


    * - $(PREFIX):FF:039:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[39].Info.sPath
      - | io: input


    * - $(PREFIX):FF:039:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[39].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:039:OK_RBV
      - bi
      - $(SYMBOL).astFF[39].OK
      - | io: input


    * - $(PREFIX):FF:039:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[39].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:039:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[39].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:039:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[39].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:039:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[39].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:039:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[39].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:039:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[39].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:039:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[39].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:039:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[39].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:039:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[39].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:039:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[39].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:039:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[39].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:039:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[39].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:039:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[39].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:039:Reset
      - bo
      - $(SYMBOL).astFF[39].Reset
      - | io: output


    * - $(PREFIX):FF:039:Reset_RBV
      - bi
      - $(SYMBOL).astFF[39].Reset
      - | io: output


    * - $(PREFIX):FF:040:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[40].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:040:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[40].Info.Desc
      - | io: input


    * - $(PREFIX):FF:040:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[40].Info.DevName
      - | io: input


    * - $(PREFIX):FF:040:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[40].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:040:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[40].Info.InUse
      - | io: input


    * - $(PREFIX):FF:040:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[40].Info.sPath
      - | io: input


    * - $(PREFIX):FF:040:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[40].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:040:OK_RBV
      - bi
      - $(SYMBOL).astFF[40].OK
      - | io: input


    * - $(PREFIX):FF:040:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[40].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:040:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[40].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:040:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[40].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:040:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[40].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:040:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[40].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:040:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[40].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:040:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[40].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:040:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[40].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:040:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[40].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:040:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[40].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:040:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[40].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:040:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[40].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:040:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[40].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:040:Reset
      - bo
      - $(SYMBOL).astFF[40].Reset
      - | io: output


    * - $(PREFIX):FF:040:Reset_RBV
      - bi
      - $(SYMBOL).astFF[40].Reset
      - | io: output


    * - $(PREFIX):FF:041:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[41].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:041:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[41].Info.Desc
      - | io: input


    * - $(PREFIX):FF:041:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[41].Info.DevName
      - | io: input


    * - $(PREFIX):FF:041:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[41].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:041:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[41].Info.InUse
      - | io: input


    * - $(PREFIX):FF:041:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[41].Info.sPath
      - | io: input


    * - $(PREFIX):FF:041:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[41].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:041:OK_RBV
      - bi
      - $(SYMBOL).astFF[41].OK
      - | io: input


    * - $(PREFIX):FF:041:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[41].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:041:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[41].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:041:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[41].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:041:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[41].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:041:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[41].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:041:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[41].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:041:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[41].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:041:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[41].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:041:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[41].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:041:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[41].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:041:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[41].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:041:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[41].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:041:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[41].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:041:Reset
      - bo
      - $(SYMBOL).astFF[41].Reset
      - | io: output


    * - $(PREFIX):FF:041:Reset_RBV
      - bi
      - $(SYMBOL).astFF[41].Reset
      - | io: output


    * - $(PREFIX):FF:042:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[42].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:042:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[42].Info.Desc
      - | io: input


    * - $(PREFIX):FF:042:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[42].Info.DevName
      - | io: input


    * - $(PREFIX):FF:042:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[42].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:042:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[42].Info.InUse
      - | io: input


    * - $(PREFIX):FF:042:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[42].Info.sPath
      - | io: input


    * - $(PREFIX):FF:042:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[42].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:042:OK_RBV
      - bi
      - $(SYMBOL).astFF[42].OK
      - | io: input


    * - $(PREFIX):FF:042:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[42].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:042:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[42].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:042:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[42].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:042:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[42].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:042:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[42].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:042:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[42].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:042:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[42].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:042:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[42].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:042:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[42].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:042:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[42].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:042:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[42].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:042:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[42].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:042:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[42].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:042:Reset
      - bo
      - $(SYMBOL).astFF[42].Reset
      - | io: output


    * - $(PREFIX):FF:042:Reset_RBV
      - bi
      - $(SYMBOL).astFF[42].Reset
      - | io: output


    * - $(PREFIX):FF:043:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[43].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:043:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[43].Info.Desc
      - | io: input


    * - $(PREFIX):FF:043:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[43].Info.DevName
      - | io: input


    * - $(PREFIX):FF:043:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[43].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:043:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[43].Info.InUse
      - | io: input


    * - $(PREFIX):FF:043:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[43].Info.sPath
      - | io: input


    * - $(PREFIX):FF:043:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[43].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:043:OK_RBV
      - bi
      - $(SYMBOL).astFF[43].OK
      - | io: input


    * - $(PREFIX):FF:043:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[43].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:043:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[43].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:043:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[43].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:043:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[43].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:043:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[43].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:043:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[43].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:043:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[43].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:043:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[43].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:043:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[43].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:043:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[43].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:043:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[43].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:043:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[43].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:043:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[43].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:043:Reset
      - bo
      - $(SYMBOL).astFF[43].Reset
      - | io: output


    * - $(PREFIX):FF:043:Reset_RBV
      - bi
      - $(SYMBOL).astFF[43].Reset
      - | io: output


    * - $(PREFIX):FF:044:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[44].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:044:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[44].Info.Desc
      - | io: input


    * - $(PREFIX):FF:044:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[44].Info.DevName
      - | io: input


    * - $(PREFIX):FF:044:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[44].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:044:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[44].Info.InUse
      - | io: input


    * - $(PREFIX):FF:044:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[44].Info.sPath
      - | io: input


    * - $(PREFIX):FF:044:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[44].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:044:OK_RBV
      - bi
      - $(SYMBOL).astFF[44].OK
      - | io: input


    * - $(PREFIX):FF:044:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[44].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:044:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[44].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:044:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[44].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:044:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[44].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:044:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[44].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:044:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[44].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:044:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[44].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:044:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[44].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:044:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[44].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:044:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[44].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:044:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[44].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:044:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[44].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:044:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[44].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:044:Reset
      - bo
      - $(SYMBOL).astFF[44].Reset
      - | io: output


    * - $(PREFIX):FF:044:Reset_RBV
      - bi
      - $(SYMBOL).astFF[44].Reset
      - | io: output


    * - $(PREFIX):FF:045:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[45].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:045:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[45].Info.Desc
      - | io: input


    * - $(PREFIX):FF:045:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[45].Info.DevName
      - | io: input


    * - $(PREFIX):FF:045:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[45].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:045:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[45].Info.InUse
      - | io: input


    * - $(PREFIX):FF:045:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[45].Info.sPath
      - | io: input


    * - $(PREFIX):FF:045:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[45].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:045:OK_RBV
      - bi
      - $(SYMBOL).astFF[45].OK
      - | io: input


    * - $(PREFIX):FF:045:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[45].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:045:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[45].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:045:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[45].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:045:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[45].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:045:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[45].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:045:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[45].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:045:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[45].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:045:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[45].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:045:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[45].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:045:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[45].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:045:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[45].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:045:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[45].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:045:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[45].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:045:Reset
      - bo
      - $(SYMBOL).astFF[45].Reset
      - | io: output


    * - $(PREFIX):FF:045:Reset_RBV
      - bi
      - $(SYMBOL).astFF[45].Reset
      - | io: output


    * - $(PREFIX):FF:046:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[46].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:046:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[46].Info.Desc
      - | io: input


    * - $(PREFIX):FF:046:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[46].Info.DevName
      - | io: input


    * - $(PREFIX):FF:046:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[46].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:046:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[46].Info.InUse
      - | io: input


    * - $(PREFIX):FF:046:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[46].Info.sPath
      - | io: input


    * - $(PREFIX):FF:046:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[46].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:046:OK_RBV
      - bi
      - $(SYMBOL).astFF[46].OK
      - | io: input


    * - $(PREFIX):FF:046:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[46].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:046:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[46].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:046:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[46].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:046:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[46].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:046:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[46].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:046:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[46].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:046:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[46].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:046:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[46].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:046:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[46].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:046:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[46].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:046:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[46].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:046:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[46].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:046:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[46].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:046:Reset
      - bo
      - $(SYMBOL).astFF[46].Reset
      - | io: output


    * - $(PREFIX):FF:046:Reset_RBV
      - bi
      - $(SYMBOL).astFF[46].Reset
      - | io: output


    * - $(PREFIX):FF:047:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[47].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:047:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[47].Info.Desc
      - | io: input


    * - $(PREFIX):FF:047:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[47].Info.DevName
      - | io: input


    * - $(PREFIX):FF:047:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[47].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:047:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[47].Info.InUse
      - | io: input


    * - $(PREFIX):FF:047:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[47].Info.sPath
      - | io: input


    * - $(PREFIX):FF:047:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[47].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:047:OK_RBV
      - bi
      - $(SYMBOL).astFF[47].OK
      - | io: input


    * - $(PREFIX):FF:047:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[47].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:047:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[47].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:047:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[47].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:047:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[47].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:047:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[47].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:047:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[47].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:047:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[47].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:047:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[47].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:047:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[47].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:047:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[47].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:047:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[47].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:047:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[47].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:047:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[47].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:047:Reset
      - bo
      - $(SYMBOL).astFF[47].Reset
      - | io: output


    * - $(PREFIX):FF:047:Reset_RBV
      - bi
      - $(SYMBOL).astFF[47].Reset
      - | io: output


    * - $(PREFIX):FF:048:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[48].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:048:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[48].Info.Desc
      - | io: input


    * - $(PREFIX):FF:048:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[48].Info.DevName
      - | io: input


    * - $(PREFIX):FF:048:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[48].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:048:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[48].Info.InUse
      - | io: input


    * - $(PREFIX):FF:048:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[48].Info.sPath
      - | io: input


    * - $(PREFIX):FF:048:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[48].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:048:OK_RBV
      - bi
      - $(SYMBOL).astFF[48].OK
      - | io: input


    * - $(PREFIX):FF:048:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[48].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:048:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[48].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:048:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[48].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:048:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[48].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:048:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[48].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:048:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[48].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:048:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[48].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:048:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[48].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:048:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[48].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:048:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[48].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:048:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[48].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:048:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[48].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:048:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[48].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:048:Reset
      - bo
      - $(SYMBOL).astFF[48].Reset
      - | io: output


    * - $(PREFIX):FF:048:Reset_RBV
      - bi
      - $(SYMBOL).astFF[48].Reset
      - | io: output


    * - $(PREFIX):FF:049:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[49].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:049:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[49].Info.Desc
      - | io: input


    * - $(PREFIX):FF:049:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[49].Info.DevName
      - | io: input


    * - $(PREFIX):FF:049:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[49].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:049:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[49].Info.InUse
      - | io: input


    * - $(PREFIX):FF:049:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[49].Info.sPath
      - | io: input


    * - $(PREFIX):FF:049:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[49].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:049:OK_RBV
      - bi
      - $(SYMBOL).astFF[49].OK
      - | io: input


    * - $(PREFIX):FF:049:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[49].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:049:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[49].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:049:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[49].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:049:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[49].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:049:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[49].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:049:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[49].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:049:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[49].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:049:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[49].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:049:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[49].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:049:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[49].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:049:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[49].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:049:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[49].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:049:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[49].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:049:Reset
      - bo
      - $(SYMBOL).astFF[49].Reset
      - | io: output


    * - $(PREFIX):FF:049:Reset_RBV
      - bi
      - $(SYMBOL).astFF[49].Reset
      - | io: output


    * - $(PREFIX):FF:050:BeamPermitted_RBV
      - bi
      - $(SYMBOL).astFF[50].BeamPermitted
      - | io: input


    * - $(PREFIX):FF:050:Info:Desc_RBV
      - waveform
      - $(SYMBOL).astFF[50].Info.Desc
      - | io: input


    * - $(PREFIX):FF:050:Info:DevName_RBV
      - waveform
      - $(SYMBOL).astFF[50].Info.DevName
      - | io: input


    * - $(PREFIX):FF:050:Info:InfoString_RBV
      - waveform
      - $(SYMBOL).astFF[50].Info.InfoString
      - | io: input


    * - $(PREFIX):FF:050:Info:InUse_RBV
      - bi
      - $(SYMBOL).astFF[50].Info.InUse
      - | io: input


    * - $(PREFIX):FF:050:Info:Path_RBV
      - waveform
      - $(SYMBOL).astFF[50].Info.sPath
      - | io: input


    * - $(PREFIX):FF:050:Info:TypeCode_RBV
      - longin
      - $(SYMBOL).astFF[50].Info.TypeCode
      - | io: input


    * - $(PREFIX):FF:050:OK_RBV
      - bi
      - $(SYMBOL).astFF[50].OK
      - | io: input


    * - $(PREFIX):FF:050:Ovrd:Activate
      - bo
      - $(SYMBOL).astFF[50].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:050:Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).astFF[50].Ovrd.Activate
      - | io: output


    * - $(PREFIX):FF:050:Ovrd:Active_RBV
      - bi
      - $(SYMBOL).astFF[50].Ovrd.Active
      - | io: input


    * - $(PREFIX):FF:050:Ovrd:Deactivate
      - bo
      - $(SYMBOL).astFF[50].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:050:Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).astFF[50].Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):FF:050:Ovrd:Duration
      - longout
      - $(SYMBOL).astFF[50].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:050:Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).astFF[50].Ovrd.Duration
      - | io: output


    * - $(PREFIX):FF:050:Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).astFF[50].Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):FF:050:Ovrd:Expiration
      - longout
      - $(SYMBOL).astFF[50].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:050:Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).astFF[50].Ovrd.Expiration
      - | io: output


    * - $(PREFIX):FF:050:Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).astFF[50].Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):FF:050:Ovrd:StartDT
      - longout
      - $(SYMBOL).astFF[50].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:050:Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).astFF[50].Ovrd.StartDT
      - | io: output


    * - $(PREFIX):FF:050:Reset
      - bo
      - $(SYMBOL).astFF[50].Reset
      - | io: output


    * - $(PREFIX):FF:050:Reset_RBV
      - bi
      - $(SYMBOL).astFF[50].Reset
      - | io: output


    * - $(PREFIX):OK_RBV
      - bi
      - $(SYMBOL).xOK
      - | io: input


    * - $(PREFIX):RegistrationFailure
      - bo
      - $(SYMBOL).xFastFaultRegFail
      - | io: output


    * - $(PREFIX):RegistrationFailure_RBV
      - bi
      - $(SYMBOL).xFastFaultRegFail
      - | io: output


 
PMPS.FB_SubSysToArbiter_IO
^^^^^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ActiveCohort_RBV
      - longin
      - $(SYMBOL).nActiveCohort
      - | io: input


    * - $(PREFIX):RequestCohort_RBV
      - longin
      - $(SYMBOL).nRequestCohort
      - | io: input


     
PMPS.ST_BeamParams
^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Apt:01:Height_RBV
      - ai
      - $(SYMBOL).astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:01:OK_RBV
      - bi
      - $(SYMBOL).astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Apt:01:Width_RBV
      - ai
      - $(SYMBOL).astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:02:Height_RBV
      - ai
      - $(SYMBOL).astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:02:OK_RBV
      - bi
      - $(SYMBOL).astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Apt:02:Width_RBV
      - ai
      - $(SYMBOL).astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:03:Height_RBV
      - ai
      - $(SYMBOL).astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:03:OK_RBV
      - bi
      - $(SYMBOL).astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Apt:03:Width_RBV
      - ai
      - $(SYMBOL).astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:04:Height_RBV
      - ai
      - $(SYMBOL).astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:04:OK_RBV
      - bi
      - $(SYMBOL).astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Apt:04:Width_RBV
      - ai
      - $(SYMBOL).astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):BeamClass_RBV
      - longin
      - $(SYMBOL).nBeamClass
      - | io: input


    * - $(PREFIX):BeamClassRanges_RBV
      - longin
      - $(SYMBOL).nBCRange
      - | io: input


    * - $(PREFIX):Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):eVRanges_RBV
      - longin
      - $(SYMBOL).neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):MachineMode_RBV
      - longin
      - $(SYMBOL).nMachineMode
      - | io: input


    * - $(PREFIX):PhotonEnergy_RBV
      - ai
      - $(SYMBOL).neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Rate_RBV
      - longin
      - $(SYMBOL).nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Transmission_RBV
      - ai
      - $(SYMBOL).nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Valid_RBV
      - bi
      - $(SYMBOL).xValid
      - | io: input


    * - $(PREFIX):Veto_RBV
      - waveform
      - $(SYMBOL).aVetoDevices
      - | io: input


 
PMPS.ST_BP_ArbInternal
^^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Apt:01:Height_RBV
      - ai
      - $(SYMBOL).astApertures[1].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:01:OK_RBV
      - bi
      - $(SYMBOL).astApertures[1].xOK
      - | io: input


    * - $(PREFIX):Apt:01:Width_RBV
      - ai
      - $(SYMBOL).astApertures[1].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:02:Height_RBV
      - ai
      - $(SYMBOL).astApertures[2].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:02:OK_RBV
      - bi
      - $(SYMBOL).astApertures[2].xOK
      - | io: input


    * - $(PREFIX):Apt:02:Width_RBV
      - ai
      - $(SYMBOL).astApertures[2].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:03:Height_RBV
      - ai
      - $(SYMBOL).astApertures[3].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:03:OK_RBV
      - bi
      - $(SYMBOL).astApertures[3].xOK
      - | io: input


    * - $(PREFIX):Apt:03:Width_RBV
      - ai
      - $(SYMBOL).astApertures[3].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:04:Height_RBV
      - ai
      - $(SYMBOL).astApertures[4].Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):Apt:04:OK_RBV
      - bi
      - $(SYMBOL).astApertures[4].xOK
      - | io: input


    * - $(PREFIX):Apt:04:Width_RBV
      - ai
      - $(SYMBOL).astApertures[4].Width
      - | field: EGU mm
        | io: input


    * - $(PREFIX):BeamClass_RBV
      - longin
      - $(SYMBOL).nBeamClass
      - | io: input


    * - $(PREFIX):BeamClassRanges_RBV
      - longin
      - $(SYMBOL).nBCRange
      - | io: input


    * - $(PREFIX):Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - $(PREFIX):Device_RBV
      - waveform
      - $(SYMBOL).sDevName
      - | io: input


    * - $(PREFIX):eVRanges_RBV
      - longin
      - $(SYMBOL).neVRange
      - | field: EGU eV
        | io: input


    * - $(PREFIX):ID_RBV
      - longin
      - $(SYMBOL).nId
      - | io: input


    * - $(PREFIX):Live_RBV
      - bi
      - $(SYMBOL).LiveInTable
      - | io: input


    * - $(PREFIX):MachineMode_RBV
      - longin
      - $(SYMBOL).nMachineMode
      - | io: input


    * - $(PREFIX):PhotonEnergy_RBV
      - ai
      - $(SYMBOL).neV
      - | field: EGU eV
        | io: input


    * - $(PREFIX):Rate_RBV
      - longin
      - $(SYMBOL).nRate
      - | field: EGU Hz
        | io: input


    * - $(PREFIX):Transmission_RBV
      - ai
      - $(SYMBOL).nTran
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX):Valid_RBV
      - bi
      - $(SYMBOL).xValid
      - | io: input


    * - $(PREFIX):Veto_RBV
      - waveform
      - $(SYMBOL).aVetoDevices
      - | io: input


 
PMPS.ST_FF
^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):BeamPermitted_RBV
      - bi
      - $(SYMBOL).BeamPermitted
      - | io: input


    * - $(PREFIX):Info:Desc_RBV
      - waveform
      - $(SYMBOL).Info.Desc
      - | io: input


    * - $(PREFIX):Info:DevName_RBV
      - waveform
      - $(SYMBOL).Info.DevName
      - | io: input


    * - $(PREFIX):Info:InfoString_RBV
      - waveform
      - $(SYMBOL).Info.InfoString
      - | io: input


    * - $(PREFIX):Info:InUse_RBV
      - bi
      - $(SYMBOL).Info.InUse
      - | io: input


    * - $(PREFIX):Info:Path_RBV
      - waveform
      - $(SYMBOL).Info.sPath
      - | io: input


    * - $(PREFIX):Info:TypeCode_RBV
      - longin
      - $(SYMBOL).Info.TypeCode
      - | io: input


    * - $(PREFIX):OK_RBV
      - bi
      - $(SYMBOL).OK
      - | io: input


    * - $(PREFIX):Ovrd:Activate
      - bo
      - $(SYMBOL).Ovrd.Activate
      - | io: output


    * - $(PREFIX):Ovrd:Activate_RBV
      - bi
      - $(SYMBOL).Ovrd.Activate
      - | io: output


    * - $(PREFIX):Ovrd:Active_RBV
      - bi
      - $(SYMBOL).Ovrd.Active
      - | io: input


    * - $(PREFIX):Ovrd:Deactivate
      - bo
      - $(SYMBOL).Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):Ovrd:Deactivate_RBV
      - bi
      - $(SYMBOL).Ovrd.Deactivate
      - | io: output


    * - $(PREFIX):Ovrd:Duration
      - longout
      - $(SYMBOL).Ovrd.Duration
      - | io: output


    * - $(PREFIX):Ovrd:Duration_RBV
      - longin
      - $(SYMBOL).Ovrd.Duration
      - | io: output


    * - $(PREFIX):Ovrd:ElapsedTime_RBV
      - longin
      - $(SYMBOL).Ovrd.ElapsedTime
      - | io: input


    * - $(PREFIX):Ovrd:Expiration
      - longout
      - $(SYMBOL).Ovrd.Expiration
      - | io: output


    * - $(PREFIX):Ovrd:Expiration_RBV
      - longin
      - $(SYMBOL).Ovrd.Expiration
      - | io: output


    * - $(PREFIX):Ovrd:RemainingTime_RBV
      - longin
      - $(SYMBOL).Ovrd.RemainingTime
      - | io: input


    * - $(PREFIX):Ovrd:StartDT
      - longout
      - $(SYMBOL).Ovrd.StartDT
      - | io: output


    * - $(PREFIX):Ovrd:StartDT_RBV
      - longin
      - $(SYMBOL).Ovrd.StartDT
      - | io: output


    * - $(PREFIX):Reset
      - bo
      - $(SYMBOL).Reset
      - | io: output


    * - $(PREFIX):Reset_RBV
      - bi
      - $(SYMBOL).Reset
      - | io: output


 
PMPS.ST_FFInfo
^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Desc_RBV
      - waveform
      - $(SYMBOL).Desc
      - | io: input


    * - $(PREFIX):DevName_RBV
      - waveform
      - $(SYMBOL).DevName
      - | io: input


    * - $(PREFIX):InfoString_RBV
      - waveform
      - $(SYMBOL).InfoString
      - | io: input


    * - $(PREFIX):InUse_RBV
      - bi
      - $(SYMBOL).InUse
      - | io: input


    * - $(PREFIX):Path_RBV
      - waveform
      - $(SYMBOL).sPath
      - | io: input


    * - $(PREFIX):TypeCode_RBV
      - longin
      - $(SYMBOL).TypeCode
      - | io: input


 
PMPS.ST_FFOverride
^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Activate
      - bo
      - $(SYMBOL).Activate
      - | io: output


    * - $(PREFIX):Activate_RBV
      - bi
      - $(SYMBOL).Activate
      - | io: output


    * - $(PREFIX):Active_RBV
      - bi
      - $(SYMBOL).Active
      - | io: input


    * - $(PREFIX):Deactivate
      - bo
      - $(SYMBOL).Deactivate
      - | io: output


    * - $(PREFIX):Deactivate_RBV
      - bi
      - $(SYMBOL).Deactivate
      - | io: output


    * - $(PREFIX):Duration
      - longout
      - $(SYMBOL).Duration
      - | io: output


    * - $(PREFIX):Duration_RBV
      - longin
      - $(SYMBOL).Duration
      - | io: output


    * - $(PREFIX):ElapsedTime_RBV
      - longin
      - $(SYMBOL).ElapsedTime
      - | io: input


    * - $(PREFIX):Expiration
      - longout
      - $(SYMBOL).Expiration
      - | io: output


    * - $(PREFIX):Expiration_RBV
      - longin
      - $(SYMBOL).Expiration
      - | io: output


    * - $(PREFIX):RemainingTime_RBV
      - longin
      - $(SYMBOL).RemainingTime
      - | io: input


    * - $(PREFIX):StartDT
      - longout
      - $(SYMBOL).StartDT
      - | io: output


    * - $(PREFIX):StartDT_RBV
      - longin
      - $(SYMBOL).StartDT
      - | io: output


 
PMPS.ST_PMPS_Aperture
^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Height_RBV
      - ai
      - $(SYMBOL).Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):OK_RBV
      - bi
      - $(SYMBOL).xOK
      - | io: input


    * - $(PREFIX):Width_RBV
      - ai
      - $(SYMBOL).Width
      - | field: EGU mm
        | io: input


  
PMPS.T_HashTableEntry
^^^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Key_RBV
      - longin
      - $(SYMBOL).key
      - | io: input


 
ST_BeamParams_IO
^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Attenuation_RBV
      - ai
      - $(SYMBOL).nTran
      - | io: input


    * - $(PREFIX):Attenuation_RBV
      - longin
      - $(SYMBOL).nCohortInt
      - | io: input


    * - $(PREFIX):AuxAttenuator_RBV
      - waveform
      - $(SYMBOL).aVetoDevices
      - | io: input


    * - $(PREFIX):PhotonEnergy_RBV
      - longin
      - $(SYMBOL).neVRange
      - | io: input


    * - $(PREFIX):Rate_RBV
      - longin
      - $(SYMBOL).nRate
      - | io: input


    * - $(PREFIX):Valid_RBV
      - bi
      - $(SYMBOL).xValid
      - | io: input


  
ST_LoggingEventInfo
^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):EventClass_RBV
      - waveform
      - TwinCAT Event class
      - | io: input


    * - $(PREFIX):EventType_RBV
      - mbbi
      - The event type
      - | io: input


    * - $(PREFIX):Hostname_RBV
      - waveform
      - PLC Hostname
      - | io: input


    * - $(PREFIX):Message_RBV
      - waveform
      - $(SYMBOL).msg
      - | io: input


    * - $(PREFIX):MessageID_RBV
      - longin
      - TwinCAT Message ID
      - | io: input


    * - $(PREFIX):MessageJSON_RBV
      - waveform
      - Metadata with the message
      - | io: input


    * - $(PREFIX):Schema_RBV
      - waveform
      - Schema string
      - | io: input


    * - $(PREFIX):Severity_RBV
      - mbbi
      - TcEventSeverity
      - | field: ONST Info
        | field: THST Error
        | field: TWST Warning
        | field: ZRST Verbose
        | io: input


    * - $(PREFIX):Source_RBV
      - waveform
      - $(SYMBOL).source
      - | io: input


    * - $(PREFIX):Timestamp_RBV
      - ai
      - Unix timestamp
      - | io: input


 
ST_MPA
^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):ERROR
      - bo
      - $(SYMBOL).bErrorPresent
      - | io: output


    * - $(PREFIX):ERROR_RBV
      - bi
      - $(SYMBOL).bErrorPresent
      - | io: output


    * - $(PREFIX):ILKOK_RBV
      - bi
      - $(SYMBOL).bILK_OK
      - | io: input


    * - $(PREFIX):IN_CMD
      - bo
      - $(SYMBOL).bInsert_SW
      - | io: output


    * - $(PREFIX):IN_CMD_RBV
      - bi
      - $(SYMBOL).bInsert_SW
      - | io: output


    * - $(PREFIX):IN_RBV
      - bi
      - $(SYMBOL).i_bInLS
      - | io: input


    * - $(PREFIX):INSERT_DO_RBV
      - bi
      - $(SYMBOL).q_bRetract
      - | io: input


    * - $(PREFIX):INSERT_OK_RBV
      - bi
      - $(SYMBOL).bInsertOK
      - | io: input


    * - $(PREFIX):OUT_CMD
      - bo
      - $(SYMBOL).bRetract_SW
      - | io: output


    * - $(PREFIX):OUT_CMD_RBV
      - bi
      - $(SYMBOL).bRetract_SW
      - | io: output


    * - $(PREFIX):OUT_RBV
      - bi
      - $(SYMBOL).i_bOutLS
      - | io: input


    * - $(PREFIX):POS_STATE_RBV
      - mbbi
      - $(SYMBOL).eState
      - | field: ONST INSERTED
        | field: THST INVALID
        | field: TWST MOVING
        | field: ZRST RETRACTED
        | io: input
        | type: mbbi


    * - $(PREFIX):RETRACT_DO_RBV
      - bi
      - $(SYMBOL).q_bInsert
      - | io: input


    * - $(PREFIX):RETRACT_OK_RBV
      - bi
      - $(SYMBOL).bRetractOK
      - | io: input


 
ST_PMPS_Aperture_IO
^^^^^^^^^^^^^^^^^^^

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - $(PREFIX):Height_RBV
      - ai
      - $(SYMBOL).Height
      - | field: EGU mm
        | io: input


    * - $(PREFIX):OK_RBV
      - bi
      - $(SYMBOL).xOK
      - | io: input


    * - $(PREFIX):Width_RBV
      - ai
      - $(SYMBOL).Width
      - | field: EGU mm
        | io: input


                                                                                      
Database Records
----------------

.. list-table::
    :header-rows: 1
    :align: center

    * - Record
      - Type
      - Description
      - Pragma
    * - PLC:LFE:MOTION:ARB:AP:Entry:010:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:010:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:011:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:012:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:013:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:014:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:015:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:016:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:017:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:018:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:019:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:001:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:020:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:002:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:003:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:004:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:005:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:006:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:007:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:008:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:Live_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:Veto_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:Apt:01:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:Apt:01:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:Apt:01:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:Apt:02:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:Apt:02:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:Apt:02:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:Apt:03:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:Apt:03:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:Apt:03:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:Apt:04:Height_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:Apt:04:Width_RBV
      - ai
      - Assertion Pool
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:Apt:04:OK_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:BeamClassRanges_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:BeamClass_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:ID_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:MachineMode_RBV
      - longin
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:Rate_RBV
      - longin
      - Assertion Pool
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:Transmission_RBV
      - ai
      - Assertion Pool
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:PhotonEnergy_RBV
      - ai
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:eVRanges_RBV
      - longin
      - Assertion Pool
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:Device_RBV
      - waveform
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:AP:Entry:009:Valid_RBV
      - bi
      - Assertion Pool
      - | io: input


    * - PLC:LFE:MOTION:ARB:CohortCounter_RBV
      - longin
      - Intrnl cohort counter
      - | io: input


    * - PLC:LFE:MOTION:ARB:ArbiterID_RBV
      - longin
      - Arbiter ID for elev. req.
      - | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:Veto_RBV
      - waveform
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:Apt:01:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:Apt:01:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:Apt:01:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:Apt:02:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:Apt:02:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:Apt:02:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:Apt:03:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:Apt:03:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:Apt:03:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:Apt:04:Height_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:Apt:04:Width_RBV
      - ai
      - Arbitrated BP
      - | field: EGU mm
        | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:Apt:04:OK_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:BeamClassRanges_RBV
      - longin
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:BeamClass_RBV
      - longin
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:MachineMode_RBV
      - longin
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:Rate_RBV
      - longin
      - Arbitrated BP
      - | field: EGU Hz
        | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:Transmission_RBV
      - ai
      - Arbitrated BP
      - | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:PhotonEnergy_RBV
      - ai
      - Arbitrated BP
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:eVRanges_RBV
      - longin
      - Arbitrated BP
      - | field: EGU eV
        | io: input


    * - PLC:LFE:MOTION:ARB:ArbitratedBP:Valid_RBV
      - bi
      - Arbitrated BP
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:010:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[10].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:010:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[10].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:010:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[10].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:010:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[10].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:010:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[10].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:010:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[10].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:010:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[10].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:010:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[10].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:010:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:010:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:010:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:010:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:010:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:010:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:010:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:010:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:010:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:010:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:010:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:010:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:010:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[10].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:010:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[10].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:010:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[10].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:011:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[11].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:011:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[11].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:011:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[11].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:011:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[11].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:011:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[11].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:011:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[11].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:011:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[11].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:011:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[11].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:011:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:011:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:011:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:011:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:011:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:011:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:011:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:011:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:011:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:011:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:011:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:011:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:011:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[11].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:011:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[11].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:011:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[11].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:012:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[12].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:012:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[12].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:012:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[12].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:012:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[12].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:012:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[12].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:012:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[12].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:012:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[12].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:012:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[12].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:012:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:012:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:012:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:012:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:012:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:012:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:012:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:012:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:012:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:012:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:012:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:012:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:012:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[12].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:012:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[12].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:012:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[12].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:013:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[13].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:013:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[13].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:013:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[13].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:013:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[13].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:013:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[13].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:013:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[13].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:013:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[13].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:013:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[13].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:013:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:013:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:013:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:013:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:013:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:013:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:013:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:013:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:013:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:013:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:013:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:013:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:013:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[13].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:013:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[13].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:013:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[13].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:014:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[14].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:014:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[14].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:014:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[14].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:014:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[14].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:014:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[14].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:014:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[14].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:014:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[14].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:014:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[14].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:014:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:014:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:014:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:014:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:014:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:014:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:014:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:014:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:014:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:014:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:014:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:014:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:014:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[14].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:014:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[14].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:014:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[14].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:015:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[15].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:015:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[15].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:015:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[15].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:015:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[15].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:015:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[15].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:015:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[15].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:015:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[15].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:015:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[15].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:015:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:015:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:015:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:015:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:015:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:015:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:015:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:015:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:015:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:015:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:015:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:015:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:015:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[15].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:015:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[15].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:015:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[15].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:016:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[16].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:016:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[16].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:016:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[16].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:016:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[16].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:016:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[16].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:016:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[16].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:016:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[16].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:016:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[16].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:016:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:016:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:016:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:016:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:016:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:016:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:016:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:016:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:016:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:016:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:016:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:016:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:016:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[16].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:016:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[16].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:016:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[16].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:017:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[17].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:017:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[17].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:017:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[17].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:017:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[17].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:017:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[17].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:017:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[17].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:017:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[17].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:017:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[17].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:017:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:017:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:017:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:017:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:017:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:017:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:017:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:017:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:017:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:017:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:017:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:017:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:017:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[17].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:017:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[17].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:017:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[17].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:018:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[18].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:018:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[18].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:018:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[18].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:018:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[18].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:018:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[18].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:018:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[18].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:018:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[18].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:018:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[18].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:018:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:018:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:018:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:018:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:018:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:018:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:018:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:018:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:018:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:018:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:018:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:018:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:018:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[18].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:018:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[18].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:018:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[18].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:019:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[19].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:019:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[19].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:019:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[19].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:019:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[19].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:019:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[19].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:019:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[19].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:019:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[19].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:019:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[19].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:019:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:019:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:019:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:019:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:019:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:019:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:019:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:019:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:019:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:019:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:019:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:019:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:019:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[19].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:019:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[19].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:019:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[19].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:001:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[1].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:001:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[1].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:001:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[1].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:001:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[1].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:001:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[1].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:001:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[1].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:001:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[1].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:001:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[1].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:001:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:001:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:001:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:001:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:001:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:001:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:001:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:001:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:001:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:001:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:001:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:001:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:001:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[1].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:001:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[1].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:001:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[1].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:020:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[20].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:020:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[20].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:020:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[20].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:020:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[20].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:020:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[20].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:020:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[20].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:020:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[20].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:020:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[20].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:020:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:020:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:020:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:020:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:020:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:020:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:020:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:020:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:020:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:020:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:020:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:020:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:020:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[20].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:020:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[20].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:020:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[20].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:021:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[21].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:021:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[21].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:021:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[21].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:021:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[21].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:021:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[21].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:021:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[21].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:021:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[21].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:021:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[21].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:021:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:021:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:021:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:021:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:021:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:021:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:021:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:021:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:021:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:021:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:021:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:021:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:021:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[21].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:021:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[21].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:021:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[21].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:022:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[22].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:022:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[22].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:022:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[22].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:022:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[22].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:022:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[22].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:022:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[22].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:022:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[22].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:022:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[22].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:022:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:022:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:022:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:022:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:022:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:022:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:022:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:022:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:022:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:022:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:022:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:022:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:022:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[22].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:022:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[22].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:022:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[22].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:023:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[23].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:023:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[23].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:023:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[23].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:023:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[23].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:023:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[23].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:023:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[23].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:023:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[23].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:023:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[23].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:023:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:023:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:023:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:023:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:023:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:023:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:023:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:023:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:023:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:023:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:023:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:023:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:023:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[23].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:023:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[23].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:023:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[23].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:024:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[24].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:024:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[24].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:024:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[24].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:024:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[24].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:024:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[24].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:024:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[24].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:024:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[24].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:024:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[24].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:024:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:024:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:024:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:024:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:024:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:024:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:024:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:024:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:024:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:024:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:024:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:024:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:024:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[24].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:024:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[24].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:024:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[24].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:025:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[25].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:025:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[25].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:025:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[25].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:025:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[25].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:025:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[25].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:025:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[25].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:025:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[25].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:025:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[25].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:025:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:025:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:025:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:025:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:025:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:025:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:025:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:025:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:025:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:025:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:025:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:025:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:025:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[25].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:025:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[25].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:025:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[25].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:026:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[26].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:026:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[26].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:026:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[26].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:026:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[26].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:026:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[26].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:026:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[26].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:026:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[26].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:026:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[26].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:026:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:026:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:026:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:026:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:026:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:026:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:026:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:026:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:026:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:026:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:026:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:026:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:026:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[26].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:026:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[26].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:026:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[26].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:027:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[27].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:027:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[27].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:027:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[27].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:027:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[27].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:027:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[27].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:027:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[27].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:027:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[27].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:027:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[27].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:027:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:027:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:027:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:027:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:027:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:027:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:027:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:027:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:027:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:027:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:027:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:027:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:027:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[27].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:027:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[27].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:027:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[27].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:028:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[28].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:028:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[28].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:028:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[28].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:028:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[28].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:028:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[28].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:028:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[28].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:028:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[28].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:028:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[28].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:028:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:028:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:028:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:028:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:028:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:028:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:028:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:028:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:028:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:028:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:028:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:028:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:028:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[28].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:028:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[28].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:028:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[28].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:029:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[29].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:029:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[29].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:029:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[29].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:029:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[29].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:029:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[29].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:029:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[29].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:029:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[29].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:029:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[29].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:029:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:029:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:029:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:029:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:029:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:029:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:029:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:029:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:029:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:029:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:029:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:029:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:029:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[29].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:029:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[29].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:029:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[29].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:002:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[2].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:002:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[2].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:002:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[2].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:002:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[2].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:002:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[2].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:002:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[2].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:002:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[2].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:002:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[2].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:002:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:002:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:002:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:002:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:002:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:002:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:002:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:002:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:002:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:002:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:002:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:002:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:002:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[2].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:002:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[2].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:002:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[2].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:030:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[30].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:030:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[30].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:030:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[30].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:030:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[30].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:030:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[30].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:030:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[30].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:030:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[30].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:030:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[30].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:030:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:030:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:030:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:030:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:030:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:030:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:030:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:030:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:030:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:030:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:030:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:030:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:030:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[30].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:030:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[30].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:030:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[30].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:031:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[31].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:031:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[31].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:031:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[31].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:031:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[31].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:031:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[31].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:031:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[31].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:031:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[31].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:031:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[31].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:031:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:031:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:031:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:031:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:031:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:031:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:031:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:031:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:031:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:031:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:031:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:031:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:031:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[31].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:031:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[31].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:031:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[31].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:032:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[32].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:032:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[32].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:032:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[32].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:032:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[32].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:032:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[32].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:032:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[32].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:032:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[32].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:032:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[32].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:032:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:032:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:032:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:032:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:032:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:032:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:032:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:032:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:032:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:032:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:032:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:032:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:032:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[32].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:032:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[32].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:032:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[32].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:033:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[33].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:033:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[33].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:033:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[33].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:033:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[33].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:033:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[33].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:033:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[33].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:033:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[33].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:033:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[33].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:033:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:033:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:033:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:033:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:033:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:033:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:033:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:033:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:033:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:033:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:033:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:033:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:033:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[33].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:033:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[33].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:033:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[33].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:034:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[34].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:034:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[34].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:034:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[34].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:034:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[34].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:034:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[34].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:034:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[34].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:034:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[34].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:034:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[34].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:034:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:034:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:034:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:034:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:034:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:034:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:034:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:034:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:034:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:034:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:034:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:034:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:034:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[34].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:034:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[34].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:034:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[34].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:035:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[35].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:035:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[35].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:035:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[35].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:035:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[35].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:035:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[35].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:035:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[35].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:035:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[35].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:035:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[35].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:035:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:035:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:035:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:035:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:035:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:035:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:035:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:035:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:035:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:035:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:035:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:035:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:035:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[35].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:035:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[35].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:035:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[35].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:036:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[36].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:036:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[36].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:036:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[36].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:036:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[36].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:036:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[36].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:036:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[36].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:036:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[36].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:036:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[36].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:036:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:036:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:036:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:036:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:036:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:036:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:036:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:036:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:036:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:036:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:036:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:036:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:036:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[36].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:036:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[36].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:036:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[36].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:037:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[37].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:037:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[37].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:037:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[37].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:037:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[37].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:037:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[37].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:037:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[37].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:037:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[37].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:037:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[37].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:037:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:037:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:037:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:037:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:037:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:037:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:037:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:037:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:037:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:037:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:037:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:037:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:037:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[37].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:037:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[37].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:037:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[37].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:038:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[38].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:038:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[38].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:038:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[38].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:038:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[38].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:038:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[38].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:038:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[38].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:038:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[38].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:038:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[38].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:038:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:038:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:038:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:038:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:038:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:038:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:038:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:038:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:038:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:038:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:038:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:038:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:038:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[38].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:038:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[38].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:038:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[38].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:039:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[39].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:039:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[39].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:039:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[39].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:039:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[39].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:039:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[39].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:039:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[39].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:039:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[39].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:039:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[39].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:039:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:039:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:039:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:039:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:039:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:039:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:039:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:039:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:039:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:039:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:039:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:039:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:039:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[39].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:039:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[39].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:039:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[39].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:003:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[3].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:003:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[3].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:003:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[3].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:003:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[3].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:003:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[3].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:003:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[3].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:003:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[3].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:003:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[3].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:003:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:003:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:003:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:003:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:003:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:003:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:003:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:003:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:003:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:003:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:003:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:003:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:003:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[3].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:003:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[3].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:003:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[3].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:040:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[40].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:040:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[40].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:040:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[40].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:040:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[40].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:040:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[40].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:040:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[40].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:040:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[40].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:040:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[40].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:040:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:040:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:040:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:040:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:040:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:040:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:040:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:040:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:040:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:040:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:040:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:040:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:040:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[40].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:040:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[40].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:040:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[40].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:041:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[41].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:041:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[41].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:041:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[41].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:041:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[41].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:041:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[41].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:041:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[41].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:041:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[41].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:041:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[41].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:041:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:041:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:041:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:041:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:041:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:041:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:041:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:041:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:041:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:041:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:041:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:041:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:041:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[41].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:041:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[41].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:041:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[41].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:042:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[42].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:042:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[42].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:042:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[42].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:042:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[42].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:042:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[42].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:042:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[42].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:042:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[42].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:042:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[42].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:042:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:042:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:042:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:042:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:042:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:042:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:042:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:042:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:042:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:042:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:042:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:042:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:042:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[42].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:042:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[42].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:042:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[42].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:043:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[43].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:043:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[43].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:043:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[43].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:043:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[43].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:043:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[43].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:043:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[43].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:043:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[43].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:043:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[43].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:043:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:043:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:043:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:043:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:043:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:043:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:043:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:043:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:043:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:043:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:043:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:043:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:043:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[43].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:043:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[43].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:043:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[43].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:044:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[44].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:044:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[44].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:044:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[44].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:044:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[44].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:044:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[44].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:044:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[44].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:044:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[44].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:044:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[44].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:044:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:044:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:044:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:044:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:044:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:044:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:044:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:044:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:044:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:044:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:044:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:044:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:044:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[44].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:044:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[44].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:044:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[44].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:045:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[45].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:045:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[45].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:045:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[45].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:045:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[45].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:045:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[45].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:045:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[45].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:045:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[45].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:045:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[45].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:045:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:045:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:045:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:045:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:045:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:045:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:045:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:045:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:045:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:045:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:045:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:045:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:045:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[45].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:045:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[45].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:045:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[45].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:046:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[46].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:046:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[46].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:046:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[46].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:046:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[46].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:046:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[46].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:046:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[46].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:046:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[46].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:046:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[46].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:046:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:046:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:046:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:046:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:046:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:046:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:046:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:046:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:046:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:046:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:046:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:046:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:046:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[46].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:046:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[46].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:046:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[46].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:047:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[47].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:047:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[47].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:047:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[47].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:047:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[47].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:047:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[47].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:047:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[47].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:047:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[47].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:047:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[47].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:047:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:047:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:047:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:047:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:047:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:047:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:047:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:047:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:047:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:047:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:047:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:047:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:047:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[47].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:047:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[47].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:047:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[47].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:048:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[48].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:048:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[48].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:048:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[48].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:048:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[48].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:048:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[48].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:048:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[48].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:048:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[48].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:048:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[48].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:048:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:048:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:048:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:048:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:048:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:048:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:048:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:048:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:048:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:048:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:048:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:048:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:048:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[48].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:048:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[48].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:048:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[48].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:049:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[49].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:049:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[49].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:049:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[49].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:049:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[49].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:049:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[49].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:049:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[49].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:049:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[49].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:049:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[49].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:049:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:049:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:049:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:049:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:049:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:049:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:049:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:049:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:049:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:049:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:049:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:049:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:049:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[49].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:049:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[49].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:049:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[49].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:004:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[4].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:004:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[4].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:004:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[4].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:004:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[4].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:004:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[4].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:004:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[4].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:004:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[4].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:004:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[4].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:004:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:004:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:004:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:004:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:004:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:004:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:004:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:004:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:004:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:004:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:004:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:004:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:004:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[4].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:004:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[4].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:004:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[4].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:050:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[50].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:050:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[50].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:050:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[50].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:050:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[50].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:050:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[50].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:050:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[50].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:050:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[50].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:050:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[50].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:050:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:050:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:050:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:050:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:050:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:050:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:050:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:050:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:050:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:050:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:050:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:050:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:050:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[50].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:050:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[50].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:050:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[50].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:005:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[5].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:005:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[5].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:005:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[5].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:005:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[5].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:005:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[5].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:005:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[5].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:005:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[5].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:005:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[5].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:005:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:005:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:005:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:005:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:005:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:005:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:005:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:005:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:005:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:005:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:005:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:005:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:005:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[5].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:005:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[5].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:005:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[5].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:006:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[6].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:006:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[6].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:006:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[6].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:006:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[6].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:006:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[6].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:006:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[6].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:006:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[6].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:006:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[6].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:006:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:006:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:006:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:006:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:006:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:006:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:006:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:006:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:006:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:006:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:006:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:006:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:006:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[6].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:006:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[6].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:006:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[6].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:007:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[7].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:007:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[7].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:007:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[7].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:007:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[7].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:007:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[7].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:007:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[7].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:007:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[7].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:007:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[7].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:007:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:007:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:007:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:007:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:007:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:007:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:007:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:007:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:007:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:007:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:007:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:007:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:007:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[7].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:007:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[7].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:007:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[7].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:008:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[8].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:008:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[8].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:008:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[8].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:008:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[8].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:008:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[8].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:008:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[8].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:008:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[8].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:008:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[8].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:008:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:008:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:008:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:008:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:008:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:008:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:008:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:008:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:008:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:008:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:008:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:008:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:008:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[8].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:008:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[8].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:008:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[8].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:009:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[9].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:009:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[9].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:009:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[9].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:009:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[9].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:009:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[9].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:009:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[9].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:009:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput1.astFF[9].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:009:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[9].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:009:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:009:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:009:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:009:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:009:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:009:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:009:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:009:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:009:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:009:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:009:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:FF:009:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:009:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput1.astFF[9].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:009:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput1.astFF[9].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FF:009:Reset
      - bo
      - GVL.fbFastFaultOutput1.astFF[9].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:ClearFault_RBV
      - bi
      - Might be overidden by PLC writes
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:ClearFault
      - bo
      - Might be overidden by PLC writes
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:EnableVeto_RBV
      - bi
      - GVL.fbFastFaultOutput1.i_xVeto
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:EnableVeto
      - bo
      - GVL.fbFastFaultOutput1.i_xVeto
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:FaultHWO_RBV
      - bi
      - Hardware Output Status
      - | io: input


    * - PLC:LFE:MOTION:FFO:01:RegistrationFailure_RBV
      - bi
      - GVL.fbFastFaultOutput1.xFastFaultRegFail
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:RegistrationFailure
      - bo
      - GVL.fbFastFaultOutput1.xFastFaultRegFail
      - | io: output


    * - PLC:LFE:MOTION:FFO:01:OK_RBV
      - bi
      - GVL.fbFastFaultOutput1.xOK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:010:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[10].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:010:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[10].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:010:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[10].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:010:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[10].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:010:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[10].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:010:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[10].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:010:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[10].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:010:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[10].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:010:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:010:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:010:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:010:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:010:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:010:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:010:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:010:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:010:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:010:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:010:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:010:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:010:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[10].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:010:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[10].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:010:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[10].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:011:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[11].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:011:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[11].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:011:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[11].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:011:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[11].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:011:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[11].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:011:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[11].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:011:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[11].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:011:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[11].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:011:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:011:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:011:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:011:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:011:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:011:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:011:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:011:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:011:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:011:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:011:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:011:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:011:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[11].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:011:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[11].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:011:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[11].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:012:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[12].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:012:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[12].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:012:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[12].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:012:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[12].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:012:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[12].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:012:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[12].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:012:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[12].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:012:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[12].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:012:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:012:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:012:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:012:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:012:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:012:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:012:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:012:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:012:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:012:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:012:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:012:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:012:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[12].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:012:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[12].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:012:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[12].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:013:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[13].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:013:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[13].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:013:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[13].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:013:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[13].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:013:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[13].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:013:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[13].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:013:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[13].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:013:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[13].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:013:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:013:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:013:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:013:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:013:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:013:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:013:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:013:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:013:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:013:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:013:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:013:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:013:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[13].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:013:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[13].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:013:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[13].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:014:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[14].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:014:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[14].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:014:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[14].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:014:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[14].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:014:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[14].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:014:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[14].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:014:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[14].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:014:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[14].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:014:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:014:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:014:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:014:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:014:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:014:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:014:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:014:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:014:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:014:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:014:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:014:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:014:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[14].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:014:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[14].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:014:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[14].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:015:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[15].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:015:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[15].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:015:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[15].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:015:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[15].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:015:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[15].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:015:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[15].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:015:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[15].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:015:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[15].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:015:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:015:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:015:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:015:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:015:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:015:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:015:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:015:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:015:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:015:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:015:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:015:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:015:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[15].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:015:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[15].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:015:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[15].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:016:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[16].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:016:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[16].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:016:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[16].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:016:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[16].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:016:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[16].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:016:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[16].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:016:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[16].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:016:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[16].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:016:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:016:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:016:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:016:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:016:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:016:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:016:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:016:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:016:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:016:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:016:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:016:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:016:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[16].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:016:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[16].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:016:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[16].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:017:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[17].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:017:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[17].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:017:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[17].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:017:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[17].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:017:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[17].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:017:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[17].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:017:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[17].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:017:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[17].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:017:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:017:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:017:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:017:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:017:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:017:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:017:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:017:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:017:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:017:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:017:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:017:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:017:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[17].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:017:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[17].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:017:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[17].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:018:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[18].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:018:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[18].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:018:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[18].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:018:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[18].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:018:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[18].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:018:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[18].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:018:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[18].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:018:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[18].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:018:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:018:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:018:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:018:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:018:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:018:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:018:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:018:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:018:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:018:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:018:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:018:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:018:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[18].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:018:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[18].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:018:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[18].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:019:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[19].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:019:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[19].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:019:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[19].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:019:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[19].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:019:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[19].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:019:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[19].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:019:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[19].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:019:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[19].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:019:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:019:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:019:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:019:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:019:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:019:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:019:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:019:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:019:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:019:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:019:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:019:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:019:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[19].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:019:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[19].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:019:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[19].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:001:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[1].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:001:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[1].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:001:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[1].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:001:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[1].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:001:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[1].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:001:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[1].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:001:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[1].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:001:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[1].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:001:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:001:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:001:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:001:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:001:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:001:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:001:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:001:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:001:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:001:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:001:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:001:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:001:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[1].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:001:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[1].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:001:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[1].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:020:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[20].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:020:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[20].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:020:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[20].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:020:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[20].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:020:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[20].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:020:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[20].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:020:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[20].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:020:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[20].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:020:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:020:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:020:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:020:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:020:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:020:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:020:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:020:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:020:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:020:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:020:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:020:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:020:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[20].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:020:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[20].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:020:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[20].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:021:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[21].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:021:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[21].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:021:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[21].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:021:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[21].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:021:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[21].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:021:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[21].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:021:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[21].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:021:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[21].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:021:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:021:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:021:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:021:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:021:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:021:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:021:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:021:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:021:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:021:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:021:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:021:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:021:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[21].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:021:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[21].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:021:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[21].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:022:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[22].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:022:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[22].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:022:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[22].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:022:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[22].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:022:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[22].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:022:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[22].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:022:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[22].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:022:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[22].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:022:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:022:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:022:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:022:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:022:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:022:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:022:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:022:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:022:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:022:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:022:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:022:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:022:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[22].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:022:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[22].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:022:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[22].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:023:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[23].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:023:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[23].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:023:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[23].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:023:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[23].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:023:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[23].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:023:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[23].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:023:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[23].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:023:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[23].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:023:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:023:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:023:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:023:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:023:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:023:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:023:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:023:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:023:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:023:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:023:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:023:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:023:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[23].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:023:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[23].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:023:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[23].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:024:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[24].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:024:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[24].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:024:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[24].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:024:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[24].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:024:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[24].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:024:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[24].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:024:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[24].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:024:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[24].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:024:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:024:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:024:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:024:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:024:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:024:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:024:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:024:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:024:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:024:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:024:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:024:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:024:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[24].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:024:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[24].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:024:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[24].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:025:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[25].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:025:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[25].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:025:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[25].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:025:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[25].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:025:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[25].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:025:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[25].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:025:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[25].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:025:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[25].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:025:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:025:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:025:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:025:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:025:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:025:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:025:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:025:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:025:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:025:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:025:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:025:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:025:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[25].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:025:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[25].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:025:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[25].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:026:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[26].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:026:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[26].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:026:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[26].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:026:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[26].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:026:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[26].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:026:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[26].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:026:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[26].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:026:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[26].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:026:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:026:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:026:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:026:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:026:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:026:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:026:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:026:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:026:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:026:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:026:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:026:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:026:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[26].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:026:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[26].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:026:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[26].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:027:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[27].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:027:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[27].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:027:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[27].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:027:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[27].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:027:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[27].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:027:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[27].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:027:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[27].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:027:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[27].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:027:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:027:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:027:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:027:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:027:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:027:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:027:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:027:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:027:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:027:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:027:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:027:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:027:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[27].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:027:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[27].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:027:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[27].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:028:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[28].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:028:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[28].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:028:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[28].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:028:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[28].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:028:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[28].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:028:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[28].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:028:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[28].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:028:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[28].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:028:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:028:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:028:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:028:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:028:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:028:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:028:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:028:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:028:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:028:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:028:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:028:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:028:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[28].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:028:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[28].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:028:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[28].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:029:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[29].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:029:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[29].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:029:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[29].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:029:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[29].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:029:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[29].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:029:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[29].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:029:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[29].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:029:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[29].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:029:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:029:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:029:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:029:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:029:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:029:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:029:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:029:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:029:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:029:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:029:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:029:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:029:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[29].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:029:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[29].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:029:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[29].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:002:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[2].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:002:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[2].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:002:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[2].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:002:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[2].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:002:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[2].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:002:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[2].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:002:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[2].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:002:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[2].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:002:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:002:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:002:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:002:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:002:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:002:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:002:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:002:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:002:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:002:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:002:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:002:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:002:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[2].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:002:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[2].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:002:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[2].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:030:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[30].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:030:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[30].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:030:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[30].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:030:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[30].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:030:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[30].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:030:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[30].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:030:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[30].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:030:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[30].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:030:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:030:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:030:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:030:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:030:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:030:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:030:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:030:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:030:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:030:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:030:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:030:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:030:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[30].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:030:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[30].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:030:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[30].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:031:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[31].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:031:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[31].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:031:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[31].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:031:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[31].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:031:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[31].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:031:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[31].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:031:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[31].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:031:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[31].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:031:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:031:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:031:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:031:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:031:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:031:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:031:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:031:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:031:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:031:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:031:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:031:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:031:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[31].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:031:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[31].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:031:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[31].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:032:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[32].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:032:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[32].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:032:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[32].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:032:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[32].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:032:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[32].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:032:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[32].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:032:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[32].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:032:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[32].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:032:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:032:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:032:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:032:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:032:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:032:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:032:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:032:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:032:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:032:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:032:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:032:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:032:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[32].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:032:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[32].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:032:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[32].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:033:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[33].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:033:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[33].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:033:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[33].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:033:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[33].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:033:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[33].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:033:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[33].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:033:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[33].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:033:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[33].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:033:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:033:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:033:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:033:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:033:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:033:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:033:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:033:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:033:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:033:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:033:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:033:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:033:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[33].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:033:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[33].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:033:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[33].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:034:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[34].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:034:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[34].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:034:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[34].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:034:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[34].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:034:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[34].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:034:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[34].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:034:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[34].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:034:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[34].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:034:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:034:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:034:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:034:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:034:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:034:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:034:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:034:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:034:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:034:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:034:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:034:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:034:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[34].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:034:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[34].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:034:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[34].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:035:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[35].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:035:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[35].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:035:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[35].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:035:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[35].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:035:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[35].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:035:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[35].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:035:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[35].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:035:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[35].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:035:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:035:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:035:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:035:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:035:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:035:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:035:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:035:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:035:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:035:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:035:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:035:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:035:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[35].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:035:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[35].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:035:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[35].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:036:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[36].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:036:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[36].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:036:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[36].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:036:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[36].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:036:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[36].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:036:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[36].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:036:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[36].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:036:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[36].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:036:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:036:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:036:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:036:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:036:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:036:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:036:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:036:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:036:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:036:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:036:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:036:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:036:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[36].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:036:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[36].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:036:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[36].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:037:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[37].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:037:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[37].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:037:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[37].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:037:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[37].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:037:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[37].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:037:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[37].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:037:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[37].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:037:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[37].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:037:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:037:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:037:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:037:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:037:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:037:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:037:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:037:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:037:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:037:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:037:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:037:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:037:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[37].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:037:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[37].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:037:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[37].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:038:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[38].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:038:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[38].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:038:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[38].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:038:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[38].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:038:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[38].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:038:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[38].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:038:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[38].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:038:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[38].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:038:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:038:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:038:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:038:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:038:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:038:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:038:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:038:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:038:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:038:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:038:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:038:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:038:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[38].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:038:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[38].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:038:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[38].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:039:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[39].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:039:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[39].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:039:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[39].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:039:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[39].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:039:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[39].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:039:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[39].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:039:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[39].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:039:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[39].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:039:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:039:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:039:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:039:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:039:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:039:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:039:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:039:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:039:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:039:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:039:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:039:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:039:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[39].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:039:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[39].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:039:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[39].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:003:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[3].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:003:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[3].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:003:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[3].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:003:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[3].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:003:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[3].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:003:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[3].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:003:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[3].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:003:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[3].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:003:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:003:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:003:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:003:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:003:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:003:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:003:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:003:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:003:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:003:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:003:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:003:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:003:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[3].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:003:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[3].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:003:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[3].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:040:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[40].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:040:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[40].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:040:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[40].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:040:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[40].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:040:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[40].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:040:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[40].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:040:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[40].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:040:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[40].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:040:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:040:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:040:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:040:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:040:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:040:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:040:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:040:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:040:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:040:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:040:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:040:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:040:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[40].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:040:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[40].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:040:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[40].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:041:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[41].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:041:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[41].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:041:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[41].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:041:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[41].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:041:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[41].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:041:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[41].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:041:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[41].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:041:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[41].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:041:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:041:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:041:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:041:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:041:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:041:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:041:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:041:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:041:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:041:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:041:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:041:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:041:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[41].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:041:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[41].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:041:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[41].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:042:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[42].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:042:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[42].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:042:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[42].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:042:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[42].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:042:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[42].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:042:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[42].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:042:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[42].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:042:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[42].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:042:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:042:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:042:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:042:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:042:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:042:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:042:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:042:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:042:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:042:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:042:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:042:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:042:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[42].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:042:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[42].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:042:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[42].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:043:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[43].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:043:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[43].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:043:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[43].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:043:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[43].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:043:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[43].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:043:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[43].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:043:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[43].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:043:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[43].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:043:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:043:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:043:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:043:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:043:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:043:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:043:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:043:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:043:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:043:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:043:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:043:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:043:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[43].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:043:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[43].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:043:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[43].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:044:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[44].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:044:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[44].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:044:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[44].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:044:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[44].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:044:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[44].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:044:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[44].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:044:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[44].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:044:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[44].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:044:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:044:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:044:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:044:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:044:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:044:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:044:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:044:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:044:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:044:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:044:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:044:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:044:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[44].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:044:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[44].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:044:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[44].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:045:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[45].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:045:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[45].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:045:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[45].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:045:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[45].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:045:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[45].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:045:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[45].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:045:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[45].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:045:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[45].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:045:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:045:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:045:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:045:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:045:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:045:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:045:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:045:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:045:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:045:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:045:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:045:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:045:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[45].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:045:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[45].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:045:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[45].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:046:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[46].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:046:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[46].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:046:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[46].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:046:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[46].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:046:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[46].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:046:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[46].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:046:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[46].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:046:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[46].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:046:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:046:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:046:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:046:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:046:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:046:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:046:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:046:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:046:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:046:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:046:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:046:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:046:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[46].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:046:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[46].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:046:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[46].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:047:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[47].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:047:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[47].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:047:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[47].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:047:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[47].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:047:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[47].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:047:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[47].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:047:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[47].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:047:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[47].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:047:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:047:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:047:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:047:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:047:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:047:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:047:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:047:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:047:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:047:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:047:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:047:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:047:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[47].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:047:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[47].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:047:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[47].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:048:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[48].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:048:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[48].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:048:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[48].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:048:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[48].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:048:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[48].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:048:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[48].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:048:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[48].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:048:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[48].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:048:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:048:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:048:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:048:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:048:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:048:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:048:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:048:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:048:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:048:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:048:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:048:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:048:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[48].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:048:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[48].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:048:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[48].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:049:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[49].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:049:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[49].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:049:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[49].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:049:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[49].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:049:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[49].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:049:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[49].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:049:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[49].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:049:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[49].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:049:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:049:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:049:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:049:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:049:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:049:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:049:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:049:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:049:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:049:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:049:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:049:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:049:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[49].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:049:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[49].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:049:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[49].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:004:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[4].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:004:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[4].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:004:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[4].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:004:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[4].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:004:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[4].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:004:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[4].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:004:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[4].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:004:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[4].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:004:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:004:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:004:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:004:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:004:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:004:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:004:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:004:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:004:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:004:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:004:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:004:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:004:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[4].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:004:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[4].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:004:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[4].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:050:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[50].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:050:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[50].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:050:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[50].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:050:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[50].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:050:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[50].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:050:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[50].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:050:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[50].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:050:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[50].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:050:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:050:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:050:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:050:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:050:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:050:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:050:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:050:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:050:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:050:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:050:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:050:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:050:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[50].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:050:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[50].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:050:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[50].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:005:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[5].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:005:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[5].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:005:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[5].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:005:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[5].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:005:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[5].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:005:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[5].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:005:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[5].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:005:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[5].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:005:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:005:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:005:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:005:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:005:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:005:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:005:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:005:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:005:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:005:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:005:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:005:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:005:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[5].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:005:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[5].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:005:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[5].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:006:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[6].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:006:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[6].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:006:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[6].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:006:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[6].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:006:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[6].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:006:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[6].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:006:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[6].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:006:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[6].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:006:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:006:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:006:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:006:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:006:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:006:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:006:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:006:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:006:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:006:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:006:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:006:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:006:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[6].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:006:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[6].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:006:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[6].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:007:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[7].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:007:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[7].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:007:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[7].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:007:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[7].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:007:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[7].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:007:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[7].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:007:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[7].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:007:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[7].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:007:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:007:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:007:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:007:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:007:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:007:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:007:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:007:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:007:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:007:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:007:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:007:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:007:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[7].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:007:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[7].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:007:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[7].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:008:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[8].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:008:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[8].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:008:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[8].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:008:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[8].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:008:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[8].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:008:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[8].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:008:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[8].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:008:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[8].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:008:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:008:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:008:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:008:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:008:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:008:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:008:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:008:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:008:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:008:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:008:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:008:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:008:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[8].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:008:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[8].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:008:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[8].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:009:BeamPermitted_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[9].BeamPermitted
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:009:Info:Desc_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[9].Info.Desc
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:009:Info:DevName_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[9].Info.DevName
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:009:Info:InUse_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[9].Info.InUse
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:009:Info:InfoString_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[9].Info.InfoString
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:009:Info:TypeCode_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[9].Info.TypeCode
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:009:Info:Path_RBV
      - waveform
      - GVL.fbFastFaultOutput2.astFF[9].Info.sPath
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:009:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[9].OK
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:009:Ovrd:Activate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:009:Ovrd:Activate
      - bo
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Activate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:009:Ovrd:Active_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Active
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:009:Ovrd:Deactivate_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:009:Ovrd:Deactivate
      - bo
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Deactivate
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:009:Ovrd:Duration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:009:Ovrd:Duration
      - longout
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Duration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:009:Ovrd:ElapsedTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.ElapsedTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:009:Ovrd:Expiration_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:009:Ovrd:Expiration
      - longout
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.Expiration
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:009:Ovrd:RemainingTime_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.RemainingTime
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:FF:009:Ovrd:StartDT_RBV
      - longin
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:009:Ovrd:StartDT
      - longout
      - GVL.fbFastFaultOutput2.astFF[9].Ovrd.StartDT
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:009:Reset_RBV
      - bi
      - GVL.fbFastFaultOutput2.astFF[9].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FF:009:Reset
      - bo
      - GVL.fbFastFaultOutput2.astFF[9].Reset
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:ClearFault_RBV
      - bi
      - Might be overidden by PLC writes
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:ClearFault
      - bo
      - Might be overidden by PLC writes
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:EnableVeto_RBV
      - bi
      - GVL.fbFastFaultOutput2.i_xVeto
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:EnableVeto
      - bo
      - GVL.fbFastFaultOutput2.i_xVeto
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:FaultHWO_RBV
      - bi
      - Hardware Output Status
      - | io: input


    * - PLC:LFE:MOTION:FFO:02:RegistrationFailure_RBV
      - bi
      - GVL.fbFastFaultOutput2.xFastFaultRegFail
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:RegistrationFailure
      - bo
      - GVL.fbFastFaultOutput2.xFastFaultRegFail
      - | io: output


    * - PLC:LFE:MOTION:FFO:02:OK_RBV
      - bi
      - GVL.fbFastFaultOutput2.xOK
      - | io: input


    * - $(PREFIX)LCLSGeneral:GlobalLogTrickleTrip_RBV
      - bi
      - Tripped by overall log count
      - | io: input


    * - $(PREFIX)LCLSGeneral:LogHost_RBV
      - waveform
      - The log host IP address
      - | io: output


    * - $(PREFIX)LCLSGeneral:LogHost
      - waveform
      - The log host IP address
      - | io: output


    * - $(PREFIX)LCLSGeneral:LogPort_RBV
      - longin
      - The log host UDP port
      - | io: output


    * - $(PREFIX)LCLSGeneral:LogPort
      - longout
      - The log host UDP port
      - | io: output


    * - $(PREFIX)LCLSGeneral:LogMessageCount_RBV
      - longin
      - Total log messages on the last cycle
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:01:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:01:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:01:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:01:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:01:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:01:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:01:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:01:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:01:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:01:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:01:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2L0:XTES:MMS:01:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:01:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:10:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:10:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:10:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:10:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:10:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:10:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:10:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:10:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:10:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:10:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:10:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2L0:XTES:MMS:10:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:10:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:11:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:11:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:11:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:11:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:11:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:11:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:11:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:11:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:11:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:11:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:11:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2L0:XTES:MMS:11:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:11:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:12:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:12:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:12:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:12:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:12:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:12:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:12:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:12:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:12:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:12:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:12:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2L0:XTES:MMS:12:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:12:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:13:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:13:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:13:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:13:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:13:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:13:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:13:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:13:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:13:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:13:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:13:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2L0:XTES:MMS:13:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:13:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:14:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:14:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:14:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:14:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:14:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:14:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:14:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:14:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:14:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:14:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:14:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2L0:XTES:MMS:14:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:14:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:15:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:15:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:15:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:15:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:15:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:15:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:15:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:15:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:15:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:15:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:15:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2L0:XTES:MMS:15:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:15:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:16:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:16:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:16:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:16:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:16:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:16:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:16:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:16:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:16:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:16:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:16:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2L0:XTES:MMS:16:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:16:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:17:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:17:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:17:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:17:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:17:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:17:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:17:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:17:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:17:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:17:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:17:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2L0:XTES:MMS:17:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:17:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:18:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:18:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:18:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:18:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:18:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:18:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:18:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:18:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:18:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:18:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:18:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2L0:XTES:MMS:18:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:18:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:19:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:19:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:19:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:19:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:19:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:19:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:19:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:19:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:19:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:19:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:19:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2L0:XTES:MMS:19:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:19:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:02:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:02:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:02:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:02:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:02:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:02:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:02:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:02:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:02:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:02:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:02:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2L0:XTES:MMS:02:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:02:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - IM1L0:XTES:MMS:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:MMS:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:MMS:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM1L0:XTES:MMS:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:MMS:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:MMS:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM1L0:XTES:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM1L0:XTES:MMS:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - IM1L0:XTES:MMS:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - IM1L0:XTES:MMS:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - IM1L0:XTES:MMS:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:MMS:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM1L0:XTES:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM1L0:XTES:MMS:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM1L0:XTES:MMS:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM1L0:XTES:MMS:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM1L0:XTES:MMS:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM1L0:XTES:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1L0:XTES:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1L0:XTES:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM1L0:XTES:MMS:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM1L0:XTES:MMS:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM1L0:XTES:MMS:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM1L0:XTES:MMS:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM1L0:XTES:MMS:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - IM1L0:XTES:MMS:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM1L0:XTES:MMS:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM1L0:XTES:MMS:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM1L0:XTES:MMS:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM1L0:XTES:MMS:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - IM1L0:XTES:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM1L0:XTES:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM1L0:XTES:MMS:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - IM1L0:XTES:MMS:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - IM1L0:XTES:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM1L0:XTES:MMS:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLZ:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLZ:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLZ:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLZ:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLZ:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLZ:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:CLZ:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:CLZ:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLZ:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM1L0:XTES:CLZ:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:CLZ:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:CLZ:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLZ:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLZ:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLZ:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLZ:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLZ:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLZ:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLZ:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLZ:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:CLZ:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:CLZ:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLZ:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM1L0:XTES:CLZ:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM1L0:XTES:CLZ:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM1L0:XTES:CLZ:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM1L0:XTES:CLZ:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - IM1L0:XTES:CLZ:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM1L0:XTES:CLZ:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - IM1L0:XTES:CLF:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLF:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLF:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLF:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLF:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLF:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLF:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:CLF:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:CLF:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLF:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM1L0:XTES:CLF:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:CLF:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:CLF:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLF:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLF:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLF:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLF:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLF:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM1L0:XTES:CLF:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM1L0:XTES:CLF:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - IM1L0:XTES:CLF:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLF:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLF:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - IM1L0:XTES:CLF:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - IM1L0:XTES:CLF:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLF:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:CLF:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L0:XTES:CLF:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:CLF:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM1L0:XTES:CLF:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM1L0:XTES:CLF:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM1L0:XTES:CLF:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM1L0:XTES:CLF:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM1L0:XTES:CLF:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM1L0:XTES:CLF:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1L0:XTES:CLF:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1L0:XTES:CLF:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM1L0:XTES:CLF:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM1L0:XTES:CLF:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM1L0:XTES:CLF:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM1L0:XTES:CLF:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM1L0:XTES:CLF:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - IM1L0:XTES:CLF:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM1L0:XTES:CLF:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM1L0:XTES:CLF:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM1L0:XTES:CLF:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM1L0:XTES:CLF:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - IM1L0:XTES:CLF:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM1L0:XTES:CLF:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM1L0:XTES:CLF:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - IM1L0:XTES:CLF:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - IM1L0:XTES:CLF:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM1L0:XTES:CLF:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - IM1L1:PPM:MMS:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L1:PPM:MMS:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L1:PPM:MMS:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM1L1:PPM:MMS:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L1:PPM:MMS:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L1:PPM:MMS:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM1L1:PPM:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM1L1:PPM:MMS:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - IM1L1:PPM:MMS:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - IM1L1:PPM:MMS:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - IM1L1:PPM:MMS:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L1:PPM:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM1L1:PPM:MMS:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM1L1:PPM:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM1L1:PPM:MMS:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM1L1:PPM:MMS:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM1L1:PPM:MMS:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM1L1:PPM:MMS:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM1L1:PPM:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1L1:PPM:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM1L1:PPM:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM1L1:PPM:MMS:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM1L1:PPM:MMS:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM1L1:PPM:MMS:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM1L1:PPM:MMS:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM1L1:PPM:MMS:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - IM1L1:PPM:MMS:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM1L1:PPM:MMS:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM1L1:PPM:MMS:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM1L1:PPM:MMS:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM1L1:PPM:MMS:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - IM1L1:PPM:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM1L1:PPM:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM1L1:PPM:MMS:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - IM1L1:PPM:MMS:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - IM1L1:PPM:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM1L1:PPM:MMS:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - IM2L0:XTES:MMS:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:MMS:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:MMS:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM2L0:XTES:MMS:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:MMS:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:MMS:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM2L0:XTES:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM2L0:XTES:MMS:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - IM2L0:XTES:MMS:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - IM2L0:XTES:MMS:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - IM2L0:XTES:MMS:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:MMS:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM2L0:XTES:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM2L0:XTES:MMS:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM2L0:XTES:MMS:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM2L0:XTES:MMS:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM2L0:XTES:MMS:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM2L0:XTES:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM2L0:XTES:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM2L0:XTES:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM2L0:XTES:MMS:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM2L0:XTES:MMS:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM2L0:XTES:MMS:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM2L0:XTES:MMS:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM2L0:XTES:MMS:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - IM2L0:XTES:MMS:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM2L0:XTES:MMS:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM2L0:XTES:MMS:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM2L0:XTES:MMS:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM2L0:XTES:MMS:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - IM2L0:XTES:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM2L0:XTES:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM2L0:XTES:MMS:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - IM2L0:XTES:MMS:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - IM2L0:XTES:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM2L0:XTES:MMS:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLZ:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLZ:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLZ:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLZ:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLZ:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLZ:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:CLZ:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:CLZ:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLZ:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM2L0:XTES:CLZ:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:CLZ:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:CLZ:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLZ:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLZ:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLZ:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLZ:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLZ:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLZ:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLZ:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLZ:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:CLZ:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:CLZ:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLZ:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM2L0:XTES:CLZ:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM2L0:XTES:CLZ:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM2L0:XTES:CLZ:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM2L0:XTES:CLZ:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - IM2L0:XTES:CLZ:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM2L0:XTES:CLZ:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - IM2L0:XTES:CLF:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLF:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLF:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLF:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLF:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLF:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLF:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:CLF:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:CLF:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLF:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM2L0:XTES:CLF:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:CLF:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:CLF:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLF:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLF:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLF:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLF:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLF:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM2L0:XTES:CLF:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM2L0:XTES:CLF:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - IM2L0:XTES:CLF:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLF:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLF:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - IM2L0:XTES:CLF:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - IM2L0:XTES:CLF:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLF:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:CLF:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM2L0:XTES:CLF:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:CLF:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM2L0:XTES:CLF:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM2L0:XTES:CLF:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM2L0:XTES:CLF:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM2L0:XTES:CLF:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM2L0:XTES:CLF:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM2L0:XTES:CLF:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM2L0:XTES:CLF:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM2L0:XTES:CLF:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM2L0:XTES:CLF:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM2L0:XTES:CLF:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM2L0:XTES:CLF:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM2L0:XTES:CLF:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM2L0:XTES:CLF:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - IM2L0:XTES:CLF:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM2L0:XTES:CLF:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM2L0:XTES:CLF:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM2L0:XTES:CLF:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM2L0:XTES:CLF:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - IM2L0:XTES:CLF:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM2L0:XTES:CLF:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM2L0:XTES:CLF:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - IM2L0:XTES:CLF:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - IM2L0:XTES:CLF:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM2L0:XTES:CLF:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - IM3L0:PPM:MMS:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM3L0:PPM:MMS:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM3L0:PPM:MMS:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM3L0:PPM:MMS:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM3L0:PPM:MMS:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM3L0:PPM:MMS:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM3L0:PPM:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM3L0:PPM:MMS:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - IM3L0:PPM:MMS:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - IM3L0:PPM:MMS:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - IM3L0:PPM:MMS:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM3L0:PPM:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM3L0:PPM:MMS:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM3L0:PPM:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM3L0:PPM:MMS:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM3L0:PPM:MMS:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM3L0:PPM:MMS:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM3L0:PPM:MMS:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM3L0:PPM:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM3L0:PPM:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM3L0:PPM:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM3L0:PPM:MMS:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM3L0:PPM:MMS:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM3L0:PPM:MMS:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM3L0:PPM:MMS:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM3L0:PPM:MMS:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - IM3L0:PPM:MMS:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM3L0:PPM:MMS:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM3L0:PPM:MMS:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM3L0:PPM:MMS:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM3L0:PPM:MMS:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - IM3L0:PPM:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM3L0:PPM:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM3L0:PPM:MMS:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - IM3L0:PPM:MMS:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - IM3L0:PPM:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM3L0:PPM:MMS:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - IM4L0:XTES:MMS:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:MMS:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:MMS:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM4L0:XTES:MMS:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:MMS:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:MMS:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM4L0:XTES:MMS:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM4L0:XTES:MMS:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - IM4L0:XTES:MMS:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - IM4L0:XTES:MMS:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - IM4L0:XTES:MMS:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:MMS:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:MMS:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM4L0:XTES:MMS:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM4L0:XTES:MMS:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM4L0:XTES:MMS:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM4L0:XTES:MMS:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM4L0:XTES:MMS:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM4L0:XTES:MMS:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM4L0:XTES:MMS:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM4L0:XTES:MMS:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM4L0:XTES:MMS:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM4L0:XTES:MMS:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM4L0:XTES:MMS:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM4L0:XTES:MMS:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM4L0:XTES:MMS:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - IM4L0:XTES:MMS:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM4L0:XTES:MMS:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM4L0:XTES:MMS:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM4L0:XTES:MMS:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM4L0:XTES:MMS:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - IM4L0:XTES:MMS:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM4L0:XTES:MMS:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM4L0:XTES:MMS:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - IM4L0:XTES:MMS:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - IM4L0:XTES:MMS:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM4L0:XTES:MMS:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLZ:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLZ:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLZ:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLZ:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLZ:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLZ:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:CLZ:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:CLZ:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLZ:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM4L0:XTES:CLZ:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:CLZ:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:CLZ:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLZ:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLZ:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLZ:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLZ:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLZ:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLZ:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLZ:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLZ:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:CLZ:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:CLZ:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLZ:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM4L0:XTES:CLZ:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM4L0:XTES:CLZ:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM4L0:XTES:CLZ:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM4L0:XTES:CLZ:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - IM4L0:XTES:CLZ:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM4L0:XTES:CLZ:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:03:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:03:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:03:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:03:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:03:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:03:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:03:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:03:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:03:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:03:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:03:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2L0:XTES:MMS:03:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:03:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - IM4L0:XTES:CLF:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLF:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLF:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLF:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLF:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLF:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLF:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:CLF:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:CLF:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLF:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - IM4L0:XTES:CLF:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:CLF:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:CLF:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLF:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLF:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLF:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLF:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLF:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - IM4L0:XTES:CLF:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - IM4L0:XTES:CLF:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - IM4L0:XTES:CLF:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLF:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLF:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - IM4L0:XTES:CLF:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - IM4L0:XTES:CLF:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLF:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:CLF:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - IM4L0:XTES:CLF:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:CLF:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM4L0:XTES:CLF:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - IM4L0:XTES:CLF:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM4L0:XTES:CLF:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - IM4L0:XTES:CLF:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM4L0:XTES:CLF:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - IM4L0:XTES:CLF:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM4L0:XTES:CLF:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - IM4L0:XTES:CLF:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - IM4L0:XTES:CLF:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM4L0:XTES:CLF:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - IM4L0:XTES:CLF:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM4L0:XTES:CLF:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - IM4L0:XTES:CLF:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - IM4L0:XTES:CLF:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM4L0:XTES:CLF:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - IM4L0:XTES:CLF:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM4L0:XTES:CLF:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - IM4L0:XTES:CLF:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - IM4L0:XTES:CLF:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - IM4L0:XTES:CLF:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - IM4L0:XTES:CLF:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - IM4L0:XTES:CLF:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - IM4L0:XTES:CLF:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - IM4L0:XTES:CLF:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Y:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Y:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Y:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Y:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Y:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Y:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1L0:WFS:MMS:Y:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1L0:WFS:MMS:Y:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Y:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - PF1L0:WFS:MMS:Y:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1L0:WFS:MMS:Y:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1L0:WFS:MMS:Y:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Y:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Y:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Y:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Y:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Y:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Y:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Y:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Y:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1L0:WFS:MMS:Y:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1L0:WFS:MMS:Y:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Y:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - PF1L0:WFS:MMS:Y:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - PF1L0:WFS:MMS:Y:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - PF1L0:WFS:MMS:Y:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - PF1L0:WFS:MMS:Y:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - PF1L0:WFS:MMS:Y:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - PF1L0:WFS:MMS:Y:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Z:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Z:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Z:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Z:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Z:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Z:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1L0:WFS:MMS:Z:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1L0:WFS:MMS:Z:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Z:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - PF1L0:WFS:MMS:Z:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1L0:WFS:MMS:Z:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1L0:WFS:MMS:Z:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Z:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Z:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Z:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Z:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Z:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Z:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Z:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Z:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1L0:WFS:MMS:Z:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - PF1L0:WFS:MMS:Z:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:Z:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - PF1L0:WFS:MMS:Z:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - PF1L0:WFS:MMS:Z:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - PF1L0:WFS:MMS:Z:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - PF1L0:WFS:MMS:Z:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - PF1L0:WFS:MMS:Z:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - PF1L0:WFS:MMS:Z:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - RTDSL0:DIODE:MMS:01:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - RTDSL0:DIODE:MMS:01:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - RTDSL0:DIODE:MMS:01:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - RTDSL0:DIODE:MMS:01:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - RTDSL0:DIODE:MMS:01:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:LDM:MMS:01:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:LDM:MMS:01:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:LDM:MMS:01:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:LDM:MMS:01:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:LDM:MMS:01:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:LDM:MMS:01:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - RTDSL0:LDM:MMS:01:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - RTDSL0:LDM:MMS:01:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:LDM:MMS:01:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - RTDSL0:LDM:MMS:01:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - RTDSL0:LDM:MMS:01:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - RTDSL0:LDM:MMS:01:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:LDM:MMS:01:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:LDM:MMS:01:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:LDM:MMS:01:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:LDM:MMS:01:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:LDM:MMS:01:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:LDM:MMS:01:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:LDM:MMS:01:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:LDM:MMS:01:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - RTDSL0:LDM:MMS:01:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - RTDSL0:LDM:MMS:01:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - RTDSL0:LDM:MMS:01:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - RTDSL0:LDM:MMS:01:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - RTDSL0:LDM:MMS:01:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - RTDSL0:LDM:MMS:01:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - RTDSL0:LDM:MMS:01:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - RTDSL0:LDM:MMS:01:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - RTDSL0:LDM:MMS:01:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:04:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:04:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:04:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:04:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:04:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:04:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:04:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:04:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:04:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:04:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:04:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2L0:XTES:MMS:04:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:04:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SL1L0:POWER:MMS:BOTTOM:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:BOTTOM:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - SL1L0:POWER:MMS:BOTTOM:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:BOTTOM:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:SOUTH:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SL1L0:POWER:MMS:SOUTH:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:SOUTH:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - SL1L0:POWER:MMS:SOUTH:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:SOUTH:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:TOP:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SL1L0:POWER:MMS:TOP:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:TOP:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - SL1L0:POWER:MMS:TOP:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:TOP:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:NORTH:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SL1L0:POWER:MMS:NORTH:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:NORTH:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - SL1L0:POWER:MMS:NORTH:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SL1L0:POWER:MMS:NORTH:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SL2L0:POWER:MMS:BOTTOM:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:BOTTOM:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - SL2L0:POWER:MMS:BOTTOM:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:BOTTOM:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:SOUTH:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SL2L0:POWER:MMS:SOUTH:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:SOUTH:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - SL2L0:POWER:MMS:SOUTH:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:SOUTH:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:TOP:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SL2L0:POWER:MMS:TOP:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:TOP:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - SL2L0:POWER:MMS:TOP:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:TOP:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:NORTH:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SL2L0:POWER:MMS:NORTH:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:NORTH:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - SL2L0:POWER:MMS:NORTH:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SL2L0:POWER:MMS:NORTH:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:XTAL_ANGLE:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:05:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:05:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:05:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:05:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:05:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:05:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:05:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:05:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:05:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:05:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:05:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2L0:XTES:MMS:05:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:05:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:XTAL_VERT:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:RET_HORIZ:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:RET_VERT:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:DIODE_HORIZ:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - SP1L0:KMONO:MMS:DIODE_VERT:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:06:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:06:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:06:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:06:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:06:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:06:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:06:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:06:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:06:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:06:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:06:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2L0:XTES:MMS:06:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:06:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:07:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:07:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:07:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:07:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:07:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:07:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:07:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:07:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:07:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:07:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:07:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2L0:XTES:MMS:07:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:07:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:08:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:08:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:08:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:08:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:08:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:08:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:08:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:08:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:08:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:08:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:08:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2L0:XTES:MMS:08:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:08:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:bAllBackwardEnable_RBV
      - bi
      - Summary of axis permission to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:PLC:bAllEnable_RBV
      - bi
      - Summary of axis permission to have power
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:PLC:bAllForwardEnable_RBV
      - bi
      - Summary of axis permission to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:PLC:bBrakeRelease_RBV
      - bi
      - TRUE if brake released
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:PLC:bBusy_RBV
      - bi
      - TRUE if in the middle of a command
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:PLC:bDone_RBV
      - bi
      - TRUE if command finished successfully
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:PLC:bEnable_RBV
      - bi
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:09:PLC:bEnable
      - bo
      - Used internally to request enables
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:09:PLC:bEnableDone_RBV
      - bi
      - TRUE if done enabling
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:PLC:bError_RBV
      - bi
      - TRUE if we are in an error state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:09:PLC:bExecute_RBV
      - bi
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:09:PLC:bExecute
      - bo
      - Used internally and by the IOC to start or stop
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:09:PLC:bGantryAxis_RBV
      - bi
      - TRUE if gantry EPS active
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:PLC:bGantryBackwardEnable_RBV
      - bi
      - TRUE if gantry ok to move backward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:PLC:bGantryForwardEnable_RBV
      - bi
      - TRUE if gantry ok to move forward
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:PLC:bHardwareEnable_RBV
      - bi
      - TRUE if STO not hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:PLC:bHome_RBV
      - bi
      - TRUE if at homing switch
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:PLC:bHomeCmd_RBV
      - bi
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:bHomeCmd
      - bo
      - Start the homing routine
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:bHomed_RBV
      - bi
      - TRUE if the motor has been homed
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:bLimitBackwardEnable_RBV
      - bi
      - FALSE if reverse limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:PLC:bLimitForwardEnable_RBV
      - bi
      - FALSE if forward limit hit
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:PLC:bMoveCmd_RBV
      - bi
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:bMoveCmd
      - bo
      - Start a move
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:bPowerSelf_RBV
      - bi
      - FALSE if axis is in PMPS
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:PLC:bReset_RBV
      - bi
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:09:PLC:bReset
      - bo
      - Used internally to reset errors
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: output


    * - AT2L0:XTES:MMS:09:PLC:bSafetyReady_RBV
      - bi
      - TRUE if safe to start a move
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:PLC:bUserEnable_RBV
      - bi
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:09:PLC:bUserEnable
      - bo
      - Used to disable power entirely for an axis
      - | field: ONAM ENABLE
        | field: ZNAM DISABLE
        | io: output


    * - AT2L0:XTES:MMS:09:PLC:fAcceleration_RBV
      - ai
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:fAcceleration
      - ao
      - Used internally and by the IOC to set acceleration
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:fDeceleration_RBV
      - ai
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:fDeceleration
      - ao
      - Used internally and by the IOC to set deceleration
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:fHomePosition_RBV
      - ai
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:fHomePosition
      - ao
      - Used internally and by the IOC to pick home position
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:fPosDiff_RBV
      - ai
      - Position lag difference
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:fPosition_RBV
      - ai
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:fPosition
      - ao
      - Used internally and by the IOC as the set position
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:fVelocity_RBV
      - ai
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:fVelocity
      - ao
      - Used internally and by the IOC to set velocity
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:nBrakeMode_RBV
      - mbbi
      - Describes when the brake will be released
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:nCmdData_RBV
      - longin
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:nCmdData
      - longout
      - Used internally and by the IOC to pass extra args
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:nCommand_RBV
      - longin
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:nCommand
      - longout
      - Used internally and by the IOC to pick move type
      - | io: output


    * - AT2L0:XTES:MMS:09:PLC:nEnableMode_RBV
      - mbbi
      - Describes when the axis will automatically get power
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:nEncoderCount_RBV
      - longin
      - Count from encoder hardware
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:nErrorId_RBV
      - longin
      - Error code if nonzero
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:09:PLC:nHomingMode_RBV
      - mbbi
      - Describes our homing strategy
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:nMotionAxisID_RBV
      - longin
      - Unique ID assigned to each axis in the NC
      - | io: input


    * - AT2L0:XTES:MMS:09:PLC:sErrorMessage_RBV
      - waveform
      - Message to identify the error state
      - | io: input
        | update: 100hz notify


    * - AT2L0:XTES:MMS:09:PLC:sName_RBV
      - waveform
      - PLC program name
      - | io: input


    * - $(PREFIX)AccumulatedFastFaults_RBV
      - longin
      - PMPS_GVL.AccumulatedFF
      - | io: input


    * - $(PREFIX)SuccessfulPreemptions_RBV
      - longin
      - PMPS_GVL.SuccessfulPreemption
      - | io: input


    * - $(PREFIX)0RateBeamCnst:Veto_RBV
      - waveform
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:01:Height_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:01:Width_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:01:OK_RBV
      - bi
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:02:Height_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:02:Width_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:02:OK_RBV
      - bi
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:03:Height_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:03:Width_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:03:OK_RBV
      - bi
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:04:Height_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:04:Width_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)0RateBeamCnst:Apt:04:OK_RBV
      - bi
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)0RateBeamCnst:BeamClassRanges_RBV
      - longin
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)0RateBeamCnst:BeamClass_RBV
      - longin
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)0RateBeamCnst:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)0RateBeamCnst:MachineMode_RBV
      - longin
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)0RateBeamCnst:Rate_RBV
      - longin
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU Hz
        | io: input


    * - $(PREFIX)0RateBeamCnst:Transmission_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX)0RateBeamCnst:PhotonEnergy_RBV
      - ai
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)0RateBeamCnst:eVRanges_RBV
      - longin
      - 0-rate beam constant
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)0RateBeamCnst:Valid_RBV
      - bi
      - 0-rate beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:Veto_RBV
      - waveform
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:01:Height_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:01:Width_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:01:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:02:Height_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:02:Width_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:02:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:03:Height_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:03:Width_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:03:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:04:Height_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:04:Width_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)FullBeamCnst:Apt:04:OK_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:BeamClassRanges_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:BeamClass_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:MachineMode_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)FullBeamCnst:Rate_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU Hz
        | io: input


    * - $(PREFIX)FullBeamCnst:Transmission_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX)FullBeamCnst:PhotonEnergy_RBV
      - ai
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)FullBeamCnst:eVRanges_RBV
      - longin
      - Full beam constant
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)FullBeamCnst:Valid_RBV
      - bi
      - Full beam constant
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)eVRangeCnst_RBV
      - waveform
      - Active eV Range constants
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)K:eVRangeCnst_RBV
      - waveform
      - eV Range constants
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)L:eVRangeCnst_RBV
      - waveform
      - eV Range constants
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)eVRangeHyst_RBV
      - ai
      - eV Range hystersis
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)CurrentBP:Veto_RBV
      - waveform
      - PMPS_GVL.stCurrentBeamParameters.aVetoDevices
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:Apt:01:Height_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.astApertures[1].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)CurrentBP:Apt:01:Width_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.astApertures[1].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)CurrentBP:Apt:01:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astApertures[1].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:Apt:02:Height_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.astApertures[2].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)CurrentBP:Apt:02:Width_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.astApertures[2].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)CurrentBP:Apt:02:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astApertures[2].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:Apt:03:Height_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.astApertures[3].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)CurrentBP:Apt:03:Width_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.astApertures[3].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)CurrentBP:Apt:03:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astApertures[3].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:Apt:04:Height_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.astApertures[4].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)CurrentBP:Apt:04:Width_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.astApertures[4].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)CurrentBP:Apt:04:OK_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.astApertures[4].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:BeamClassRanges_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.nBCRange
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:BeamClass_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.nBeamClass
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:MachineMode_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.nMachineMode
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)CurrentBP:Rate_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.nRate
      - | archive: 1s monitor
        | field: EGU Hz
        | io: input


    * - $(PREFIX)CurrentBP:Transmission_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.nTran
      - | archive: 1s monitor
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX)CurrentBP:PhotonEnergy_RBV
      - ai
      - PMPS_GVL.stCurrentBeamParameters.neV
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)CurrentBP:eVRanges_RBV
      - longin
      - PMPS_GVL.stCurrentBeamParameters.neVRange
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)CurrentBP:Valid_RBV
      - bi
      - PMPS_GVL.stCurrentBeamParameters.xValid
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:Veto_RBV
      - waveform
      - PMPS_GVL.stRequestedBeamParameters.aVetoDevices
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:Apt:01:Height_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.astApertures[1].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)RequestedBP:Apt:01:Width_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.astApertures[1].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)RequestedBP:Apt:01:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astApertures[1].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:Apt:02:Height_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.astApertures[2].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)RequestedBP:Apt:02:Width_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.astApertures[2].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)RequestedBP:Apt:02:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astApertures[2].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:Apt:03:Height_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.astApertures[3].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)RequestedBP:Apt:03:Width_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.astApertures[3].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)RequestedBP:Apt:03:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astApertures[3].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:Apt:04:Height_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.astApertures[4].Height
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)RequestedBP:Apt:04:Width_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.astApertures[4].Width
      - | archive: 1s monitor
        | field: EGU mm
        | io: input


    * - $(PREFIX)RequestedBP:Apt:04:OK_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.astApertures[4].xOK
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:BeamClassRanges_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.nBCRange
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:BeamClass_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.nBeamClass
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:Cohort_RBV
      - longin
      - Cohort inc on each arb cycle
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:MachineMode_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.nMachineMode
      - | archive: 1s monitor
        | io: input


    * - $(PREFIX)RequestedBP:Rate_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.nRate
      - | archive: 1s monitor
        | field: EGU Hz
        | io: input


    * - $(PREFIX)RequestedBP:Transmission_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.nTran
      - | archive: 1s monitor
        | field: HOPR 1
        | field: LOPR 0
        | field: PREC 2
        | io: input


    * - $(PREFIX)RequestedBP:PhotonEnergy_RBV
      - ai
      - PMPS_GVL.stRequestedBeamParameters.neV
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)RequestedBP:eVRanges_RBV
      - longin
      - PMPS_GVL.stRequestedBeamParameters.neVRange
      - | archive: 1s monitor
        | field: EGU eV
        | io: input


    * - $(PREFIX)RequestedBP:Valid_RBV
      - bi
      - PMPS_GVL.stRequestedBeamParameters.xValid
      - | archive: 1s monitor
        | io: input


    * - AT2L0:XTES:TRANSMISSION_RBV
      - ai
      - Overall transmission of AT2L0
      - | io: output


    * - AT2L0:XTES:TRANSMISSION
      - ao
      - Overall transmission of AT2L0
      - | io: output


    * - AT2L0:XTES:MMS:10:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:10:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:10:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:11:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:11:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:11:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:12:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:12:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:12:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:13:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:13:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:13:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:14:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:14:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:14:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:15:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:15:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:15:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:16:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:16:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:16:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:17:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:17:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:17:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:18:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:18:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:18:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:19:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:19:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:19:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:01:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:01:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:01:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:02:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:02:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:02:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:03:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:03:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:03:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:04:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:04:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:04:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:05:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:05:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:05:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:06:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:06:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:06:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:07:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:07:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:07:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:08:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:08:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:08:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:09:FILTER:THICKNESS_RBV
      - ai
      - Filter material thickness
      - | expand: :%.2d:FILTER
        | field: EGU um
        | io: input


    * - AT2L0:XTES:MMS:09:FILTER:TRANSMISSION_RBV
      - ai
      - Current transmission value
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:09:FILTER:MATERIAL_RBV
      - waveform
      - Filter material name
      - | expand: :%.2d:FILTER
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[10].bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[10].bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[10].bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[10].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[10].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[10].enumGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[10].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[10].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:10:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[10].nErrorId
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:10:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[10].sErrorMessage
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[11].bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[11].bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[11].bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[11].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[11].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[11].enumGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[11].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[11].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:11:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[11].nErrorId
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:11:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[11].sErrorMessage
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[12].bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[12].bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[12].bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[12].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[12].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[12].enumGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[12].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[12].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:12:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[12].nErrorId
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:12:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[12].sErrorMessage
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[13].bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[13].bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[13].bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[13].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[13].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[13].enumGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[13].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[13].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:13:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[13].nErrorId
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:13:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[13].sErrorMessage
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[14].bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[14].bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[14].bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[14].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[14].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[14].enumGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[14].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[14].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:14:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[14].nErrorId
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:14:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[14].sErrorMessage
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[15].bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[15].bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[15].bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[15].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[15].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[15].enumGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[15].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[15].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:15:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[15].nErrorId
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:15:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[15].sErrorMessage
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[16].bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[16].bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[16].bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[16].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[16].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[16].enumGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[16].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[16].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:16:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[16].nErrorId
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:16:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[16].sErrorMessage
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[17].bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[17].bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[17].bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[17].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[17].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[17].enumGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[17].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[17].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:17:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[17].nErrorId
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:17:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[17].sErrorMessage
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[18].bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[18].bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[18].bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[18].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[18].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[18].enumGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[18].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[18].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:18:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[18].nErrorId
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:18:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[18].sErrorMessage
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[19].bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[19].bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[19].bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[19].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[19].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[19].enumGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[19].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[19].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:19:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[19].nErrorId
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:19:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[19].sErrorMessage
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[1].bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[1].bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[1].bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[1].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[1].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[1].enumGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[1].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[1].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:01:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[1].nErrorId
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:01:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[1].sErrorMessage
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[2].bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[2].bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[2].bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[2].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[2].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[2].enumGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[2].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[2].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:02:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[2].nErrorId
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:02:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[2].sErrorMessage
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[3].bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[3].bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[3].bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[3].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[3].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[3].enumGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[3].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[3].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:03:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[3].nErrorId
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:03:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[3].sErrorMessage
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[4].bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[4].bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[4].bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[4].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[4].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[4].enumGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[4].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[4].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:04:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[4].nErrorId
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:04:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[4].sErrorMessage
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[5].bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[5].bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[5].bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[5].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[5].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[5].enumGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[5].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[5].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:05:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[5].nErrorId
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:05:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[5].sErrorMessage
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[6].bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[6].bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[6].bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[6].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[6].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[6].enumGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[6].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[6].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:06:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[6].nErrorId
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:06:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[6].sErrorMessage
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[7].bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[7].bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[7].bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[7].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[7].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[7].enumGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[7].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[7].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:07:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[7].nErrorId
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:07:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[7].sErrorMessage
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[8].bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[8].bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[8].bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[8].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[8].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[8].enumGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[8].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[8].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:08:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[8].nErrorId
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:08:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[8].sErrorMessage
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:BUSY_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[9].bBusy
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:DONE_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[9].bDone
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:ERR_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[9].bError
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:RESET_RBV
      - bi
      - PRG_AT2L0_SOLID.fbAT2L0_states[9].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:RESET
      - bo
      - PRG_AT2L0_SOLID.fbAT2L0_states[9].bReset
      - | expand: :%.2d:STATE
        | field: ONAM True
        | field: ZNAM False
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:GET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[9].enumGet
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:SET_RBV
      - mbbi
      - PRG_AT2L0_SOLID.fbAT2L0_states[9].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:SET
      - mbbo
      - PRG_AT2L0_SOLID.fbAT2L0_states[9].enumSet
      - | expand: :%.2d:STATE
        | io: output


    * - AT2L0:XTES:MMS:09:STATE:ERRID_RBV
      - longin
      - PRG_AT2L0_SOLID.fbAT2L0_states[9].nErrorId
      - | expand: :%.2d:STATE
        | io: input


    * - AT2L0:XTES:MMS:09:STATE:ERRMSG_RBV
      - waveform
      - PRG_AT2L0_SOLID.fbAT2L0_states[9].sErrorMessage
      - | expand: :%.2d:STATE
        | io: input


    * - IM1L0:XTES:CLF:LOCK_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM1L0:XTES:CLF:LOCK
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM1L0:XTES:CLZ:LOCK_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM1L0:XTES:CLZ:LOCK
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM1L0:XTES:MFW:ERR:RESET_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.bResetError
      - | io: output


    * - IM1L0:XTES:MFW:ERR:RESET
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.bResetError
      - | io: output


    * - IM1L0:XTES:MFW:RAW:DONE_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.bDone
      - | io: input


    * - IM1L0:XTES:MFW:RAW:SEND_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.bSend
      - | io: output


    * - IM1L0:XTES:MFW:RAW:SEND
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.bSend
      - | io: output


    * - IM1L0:XTES:MFW:RAW:ERR:RECV_RBV
      - mbbi
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.eRecvErrorID
      - | io: input


    * - IM1L0:XTES:MFW:RAW:ERR:SEND_RBV
      - mbbi
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.eSendErrorID
      - | io: input


    * - IM1L0:XTES:MFW:RAW:ERR:SER_RBV
      - mbbi
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.eSerialLineErrorID
      - | io: input


    * - IM1L0:XTES:MFW:RAW:CMD_RBV
      - waveform
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.sCmd
      - | io: output


    * - IM1L0:XTES:MFW:RAW:CMD
      - waveform
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.sCmd
      - | io: output


    * - IM1L0:XTES:MFW:RAW:RESP_RBV
      - waveform
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.fbCom.sResponse
      - | io: input


    * - IM1L0:XTES:MFW:GET_RBV
      - mbbi
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.nGetPos
      - | io: input


    * - IM1L0:XTES:MFW:SET_RBV
      - mbbi
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.nSetPos
      - | io: output


    * - IM1L0:XTES:MFW:SET
      - mbbo
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.nSetPos
      - | io: output


    * - IM1L0:XTES:MFW:ERR:MSG_RBV
      - waveform
      - PRG_IM1L0_XTES.fbIM1L0.fbFilterWheel.sLastError
      - | io: input


    * - IM1L0:XTES:SFW:FLOW_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - IM1L0:XTES:SFW:FLOW
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - IM1L0:XTES:CIL:AUTO_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbLED.bLEDAuto
      - | io: output


    * - IM1L0:XTES:CIL:AUTO
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.fbLED.bLEDAuto
      - | io: output


    * - IM1L0:XTES:CIL:PWR_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM1L0:XTES:CIL:PWR
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM1L0:XTES:CIL:CLK:REMAINING_RBV
      - ai
      - PRG_IM1L0_XTES.fbIM1L0.fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - IM1L0:XTES:CIL:CLK:REMAINING
      - ao
      - PRG_IM1L0_XTES.fbIM1L0.fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - IM1L0:XTES:CIL:CLK:TIMEOUT_RBV
      - ai
      - PRG_IM1L0_XTES.fbIM1L0.fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - IM1L0:XTES:CIL:CLK:TIMEOUT
      - ao
      - PRG_IM1L0_XTES.fbIM1L0.fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - IM1L0:XTES:CAM:PWR_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM1L0:XTES:CAM:PWR
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM1L0:XTES:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L0:XTES:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L0:XTES:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L0:XTES:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L0:XTES:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L0:XTES:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L0:XTES:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L0:XTES:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L0:XTES:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L0:XTES:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L0:XTES:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L0:XTES:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L0:XTES:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L0:XTES:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L0:XTES:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L0:XTES:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L0:XTES:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L0:XTES:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L0:XTES:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L0:XTES:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L0:XTES:MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1L0:XTES:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.bArbiterEnabled
      - | io: output


    * - IM1L0:XTES:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.bArbiterEnabled
      - | io: output


    * - IM1L0:XTES:MMS:STATE:BUSY_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1L0:XTES:MMS:STATE:DONE_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1L0:XTES:MMS:STATE:ERR_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1L0:XTES:MMS:STATE:RESET_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM1L0:XTES:MMS:STATE:RESET
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM1L0:XTES:MMS:STATE:GET_RBV
      - mbbi
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.enumGet
      - | io: input


    * - IM1L0:XTES:MMS:STATE:SET_RBV
      - mbbi
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.enumSet
      - | io: output


    * - IM1L0:XTES:MMS:STATE:SET
      - mbbo
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.enumSet
      - | io: output


    * - IM1L0:XTES:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM1L0:XTES:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM1L0:XTES:MMS:STATE:ERRID_RBV
      - longin
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.nErrorId
      - | io: input


    * - IM1L0:XTES:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_IM1L0_XTES.fbIM1L0.fbStates.sErrorMessage
      - | io: input


    * - IM1L1:PPM:SFM:FLOW_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbFlowMeter.fFlowRate
      - | io: input


    * - IM1L1:PPM:SFM:MA_RBV
      - longin
      - PRG_IM1L1_PPM.fbIM1L1.fbFlowMeter.fRaw
      - | io: input


    * - IM1L1:PPM:CAM:PWR_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM1L1:PPM:CAM:PWR
      - bo
      - PRG_IM1L1_PPM.fbIM1L1.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM1L1:PPM:CAM:CIL:PCT_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM1L1:PPM:CAM:CIL:PCT
      - ao
      - PRG_IM1L1_PPM.fbIM1L1.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM1L1:PPM:SPM:CALIB_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibBase
      - | io: input


    * - IM1L1:PPM:SPM:CALIB_BUFFER_RBV
      - waveform
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibBaseBuffer
      - | io: input


    * - IM1L1:PPM:SPM:MJ_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibMJ
      - | field: EGU mJ
        | io: input


    * - IM1L1:PPM:SPM:MJ_BUFFER_RBV
      - waveform
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - IM1L1:PPM:SPM:CALIB:MJ_RATIO_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM1L1:PPM:SPM:CALIB:MJ_RATIO
      - ao
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM1L1:PPM:SPM:CALIB:OFFSET_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM1L1:PPM:SPM:CALIB:OFFSET
      - ao
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM1L1:PPM:SPM:CALIB:RATIO_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM1L1:PPM:SPM:CALIB:RATIO
      - ao
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM1L1:PPM:SPM:VOLT_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fVoltage
      - | field: EGU mV
        | io: input


    * - IM1L1:PPM:SPM:VOLT_BUFFER_RBV
      - waveform
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - IM1L1:PPM:SPM:STC:CONN_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fbThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM1L1:PPM:SPM:STC:ERR_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fbThermoCouple.bError
      - | io: input


    * - IM1L1:PPM:SPM:STC:TEMP_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbPowerMeter.fbThermoCouple.fTemp
      - | io: input


    * - IM1L1:PPM:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L1:PPM:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L1:PPM:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L1:PPM:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L1:PPM:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L1:PPM:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L1:PPM:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L1:PPM:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L1:PPM:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L1:PPM:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L1:PPM:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L1:PPM:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L1:PPM:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L1:PPM:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L1:PPM:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L1:PPM:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L1:PPM:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM1L1:PPM:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L1:PPM:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM1L1:PPM:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM1L1:PPM:MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM1L1:PPM:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.bArbiterEnabled
      - | io: output


    * - IM1L1:PPM:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.bArbiterEnabled
      - | io: output


    * - IM1L1:PPM:MMS:STATE:BUSY_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1L1:PPM:MMS:STATE:DONE_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1L1:PPM:MMS:STATE:ERR_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM1L1:PPM:MMS:STATE:RESET_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM1L1:PPM:MMS:STATE:RESET
      - bo
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM1L1:PPM:MMS:STATE:GET_RBV
      - mbbi
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.enumGet
      - | io: input


    * - IM1L1:PPM:MMS:STATE:SET_RBV
      - mbbi
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.enumSet
      - | io: output


    * - IM1L1:PPM:MMS:STATE:SET
      - mbbo
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.enumSet
      - | io: output


    * - IM1L1:PPM:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM1L1:PPM:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM1L1:PPM:MMS:STATE:ERRID_RBV
      - longin
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.nErrorId
      - | io: input


    * - IM1L1:PPM:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_IM1L1_PPM.fbIM1L1.fbStates.sErrorMessage
      - | io: input


    * - IM1L1:PPM:YAG:STC:CONN_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbYagThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM1L1:PPM:YAG:STC:ERR_RBV
      - bi
      - PRG_IM1L1_PPM.fbIM1L1.fbYagThermoCouple.bError
      - | io: input


    * - IM1L1:PPM:YAG:STC:TEMP_RBV
      - ai
      - PRG_IM1L1_PPM.fbIM1L1.fbYagThermoCouple.fTemp
      - | io: input


    * - IM2L0:XTES:CLF:LOCK_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM2L0:XTES:CLF:LOCK
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM2L0:XTES:CLZ:LOCK_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM2L0:XTES:CLZ:LOCK
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM2L0:XTES:MFW:ERR:RESET_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.bResetError
      - | io: output


    * - IM2L0:XTES:MFW:ERR:RESET
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.bResetError
      - | io: output


    * - IM2L0:XTES:MFW:RAW:DONE_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.bDone
      - | io: input


    * - IM2L0:XTES:MFW:RAW:SEND_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.bSend
      - | io: output


    * - IM2L0:XTES:MFW:RAW:SEND
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.bSend
      - | io: output


    * - IM2L0:XTES:MFW:RAW:ERR:RECV_RBV
      - mbbi
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.eRecvErrorID
      - | io: input


    * - IM2L0:XTES:MFW:RAW:ERR:SEND_RBV
      - mbbi
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.eSendErrorID
      - | io: input


    * - IM2L0:XTES:MFW:RAW:ERR:SER_RBV
      - mbbi
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.eSerialLineErrorID
      - | io: input


    * - IM2L0:XTES:MFW:RAW:CMD_RBV
      - waveform
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.sCmd
      - | io: output


    * - IM2L0:XTES:MFW:RAW:CMD
      - waveform
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.sCmd
      - | io: output


    * - IM2L0:XTES:MFW:RAW:RESP_RBV
      - waveform
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.fbCom.sResponse
      - | io: input


    * - IM2L0:XTES:MFW:GET_RBV
      - mbbi
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.nGetPos
      - | io: input


    * - IM2L0:XTES:MFW:SET_RBV
      - mbbi
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.nSetPos
      - | io: output


    * - IM2L0:XTES:MFW:SET
      - mbbo
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.nSetPos
      - | io: output


    * - IM2L0:XTES:MFW:ERR:MSG_RBV
      - waveform
      - PRG_IM2L0_XTES.fbIM2L0.fbFilterWheel.sLastError
      - | io: input


    * - IM2L0:XTES:SFW:FLOW_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - IM2L0:XTES:SFW:FLOW
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - IM2L0:XTES:CIL:AUTO_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbLED.bLEDAuto
      - | io: output


    * - IM2L0:XTES:CIL:AUTO
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.fbLED.bLEDAuto
      - | io: output


    * - IM2L0:XTES:CIL:PWR_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM2L0:XTES:CIL:PWR
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM2L0:XTES:CIL:CLK:REMAINING_RBV
      - ai
      - PRG_IM2L0_XTES.fbIM2L0.fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - IM2L0:XTES:CIL:CLK:REMAINING
      - ao
      - PRG_IM2L0_XTES.fbIM2L0.fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - IM2L0:XTES:CIL:CLK:TIMEOUT_RBV
      - ai
      - PRG_IM2L0_XTES.fbIM2L0.fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - IM2L0:XTES:CIL:CLK:TIMEOUT
      - ao
      - PRG_IM2L0_XTES.fbIM2L0.fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - IM2L0:XTES:CAM:PWR_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM2L0:XTES:CAM:PWR
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM2L0:XTES:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2L0:XTES:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2L0:XTES:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2L0:XTES:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2L0:XTES:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2L0:XTES:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2L0:XTES:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2L0:XTES:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2L0:XTES:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2L0:XTES:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2L0:XTES:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2L0:XTES:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2L0:XTES:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2L0:XTES:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2L0:XTES:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2L0:XTES:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2L0:XTES:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM2L0:XTES:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2L0:XTES:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM2L0:XTES:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM2L0:XTES:MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM2L0:XTES:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.bArbiterEnabled
      - | io: output


    * - IM2L0:XTES:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.bArbiterEnabled
      - | io: output


    * - IM2L0:XTES:MMS:STATE:BUSY_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM2L0:XTES:MMS:STATE:DONE_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM2L0:XTES:MMS:STATE:ERR_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM2L0:XTES:MMS:STATE:RESET_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM2L0:XTES:MMS:STATE:RESET
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM2L0:XTES:MMS:STATE:GET_RBV
      - mbbi
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.enumGet
      - | io: input


    * - IM2L0:XTES:MMS:STATE:SET_RBV
      - mbbi
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.enumSet
      - | io: output


    * - IM2L0:XTES:MMS:STATE:SET
      - mbbo
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.enumSet
      - | io: output


    * - IM2L0:XTES:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM2L0:XTES:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM2L0:XTES:MMS:STATE:ERRID_RBV
      - longin
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.nErrorId
      - | io: input


    * - IM2L0:XTES:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_IM2L0_XTES.fbIM2L0.fbStates.sErrorMessage
      - | io: input


    * - IM3L0:PPM:SFM:FLOW_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbFlowMeter.fFlowRate
      - | io: input


    * - IM3L0:PPM:SFM:MA_RBV
      - longin
      - PRG_IM3L0_PPM.fbIM3L0.fbFlowMeter.fRaw
      - | io: input


    * - IM3L0:PPM:CAM:PWR_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM3L0:PPM:CAM:PWR
      - bo
      - PRG_IM3L0_PPM.fbIM3L0.fbGige.bGigePower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM3L0:PPM:CAM:CIL:PCT_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM3L0:PPM:CAM:CIL:PCT
      - ao
      - PRG_IM3L0_PPM.fbIM3L0.fbGige.fIlluminatorPercent
      - | EGU: %
        | io: output


    * - IM3L0:PPM:SPM:CALIB_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibBase
      - | io: input


    * - IM3L0:PPM:SPM:CALIB_BUFFER_RBV
      - waveform
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibBaseBuffer
      - | io: input


    * - IM3L0:PPM:SPM:MJ_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibMJ
      - | field: EGU mJ
        | io: input


    * - IM3L0:PPM:SPM:MJ_BUFFER_RBV
      - waveform
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibMJBuffer
      - | field: EGU mJ
        | io: input


    * - IM3L0:PPM:SPM:CALIB:MJ_RATIO_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM3L0:PPM:SPM:CALIB:MJ_RATIO
      - ao
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibMJRatio
      - | io: output


    * - IM3L0:PPM:SPM:CALIB:OFFSET_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM3L0:PPM:SPM:CALIB:OFFSET
      - ao
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibRelOffset
      - | io: output


    * - IM3L0:PPM:SPM:CALIB:RATIO_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM3L0:PPM:SPM:CALIB:RATIO
      - ao
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fCalibRelRatio
      - | io: output


    * - IM3L0:PPM:SPM:VOLT_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fVoltage
      - | field: EGU mV
        | io: input


    * - IM3L0:PPM:SPM:VOLT_BUFFER_RBV
      - waveform
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fVoltageBuffer
      - | field: EGU mV
        | io: input


    * - IM3L0:PPM:SPM:STC:CONN_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fbThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM3L0:PPM:SPM:STC:ERR_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fbThermoCouple.bError
      - | io: input


    * - IM3L0:PPM:SPM:STC:TEMP_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbPowerMeter.fbThermoCouple.fTemp
      - | io: input


    * - IM3L0:PPM:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3L0:PPM:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3L0:PPM:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3L0:PPM:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3L0:PPM:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3L0:PPM:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3L0:PPM:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3L0:PPM:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3L0:PPM:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3L0:PPM:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3L0:PPM:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3L0:PPM:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3L0:PPM:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3L0:PPM:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3L0:PPM:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3L0:PPM:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3L0:PPM:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM3L0:PPM:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3L0:PPM:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM3L0:PPM:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM3L0:PPM:MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM3L0:PPM:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.bArbiterEnabled
      - | io: output


    * - IM3L0:PPM:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.bArbiterEnabled
      - | io: output


    * - IM3L0:PPM:MMS:STATE:BUSY_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM3L0:PPM:MMS:STATE:DONE_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM3L0:PPM:MMS:STATE:ERR_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM3L0:PPM:MMS:STATE:RESET_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM3L0:PPM:MMS:STATE:RESET
      - bo
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM3L0:PPM:MMS:STATE:GET_RBV
      - mbbi
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.enumGet
      - | io: input


    * - IM3L0:PPM:MMS:STATE:SET_RBV
      - mbbi
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.enumSet
      - | io: output


    * - IM3L0:PPM:MMS:STATE:SET
      - mbbo
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.enumSet
      - | io: output


    * - IM3L0:PPM:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM3L0:PPM:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM3L0:PPM:MMS:STATE:ERRID_RBV
      - longin
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.nErrorId
      - | io: input


    * - IM3L0:PPM:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_IM3L0_PPM.fbIM3L0.fbStates.sErrorMessage
      - | io: input


    * - IM3L0:PPM:YAG:STC:CONN_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbYagThermoCouple.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - IM3L0:PPM:YAG:STC:ERR_RBV
      - bi
      - PRG_IM3L0_PPM.fbIM3L0.fbYagThermoCouple.bError
      - | io: input


    * - IM3L0:PPM:YAG:STC:TEMP_RBV
      - ai
      - PRG_IM3L0_PPM.fbIM3L0.fbYagThermoCouple.fTemp
      - | io: input


    * - IM4L0:SCRP:LED:01:PWR_RBV
      - bi
      - PRG_IM4L0_XTES.bIM4L0_SCRP_LED_01
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM4L0:SCRP:LED:01:PWR
      - bo
      - PRG_IM4L0_XTES.bIM4L0_SCRP_LED_01
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM4L0:XTES:CLF:LOCK_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM4L0:XTES:CLF:LOCK
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.bFocusLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM4L0:XTES:CLZ:LOCK_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM4L0:XTES:CLZ:LOCK
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.bZoomLock
      - | field: ONAM Locked
        | field: ZNAM Unlocked
        | io: output


    * - IM4L0:XTES:MFW:ERR:RESET_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.bResetError
      - | io: output


    * - IM4L0:XTES:MFW:ERR:RESET
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.bResetError
      - | io: output


    * - IM4L0:XTES:MFW:RAW:DONE_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.bDone
      - | io: input


    * - IM4L0:XTES:MFW:RAW:SEND_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.bSend
      - | io: output


    * - IM4L0:XTES:MFW:RAW:SEND
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.bSend
      - | io: output


    * - IM4L0:XTES:MFW:RAW:ERR:RECV_RBV
      - mbbi
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.eRecvErrorID
      - | io: input


    * - IM4L0:XTES:MFW:RAW:ERR:SEND_RBV
      - mbbi
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.eSendErrorID
      - | io: input


    * - IM4L0:XTES:MFW:RAW:ERR:SER_RBV
      - mbbi
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.eSerialLineErrorID
      - | io: input


    * - IM4L0:XTES:MFW:RAW:CMD_RBV
      - waveform
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.sCmd
      - | io: output


    * - IM4L0:XTES:MFW:RAW:CMD
      - waveform
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.sCmd
      - | io: output


    * - IM4L0:XTES:MFW:RAW:RESP_RBV
      - waveform
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.fbCom.sResponse
      - | io: input


    * - IM4L0:XTES:MFW:GET_RBV
      - mbbi
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.nGetPos
      - | io: input


    * - IM4L0:XTES:MFW:SET_RBV
      - mbbi
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.nSetPos
      - | io: output


    * - IM4L0:XTES:MFW:SET
      - mbbo
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.nSetPos
      - | io: output


    * - IM4L0:XTES:MFW:ERR:MSG_RBV
      - waveform
      - PRG_IM4L0_XTES.fbIM4L0.fbFilterWheel.sLastError
      - | io: input


    * - IM4L0:XTES:SFW:FLOW_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - IM4L0:XTES:SFW:FLOW
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - IM4L0:XTES:CIL:AUTO_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbLED.bLEDAuto
      - | io: output


    * - IM4L0:XTES:CIL:AUTO
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.fbLED.bLEDAuto
      - | io: output


    * - IM4L0:XTES:CIL:PWR_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM4L0:XTES:CIL:PWR
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.fbLED.bLEDPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM4L0:XTES:CIL:CLK:REMAINING_RBV
      - ai
      - PRG_IM4L0_XTES.fbIM4L0.fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - IM4L0:XTES:CIL:CLK:REMAINING
      - ao
      - PRG_IM4L0_XTES.fbIM4L0.fbLED.fLEDRemaining
      - | field: EGU min
        | io: output


    * - IM4L0:XTES:CIL:CLK:TIMEOUT_RBV
      - ai
      - PRG_IM4L0_XTES.fbIM4L0.fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - IM4L0:XTES:CIL:CLK:TIMEOUT
      - ao
      - PRG_IM4L0_XTES.fbIM4L0.fbLED.fLEDTimeOut
      - | field: EGU min
        | io: output


    * - IM4L0:XTES:CAM:PWR_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM4L0:XTES:CAM:PWR
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.fbOpal.bOpalPower
      - | field: ONAM ON
        | field: ZNAM OFF
        | io: output


    * - IM4L0:XTES:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4L0:XTES:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4L0:XTES:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4L0:XTES:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4L0:XTES:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4L0:XTES:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4L0:XTES:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4L0:XTES:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4L0:XTES:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4L0:XTES:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4L0:XTES:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4L0:XTES:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4L0:XTES:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4L0:XTES:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4L0:XTES:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4L0:XTES:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4L0:XTES:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - IM4L0:XTES:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4L0:XTES:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - IM4L0:XTES:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - IM4L0:XTES:MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - IM4L0:XTES:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.bArbiterEnabled
      - | io: output


    * - IM4L0:XTES:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.bArbiterEnabled
      - | io: output


    * - IM4L0:XTES:MMS:STATE:BUSY_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM4L0:XTES:MMS:STATE:DONE_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM4L0:XTES:MMS:STATE:ERR_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - IM4L0:XTES:MMS:STATE:RESET_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM4L0:XTES:MMS:STATE:RESET
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - IM4L0:XTES:MMS:STATE:GET_RBV
      - mbbi
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.enumGet
      - | io: input


    * - IM4L0:XTES:MMS:STATE:SET_RBV
      - mbbi
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.enumSet
      - | io: output


    * - IM4L0:XTES:MMS:STATE:SET
      - mbbo
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.enumSet
      - | io: output


    * - IM4L0:XTES:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM4L0:XTES:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - IM4L0:XTES:MMS:STATE:ERRID_RBV
      - longin
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.nErrorId
      - | io: input


    * - IM4L0:XTES:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_IM4L0_XTES.fbIM4L0.fbStates.sErrorMessage
      - | io: input


    * - PF1L0:WFS:MMS:STATE:01:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:01:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:01:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:01:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:01:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:01:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:01:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:01:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1L0:WFS:MMS:STATE:01:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1L0:WFS:MMS:STATE:01:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:01:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:01:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:01:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:01:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:01:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:02:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:02:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:02:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:02:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:02:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:02:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:02:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:02:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1L0:WFS:MMS:STATE:02:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1L0:WFS:MMS:STATE:02:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:02:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:02:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:02:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:02:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:02:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:03:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:03:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:03:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:03:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:03:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:03:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:03:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:03:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1L0:WFS:MMS:STATE:03:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1L0:WFS:MMS:STATE:03:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:03:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:03:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:03:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:03:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:03:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:04:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:04:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:04:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:04:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:04:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:04:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:04:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:04:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1L0:WFS:MMS:STATE:04:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1L0:WFS:MMS:STATE:04:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:04:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:04:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:04:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:04:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:04:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:05:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:05:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:05:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:05:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:05:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:05:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:05:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:05:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1L0:WFS:MMS:STATE:05:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1L0:WFS:MMS:STATE:05:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:05:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:05:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:05:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:05:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:05:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:06:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:06:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:06:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:06:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:06:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:06:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:06:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:06:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1L0:WFS:MMS:STATE:06:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1L0:WFS:MMS:STATE:06:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:06:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:06:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:06:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:06:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:06:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:07:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:07:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:07:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:07:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:07:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:07:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:07:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:07:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1L0:WFS:MMS:STATE:07:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1L0:WFS:MMS:STATE:07:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:07:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:07:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:07:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:07:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:07:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:08:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:08:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:08:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:08:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:08:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:08:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:08:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:08:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1L0:WFS:MMS:STATE:08:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1L0:WFS:MMS:STATE:08:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:08:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:08:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:08:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:08:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:08:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:09:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:09:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:09:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | expand: %.2d
        | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - PF1L0:WFS:MMS:STATE:09:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:09:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:09:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:09:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:09:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1L0:WFS:MMS:STATE:09:DELTA
      - ao
      - Max deviation from position at this state
      - | expand: %.2d
        | field: DRVL 0.0
        | io: output


    * - PF1L0:WFS:MMS:STATE:09:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:09:SETPOINT
      - ao
      - Axis position associated with this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:09:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:09:VELO
      - ao
      - Speed at which to move to this state
      - | expand: %.2d
        | io: output


    * - PF1L0:WFS:MMS:STATE:09:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | expand: %.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:09:NAME_RBV
      - waveform
      - Name of this position state
      - | expand: %.2d
        | io: input


    * - PF1L0:WFS:MMS:STATE:PMPS:ARB:ENABLE_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.bArbiterEnabled
      - | io: output


    * - PF1L0:WFS:MMS:STATE:PMPS:ARB:ENABLE
      - bo
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.bArbiterEnabled
      - | io: output


    * - PF1L0:WFS:MMS:STATE:BUSY_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - PF1L0:WFS:MMS:STATE:DONE_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - PF1L0:WFS:MMS:STATE:ERR_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - PF1L0:WFS:MMS:STATE:RESET_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - PF1L0:WFS:MMS:STATE:RESET
      - bo
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.bReset
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - PF1L0:WFS:MMS:STATE:GET_RBV
      - mbbi
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.enumGet
      - | io: input


    * - PF1L0:WFS:MMS:STATE:SET_RBV
      - mbbi
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.enumSet
      - | io: output


    * - PF1L0:WFS:MMS:STATE:SET
      - mbbo
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.enumSet
      - | io: output


    * - PF1L0:WFS:MMS:STATE:PMPS:MAINT_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - PF1L0:WFS:MMS:STATE:PMPS:MAINT
      - bo
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.fbStatePMPS.bMaintMode
      - | io: output


    * - PF1L0:WFS:MMS:STATE:ERRID_RBV
      - longin
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.nErrorId
      - | io: input


    * - PF1L0:WFS:MMS:STATE:ERRMSG_RBV
      - waveform
      - PRG_PF1L0_WFS.fbPF1L0.fbStates.sErrorMessage
      - | io: input


    * - PF1L0:WFS:STC:01:CONN_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbThermoCouple1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - PF1L0:WFS:STC:01:ERR_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbThermoCouple1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - PF1L0:WFS:STC:01:TEMP_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbThermoCouple1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - PF1L0:WFS:STC:02:CONN_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbThermoCouple2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - PF1L0:WFS:STC:02:ERR_RBV
      - bi
      - PRG_PF1L0_WFS.fbPF1L0.fbThermoCouple2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - PF1L0:WFS:STC:02:TEMP_RBV
      - ai
      - PRG_PF1L0_WFS.fbPF1L0.fbThermoCouple2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL1L0:POWER:GO_RBV
      - bi
      - PRG_SL1L0_POWER.bExecuteMotion
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:GO
      - bo
      - PRG_SL1L0_POWER.bExecuteMotion
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:BOTTOM:RTD:01:CONN_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL1L0:POWER:BOTTOM:RTD:01:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:BOTTOM:RTD:01:TEMP_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL1L0:POWER:BOTTOM:RTD:02:CONN_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL1L0:POWER:BOTTOM:RTD:02:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:BOTTOM:RTD:02:TEMP_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.RTD_Bottom_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL1L0:POWER:NORTH:RTD:01:CONN_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_North_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL1L0:POWER:NORTH:RTD:01:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_North_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:NORTH:RTD:01:TEMP_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.RTD_North_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL1L0:POWER:NORTH:RTD:02:CONN_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_North_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL1L0:POWER:NORTH:RTD:02:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_North_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:NORTH:RTD:02:TEMP_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.RTD_North_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL1L0:POWER:SOUTH:RTD:01:CONN_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_South_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL1L0:POWER:SOUTH:RTD:01:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_South_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:SOUTH:RTD:01:TEMP_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.RTD_South_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL1L0:POWER:SOUTH:RTD:02:CONN_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_South_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL1L0:POWER:SOUTH:RTD:02:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_South_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:SOUTH:RTD:02:TEMP_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.RTD_South_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL1L0:POWER:TOP:RTD:01:CONN_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL1L0:POWER:TOP:RTD:01:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:TOP:RTD:01:TEMP_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL1L0:POWER:TOP:RTD:02:CONN_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL1L0:POWER:TOP:RTD:02:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:TOP:RTD:02:TEMP_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.RTD_TOP_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL1L0:POWER:BLOCK_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.bBlock
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:BLOCK
      - bo
      - PRG_SL1L0_POWER.fbSL1L0.bBlock
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:CLOSE_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.bClose
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:CLOSE
      - bo
      - PRG_SL1L0_POWER.fbSL1L0.bClose
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:PMPS_OK_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.bMoveOk
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:OPEN_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.bOpen
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:OPEN
      - bo
      - PRG_SL1L0_POWER.fbSL1L0.bOpen
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:BOTTOM:AT_STATE_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbBottom.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:BOTTOM:BUSY_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbBottom.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:BOTTOM:DMOV_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbBottom.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:BOTTOM:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbBottom.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:BOTTOM:GO_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbBottom.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:BOTTOM:GO
      - bo
      - PRG_SL1L0_POWER.fbSL1L0.fbBottom.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:BOTTOM:ERRMSG_RBV
      - waveform
      - PRG_SL1L0_POWER.fbSL1L0.fbBottom.sError
      - | io: input


    * - SL1L0:POWER:BOTTOM:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:BOTTOM:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:BOTTOM:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:BOTTOM:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - SL1L0:POWER:BOTTOM:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - SL1L0:POWER:BOTTOM:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - SL1L0:POWER:BOTTOM:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - SL1L0:POWER:BOTTOM:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - SL1L0:POWER:BOTTOM:DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - SL1L0:POWER:BOTTOM:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - SL1L0:POWER:BOTTOM:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - SL1L0:POWER:BOTTOM:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - SL1L0:POWER:BOTTOM:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - SL1L0:POWER:BOTTOM:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - SL1L0:POWER:BOTTOM:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - SL1L0:POWER:FSW:FLOW_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - SL1L0:POWER:FSW:FLOW
      - bo
      - PRG_SL1L0_POWER.fbSL1L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - SL1L0:POWER:NORTH:AT_STATE_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbNorth.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:NORTH:BUSY_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbNorth.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:NORTH:DMOV_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbNorth.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:NORTH:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbNorth.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:NORTH:GO_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbNorth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:NORTH:GO
      - bo
      - PRG_SL1L0_POWER.fbSL1L0.fbNorth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:NORTH:ERRMSG_RBV
      - waveform
      - PRG_SL1L0_POWER.fbSL1L0.fbNorth.sError
      - | io: input


    * - SL1L0:POWER:NORTH:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:NORTH:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:NORTH:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:NORTH:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - SL1L0:POWER:NORTH:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - SL1L0:POWER:NORTH:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - SL1L0:POWER:NORTH:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - SL1L0:POWER:NORTH:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - SL1L0:POWER:NORTH:DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - SL1L0:POWER:NORTH:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - SL1L0:POWER:NORTH:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - SL1L0:POWER:NORTH:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - SL1L0:POWER:NORTH:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - SL1L0:POWER:NORTH:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - SL1L0:POWER:NORTH:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - SL1L0:POWER:SOUTH:AT_STATE_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbSouth.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:SOUTH:BUSY_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbSouth.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:SOUTH:DMOV_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbSouth.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:SOUTH:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbSouth.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:SOUTH:GO_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbSouth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:SOUTH:GO
      - bo
      - PRG_SL1L0_POWER.fbSL1L0.fbSouth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:SOUTH:ERRMSG_RBV
      - waveform
      - PRG_SL1L0_POWER.fbSL1L0.fbSouth.sError
      - | io: input


    * - SL1L0:POWER:SOUTH:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:SOUTH:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:SOUTH:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:SOUTH:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - SL1L0:POWER:SOUTH:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - SL1L0:POWER:SOUTH:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - SL1L0:POWER:SOUTH:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - SL1L0:POWER:SOUTH:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - SL1L0:POWER:SOUTH:DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - SL1L0:POWER:SOUTH:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - SL1L0:POWER:SOUTH:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - SL1L0:POWER:SOUTH:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - SL1L0:POWER:SOUTH:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - SL1L0:POWER:SOUTH:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - SL1L0:POWER:SOUTH:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - SL1L0:POWER:TOP:AT_STATE_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbTop.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:TOP:BUSY_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbTop.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:TOP:DMOV_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbTop.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:TOP:ERR_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbTop.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL1L0:POWER:TOP:GO_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.fbTop.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:TOP:GO
      - bo
      - PRG_SL1L0_POWER.fbSL1L0.fbTop.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL1L0:POWER:TOP:ERRMSG_RBV
      - waveform
      - PRG_SL1L0_POWER.fbSL1L0.fbTop.sError
      - | io: input


    * - SL1L0:POWER:TOP:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:TOP:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:TOP:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL1L0:POWER:TOP:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - SL1L0:POWER:TOP:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - SL1L0:POWER:TOP:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - SL1L0:POWER:TOP:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - SL1L0:POWER:TOP:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - SL1L0:POWER:TOP:DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - SL1L0:POWER:TOP:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - SL1L0:POWER:TOP:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - SL1L0:POWER:TOP:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - SL1L0:POWER:TOP:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - SL1L0:POWER:TOP:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - SL1L0:POWER:TOP:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - SL1L0:POWER:ACTUAL_XWIDTH_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rActApertureSizeX
      - | io: output


    * - SL1L0:POWER:ACTUAL_XWIDTH
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rActApertureSizeX
      - | io: output


    * - SL1L0:POWER:ACTUAL_YWIDTH_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rActApertureSizeY
      - | io: output


    * - SL1L0:POWER:ACTUAL_YWIDTH
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rActApertureSizeY
      - | io: output


    * - SL1L0:POWER:ACTUAL_XCENTER_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rActCenterX
      - | io: output


    * - SL1L0:POWER:ACTUAL_XCENTER
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rActCenterX
      - | io: output


    * - SL1L0:POWER:ACTUAL_YCENTER_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rActCenterY
      - | io: output


    * - SL1L0:POWER:ACTUAL_YCENTER
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rActCenterY
      - | io: output


    * - SL1L0:POWER:ZeroOffset_Bottom_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rEncoderOffsetBottom
      - | io: output


    * - SL1L0:POWER:ZeroOffset_Bottom
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rEncoderOffsetBottom
      - | io: output


    * - SL1L0:POWER:ZeroOffset_North_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rEncoderOffsetNorth
      - | io: output


    * - SL1L0:POWER:ZeroOffset_North
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rEncoderOffsetNorth
      - | io: output


    * - SL1L0:POWER:ZeroOffset_South_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rEncoderOffsetSouth
      - | io: output


    * - SL1L0:POWER:ZeroOffset_South
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rEncoderOffsetSouth
      - | io: output


    * - SL1L0:POWER:Offset_Top_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rEncoderOffsetTop
      - | io: output


    * - SL1L0:POWER:Offset_Top
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rEncoderOffsetTop
      - | io: output


    * - SL1L0:POWER:XWID_REQ_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rReqApertureSizeX
      - | io: output


    * - SL1L0:POWER:XWID_REQ
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rReqApertureSizeX
      - | io: output


    * - SL1L0:POWER:YWID_REQ_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rReqApertureSizeY
      - | io: output


    * - SL1L0:POWER:YWID_REQ
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rReqApertureSizeY
      - | io: output


    * - SL1L0:POWER:XCEN_REQ_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rReqCenterX
      - | io: output


    * - SL1L0:POWER:XCEN_REQ
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rReqCenterX
      - | io: output


    * - SL1L0:POWER:YCEN_REQ_RBV
      - ai
      - PRG_SL1L0_POWER.fbSL1L0.rReqCenterY
      - | io: output


    * - SL1L0:POWER:YCEN_REQ
      - ao
      - PRG_SL1L0_POWER.fbSL1L0.rReqCenterY
      - | io: output


    * - SL1L0:POWER:XCEN_SETZERO_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.rSetCenterX
      - | io: output


    * - SL1L0:POWER:XCEN_SETZERO
      - bo
      - PRG_SL1L0_POWER.fbSL1L0.rSetCenterX
      - | io: output


    * - SL1L0:POWER:YCEN_SETZERO_RBV
      - bi
      - PRG_SL1L0_POWER.fbSL1L0.rSetCenterY
      - | io: output


    * - SL1L0:POWER:YCEN_SETZERO
      - bo
      - PRG_SL1L0_POWER.fbSL1L0.rSetCenterY
      - | io: output


    * - SL2L0:POWER:GO_RBV
      - bi
      - PRG_SL2L0_POWER.bExecuteMotion
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:GO
      - bo
      - PRG_SL2L0_POWER.bExecuteMotion
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:BOTTOM:RTD:01:CONN_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL2L0:POWER:BOTTOM:RTD:01:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:BOTTOM:RTD:01:TEMP_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL2L0:POWER:BOTTOM:RTD:02:CONN_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL2L0:POWER:BOTTOM:RTD:02:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:BOTTOM:RTD:02:TEMP_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.RTD_Bottom_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL2L0:POWER:NORTH:RTD:01:CONN_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_North_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL2L0:POWER:NORTH:RTD:01:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_North_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:NORTH:RTD:01:TEMP_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.RTD_North_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL2L0:POWER:NORTH:RTD:02:CONN_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_North_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL2L0:POWER:NORTH:RTD:02:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_North_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:NORTH:RTD:02:TEMP_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.RTD_North_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL2L0:POWER:SOUTH:RTD:01:CONN_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_South_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL2L0:POWER:SOUTH:RTD:01:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_South_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:SOUTH:RTD:01:TEMP_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.RTD_South_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL2L0:POWER:SOUTH:RTD:02:CONN_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_South_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL2L0:POWER:SOUTH:RTD:02:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_South_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:SOUTH:RTD:02:TEMP_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.RTD_South_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL2L0:POWER:TOP:RTD:01:CONN_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_1.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL2L0:POWER:TOP:RTD:01:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_1.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:TOP:RTD:01:TEMP_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_1.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL2L0:POWER:TOP:RTD:02:CONN_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_2.bConnected
      - | field: ONAM Connected
        | field: ZNAM Disconnected
        | io: input


    * - SL2L0:POWER:TOP:RTD:02:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_2.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:TOP:RTD:02:TEMP_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.RTD_TOP_2.fTemp
      - | field: EGU C
        | field: PREC 2
        | io: input


    * - SL2L0:POWER:BLOCK_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.bBlock
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:BLOCK
      - bo
      - PRG_SL2L0_POWER.fbSL2L0.bBlock
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:CLOSE_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.bClose
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:CLOSE
      - bo
      - PRG_SL2L0_POWER.fbSL2L0.bClose
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:PMPS_OK_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.bMoveOk
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:OPEN_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.bOpen
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:OPEN
      - bo
      - PRG_SL2L0_POWER.fbSL2L0.bOpen
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:BOTTOM:AT_STATE_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbBottom.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:BOTTOM:BUSY_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbBottom.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:BOTTOM:DMOV_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbBottom.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:BOTTOM:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbBottom.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:BOTTOM:GO_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbBottom.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:BOTTOM:GO
      - bo
      - PRG_SL2L0_POWER.fbSL2L0.fbBottom.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:BOTTOM:ERRMSG_RBV
      - waveform
      - PRG_SL2L0_POWER.fbSL2L0.fbBottom.sError
      - | io: input


    * - SL2L0:POWER:BOTTOM:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:BOTTOM:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:BOTTOM:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:BOTTOM:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - SL2L0:POWER:BOTTOM:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - SL2L0:POWER:BOTTOM:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - SL2L0:POWER:BOTTOM:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - SL2L0:POWER:BOTTOM:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - SL2L0:POWER:BOTTOM:DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - SL2L0:POWER:BOTTOM:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - SL2L0:POWER:BOTTOM:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - SL2L0:POWER:BOTTOM:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - SL2L0:POWER:BOTTOM:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - SL2L0:POWER:BOTTOM:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - SL2L0:POWER:BOTTOM:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - SL2L0:POWER:FSW:FLOW_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - SL2L0:POWER:FSW:FLOW
      - bo
      - PRG_SL2L0_POWER.fbSL2L0.fbFlowSwitch.bFlowOk
      - | field: ONAM OK
        | field: ZNAM LOW
        | io: output


    * - SL2L0:POWER:NORTH:AT_STATE_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbNorth.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:NORTH:BUSY_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbNorth.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:NORTH:DMOV_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbNorth.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:NORTH:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbNorth.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:NORTH:GO_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbNorth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:NORTH:GO
      - bo
      - PRG_SL2L0_POWER.fbSL2L0.fbNorth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:NORTH:ERRMSG_RBV
      - waveform
      - PRG_SL2L0_POWER.fbSL2L0.fbNorth.sError
      - | io: input


    * - SL2L0:POWER:NORTH:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:NORTH:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:NORTH:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:NORTH:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - SL2L0:POWER:NORTH:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - SL2L0:POWER:NORTH:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - SL2L0:POWER:NORTH:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - SL2L0:POWER:NORTH:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - SL2L0:POWER:NORTH:DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - SL2L0:POWER:NORTH:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - SL2L0:POWER:NORTH:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - SL2L0:POWER:NORTH:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - SL2L0:POWER:NORTH:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - SL2L0:POWER:NORTH:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - SL2L0:POWER:NORTH:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - SL2L0:POWER:SOUTH:AT_STATE_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbSouth.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:SOUTH:BUSY_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbSouth.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:SOUTH:DMOV_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbSouth.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:SOUTH:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbSouth.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:SOUTH:GO_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbSouth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:SOUTH:GO
      - bo
      - PRG_SL2L0_POWER.fbSL2L0.fbSouth.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:SOUTH:ERRMSG_RBV
      - waveform
      - PRG_SL2L0_POWER.fbSL2L0.fbSouth.sError
      - | io: input


    * - SL2L0:POWER:SOUTH:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:SOUTH:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:SOUTH:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:SOUTH:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - SL2L0:POWER:SOUTH:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - SL2L0:POWER:SOUTH:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - SL2L0:POWER:SOUTH:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - SL2L0:POWER:SOUTH:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - SL2L0:POWER:SOUTH:DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - SL2L0:POWER:SOUTH:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - SL2L0:POWER:SOUTH:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - SL2L0:POWER:SOUTH:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - SL2L0:POWER:SOUTH:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - SL2L0:POWER:SOUTH:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - SL2L0:POWER:SOUTH:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - SL2L0:POWER:TOP:AT_STATE_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbTop.bAtState
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:TOP:BUSY_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbTop.bBusy
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:TOP:DMOV_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbTop.bDone
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:TOP:ERR_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbTop.bError
      - | field: ONAM True
        | field: ZNAM False
        | io: input


    * - SL2L0:POWER:TOP:GO_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.fbTop.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:TOP:GO
      - bo
      - PRG_SL2L0_POWER.fbSL2L0.fbTop.bExecute
      - | field: ONAM True
        | field: ZNAM False
        | io: output


    * - SL2L0:POWER:TOP:ERRMSG_RBV
      - waveform
      - PRG_SL2L0_POWER.fbSL2L0.fbTop.sError
      - | io: input


    * - SL2L0:POWER:TOP:LOCKED_RBV
      - bi
      - TRUE if state is immutable
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:TOP:MOVE_OK_RBV
      - bi
      - TRUE if the move would be safe
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:TOP:VALID_RBV
      - bi
      - TRUE if this is a real state
      - | field: ONAM TRUE
        | field: ZNAM FALSE
        | io: input


    * - SL2L0:POWER:TOP:ACCL_RBV
      - ai
      - Acceleration to use for moves to this state
      - | io: output


    * - SL2L0:POWER:TOP:ACCL
      - ao
      - Acceleration to use for moves to this state
      - | io: output


    * - SL2L0:POWER:TOP:DCCL_RBV
      - ai
      - Deceleration to use for moves to this state
      - | io: output


    * - SL2L0:POWER:TOP:DCCL
      - ao
      - Deceleration to use for moves to this state
      - | io: output


    * - SL2L0:POWER:TOP:DELTA_RBV
      - ai
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - SL2L0:POWER:TOP:DELTA
      - ao
      - Max deviation from position at this state
      - | field: DRVL 0.0
        | io: output


    * - SL2L0:POWER:TOP:SETPOINT_RBV
      - ai
      - Axis position associated with this state
      - | io: output


    * - SL2L0:POWER:TOP:SETPOINT
      - ao
      - Axis position associated with this state
      - | io: output


    * - SL2L0:POWER:TOP:VELO_RBV
      - ai
      - Speed at which to move to this state
      - | io: output


    * - SL2L0:POWER:TOP:VELO
      - ao
      - Speed at which to move to this state
      - | io: output


    * - SL2L0:POWER:TOP:ENCODER_RBV
      - longin
      - Encoder count associated with this state
      - | io: input


    * - SL2L0:POWER:TOP:NAME_RBV
      - waveform
      - Name of this position state
      - | io: input


    * - SL2L0:POWER:ACTUAL_XWIDTH_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rActApertureSizeX
      - | io: output


    * - SL2L0:POWER:ACTUAL_XWIDTH
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rActApertureSizeX
      - | io: output


    * - SL2L0:POWER:ACTUAL_YWIDTH_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rActApertureSizeY
      - | io: output


    * - SL2L0:POWER:ACTUAL_YWIDTH
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rActApertureSizeY
      - | io: output


    * - SL2L0:POWER:ACTUAL_XCENTER_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rActCenterX
      - | io: output


    * - SL2L0:POWER:ACTUAL_XCENTER
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rActCenterX
      - | io: output


    * - SL2L0:POWER:ACTUAL_YCENTER_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rActCenterY
      - | io: output


    * - SL2L0:POWER:ACTUAL_YCENTER
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rActCenterY
      - | io: output


    * - SL2L0:POWER:ZeroOffset_Bottom_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rEncoderOffsetBottom
      - | io: output


    * - SL2L0:POWER:ZeroOffset_Bottom
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rEncoderOffsetBottom
      - | io: output


    * - SL2L0:POWER:ZeroOffset_North_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rEncoderOffsetNorth
      - | io: output


    * - SL2L0:POWER:ZeroOffset_North
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rEncoderOffsetNorth
      - | io: output


    * - SL2L0:POWER:ZeroOffset_South_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rEncoderOffsetSouth
      - | io: output


    * - SL2L0:POWER:ZeroOffset_South
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rEncoderOffsetSouth
      - | io: output


    * - SL2L0:POWER:Offset_Top_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rEncoderOffsetTop
      - | io: output


    * - SL2L0:POWER:Offset_Top
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rEncoderOffsetTop
      - | io: output


    * - SL2L0:POWER:XWID_REQ_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rReqApertureSizeX
      - | io: output


    * - SL2L0:POWER:XWID_REQ
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rReqApertureSizeX
      - | io: output


    * - SL2L0:POWER:YWID_REQ_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rReqApertureSizeY
      - | io: output


    * - SL2L0:POWER:YWID_REQ
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rReqApertureSizeY
      - | io: output


    * - SL2L0:POWER:XCEN_REQ_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rReqCenterX
      - | io: output


    * - SL2L0:POWER:XCEN_REQ
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rReqCenterX
      - | io: output


    * - SL2L0:POWER:YCEN_REQ_RBV
      - ai
      - PRG_SL2L0_POWER.fbSL2L0.rReqCenterY
      - | io: output


    * - SL2L0:POWER:YCEN_REQ
      - ao
      - PRG_SL2L0_POWER.fbSL2L0.rReqCenterY
      - | io: output


    * - SL2L0:POWER:XCEN_SETZERO_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.rSetCenterX
      - | io: output


    * - SL2L0:POWER:XCEN_SETZERO
      - bo
      - PRG_SL2L0_POWER.fbSL2L0.rSetCenterX
      - | io: output


    * - SL2L0:POWER:YCEN_SETZERO_RBV
      - bi
      - PRG_SL2L0_POWER.fbSL2L0.rSetCenterY
      - | io: output


    * - SL2L0:POWER:YCEN_SETZERO
      - bo
      - PRG_SL2L0_POWER.fbSL2L0.rSetCenterY
      - | io: output


    * - RTDSL0:MPA:01:FF_Reset_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.i_xReset
      - | io: output


    * - RTDSL0:MPA:01:FF_Reset
      - bo
      - RTDSL0.RTDSL0_MPA_01.i_xReset
      - | io: output


    * - RTDSL0:MPA:01:ERROR_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.bErrorPresent
      - | io: output


    * - RTDSL0:MPA:01:ERROR
      - bo
      - RTDSL0.RTDSL0_MPA_01.q_stAct.bErrorPresent
      - | io: output


    * - RTDSL0:MPA:01:ILKOK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.bILK_OK
      - | io: input


    * - RTDSL0:MPA:01:INSERT_OK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.bInsertOK
      - | io: input


    * - RTDSL0:MPA:01:IN_CMD_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.bInsert_SW
      - | io: output


    * - RTDSL0:MPA:01:IN_CMD
      - bo
      - RTDSL0.RTDSL0_MPA_01.q_stAct.bInsert_SW
      - | io: output


    * - RTDSL0:MPA:01:RETRACT_OK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.bRetractOK
      - | io: input


    * - RTDSL0:MPA:01:OUT_CMD_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.bRetract_SW
      - | io: output


    * - RTDSL0:MPA:01:OUT_CMD
      - bo
      - RTDSL0.RTDSL0_MPA_01.q_stAct.bRetract_SW
      - | io: output


    * - RTDSL0:MPA:01:POS_STATE_RBV
      - mbbi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.eState
      - | field: ONST INSERTED
        | field: THST INVALID
        | field: TWST MOVING
        | field: ZRST RETRACTED
        | io: input
        | type: mbbi


    * - RTDSL0:MPA:01:IN_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.i_bInLS
      - | io: input


    * - RTDSL0:MPA:01:OUT_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.i_bOutLS
      - | io: input


    * - RTDSL0:MPA:01:RETRACT_DO_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.q_bInsert
      - | io: input


    * - RTDSL0:MPA:01:INSERT_DO_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.q_stAct.q_bRetract
      - | io: input


    * - RTDSL0:MPA:01:MOT_DONE_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.xDone
      - | io: output


    * - RTDSL0:MPA:01:MOT_DONE
      - bo
      - RTDSL0.RTDSL0_MPA_01.xDone
      - | io: output


    * - RTDSL0:MPA:01:MPS_FAULT_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_01.xMPS_OK
      - | io: output


    * - RTDSL0:MPA:01:MPS_FAULT
      - bo
      - RTDSL0.RTDSL0_MPA_01.xMPS_OK
      - | io: output


    * - RTDSL0:MPA:02:FF_Reset_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.i_xReset
      - | io: output


    * - RTDSL0:MPA:02:FF_Reset
      - bo
      - RTDSL0.RTDSL0_MPA_02.i_xReset
      - | io: output


    * - RTDSL0:MPA:02:ERROR_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.bErrorPresent
      - | io: output


    * - RTDSL0:MPA:02:ERROR
      - bo
      - RTDSL0.RTDSL0_MPA_02.q_stAct.bErrorPresent
      - | io: output


    * - RTDSL0:MPA:02:ILKOK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.bILK_OK
      - | io: input


    * - RTDSL0:MPA:02:INSERT_OK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.bInsertOK
      - | io: input


    * - RTDSL0:MPA:02:IN_CMD_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.bInsert_SW
      - | io: output


    * - RTDSL0:MPA:02:IN_CMD
      - bo
      - RTDSL0.RTDSL0_MPA_02.q_stAct.bInsert_SW
      - | io: output


    * - RTDSL0:MPA:02:RETRACT_OK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.bRetractOK
      - | io: input


    * - RTDSL0:MPA:02:OUT_CMD_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.bRetract_SW
      - | io: output


    * - RTDSL0:MPA:02:OUT_CMD
      - bo
      - RTDSL0.RTDSL0_MPA_02.q_stAct.bRetract_SW
      - | io: output


    * - RTDSL0:MPA:02:POS_STATE_RBV
      - mbbi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.eState
      - | field: ONST INSERTED
        | field: THST INVALID
        | field: TWST MOVING
        | field: ZRST RETRACTED
        | io: input
        | type: mbbi


    * - RTDSL0:MPA:02:IN_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.i_bInLS
      - | io: input


    * - RTDSL0:MPA:02:OUT_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.i_bOutLS
      - | io: input


    * - RTDSL0:MPA:02:RETRACT_DO_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.q_bInsert
      - | io: input


    * - RTDSL0:MPA:02:INSERT_DO_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.q_stAct.q_bRetract
      - | io: input


    * - RTDSL0:MPA:02:MOT_DONE_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.xDone
      - | io: output


    * - RTDSL0:MPA:02:MOT_DONE
      - bo
      - RTDSL0.RTDSL0_MPA_02.xDone
      - | io: output


    * - RTDSL0:MPA:02:MPS_FAULT_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_02.xMPS_OK
      - | io: output


    * - RTDSL0:MPA:02:MPS_FAULT
      - bo
      - RTDSL0.RTDSL0_MPA_02.xMPS_OK
      - | io: output


    * - RTDSL0:MPA:03:FF_Reset_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.i_xReset
      - | io: output


    * - RTDSL0:MPA:03:FF_Reset
      - bo
      - RTDSL0.RTDSL0_MPA_03.i_xReset
      - | io: output


    * - RTDSL0:MPA:03:ERROR_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.bErrorPresent
      - | io: output


    * - RTDSL0:MPA:03:ERROR
      - bo
      - RTDSL0.RTDSL0_MPA_03.q_stAct.bErrorPresent
      - | io: output


    * - RTDSL0:MPA:03:ILKOK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.bILK_OK
      - | io: input


    * - RTDSL0:MPA:03:INSERT_OK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.bInsertOK
      - | io: input


    * - RTDSL0:MPA:03:IN_CMD_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.bInsert_SW
      - | io: output


    * - RTDSL0:MPA:03:IN_CMD
      - bo
      - RTDSL0.RTDSL0_MPA_03.q_stAct.bInsert_SW
      - | io: output


    * - RTDSL0:MPA:03:RETRACT_OK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.bRetractOK
      - | io: input


    * - RTDSL0:MPA:03:OUT_CMD_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.bRetract_SW
      - | io: output


    * - RTDSL0:MPA:03:OUT_CMD
      - bo
      - RTDSL0.RTDSL0_MPA_03.q_stAct.bRetract_SW
      - | io: output


    * - RTDSL0:MPA:03:POS_STATE_RBV
      - mbbi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.eState
      - | field: ONST INSERTED
        | field: THST INVALID
        | field: TWST MOVING
        | field: ZRST RETRACTED
        | io: input
        | type: mbbi


    * - RTDSL0:MPA:03:IN_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.i_bInLS
      - | io: input


    * - RTDSL0:MPA:03:OUT_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.i_bOutLS
      - | io: input


    * - RTDSL0:MPA:03:RETRACT_DO_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.q_bInsert
      - | io: input


    * - RTDSL0:MPA:03:INSERT_DO_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.q_stAct.q_bRetract
      - | io: input


    * - RTDSL0:MPA:03:MOT_DONE_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.xDone
      - | io: output


    * - RTDSL0:MPA:03:MOT_DONE
      - bo
      - RTDSL0.RTDSL0_MPA_03.xDone
      - | io: output


    * - RTDSL0:MPA:03:MPS_FAULT_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_03.xMPS_OK
      - | io: output


    * - RTDSL0:MPA:03:MPS_FAULT
      - bo
      - RTDSL0.RTDSL0_MPA_03.xMPS_OK
      - | io: output


    * - RTDSL0:MPA:04:FF_Reset_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.i_xReset
      - | io: output


    * - RTDSL0:MPA:04:FF_Reset
      - bo
      - RTDSL0.RTDSL0_MPA_04.i_xReset
      - | io: output


    * - RTDSL0:MPA:04:ERROR_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.bErrorPresent
      - | io: output


    * - RTDSL0:MPA:04:ERROR
      - bo
      - RTDSL0.RTDSL0_MPA_04.q_stAct.bErrorPresent
      - | io: output


    * - RTDSL0:MPA:04:ILKOK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.bILK_OK
      - | io: input


    * - RTDSL0:MPA:04:INSERT_OK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.bInsertOK
      - | io: input


    * - RTDSL0:MPA:04:IN_CMD_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.bInsert_SW
      - | io: output


    * - RTDSL0:MPA:04:IN_CMD
      - bo
      - RTDSL0.RTDSL0_MPA_04.q_stAct.bInsert_SW
      - | io: output


    * - RTDSL0:MPA:04:RETRACT_OK_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.bRetractOK
      - | io: input


    * - RTDSL0:MPA:04:OUT_CMD_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.bRetract_SW
      - | io: output


    * - RTDSL0:MPA:04:OUT_CMD
      - bo
      - RTDSL0.RTDSL0_MPA_04.q_stAct.bRetract_SW
      - | io: output


    * - RTDSL0:MPA:04:POS_STATE_RBV
      - mbbi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.eState
      - | field: ONST INSERTED
        | field: THST INVALID
        | field: TWST MOVING
        | field: ZRST RETRACTED
        | io: input
        | type: mbbi


    * - RTDSL0:MPA:04:IN_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.i_bInLS
      - | io: input


    * - RTDSL0:MPA:04:OUT_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.i_bOutLS
      - | io: input


    * - RTDSL0:MPA:04:RETRACT_DO_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.q_bInsert
      - | io: input


    * - RTDSL0:MPA:04:INSERT_DO_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.q_stAct.q_bRetract
      - | io: input


    * - RTDSL0:MPA:04:MOT_DONE_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.xDone
      - | io: output


    * - RTDSL0:MPA:04:MOT_DONE
      - bo
      - RTDSL0.RTDSL0_MPA_04.xDone
      - | io: output


    * - RTDSL0:MPA:04:MPS_FAULT_RBV
      - bi
      - RTDSL0.RTDSL0_MPA_04.xMPS_OK
      - | io: output


    * - RTDSL0:MPA:04:MPS_FAULT
      - bo
      - RTDSL0.RTDSL0_MPA_04.xMPS_OK
      - | io: output



